module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 46);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("http-status");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.genderToNumber = genderToNumber;
exports.log = log;

var _logToFile = __webpack_require__(126);

var _logToFile2 = _interopRequireDefault(_logToFile);

var _fs = __webpack_require__(17);

var _fs2 = _interopRequireDefault(_fs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function genderToNumber(gender) {
	if (gender == 'male') return 1;
	if (gender == 'female') return 2;
	return 0;
}

function log(message = '', fileName = '') {
	// eslint-disable-next-line no-console
	console.log(`---------------log---------------:\n fileName: ${fileName} \n: message ${message}`);
	let pathFile = `./logs/${fileName || 'default.log'}`;

	_fs2.default.exists(pathFile, function (exists) {
		if (exists) {
			(0, _logToFile2.default)(message, pathFile);
		} else {
			_fs2.default.writeFile(pathFile, '', function () {
				(0, _logToFile2.default)(message, pathFile);
			});
		}
	});

	// eslint-disable-next-line no-console
	console.log('\n');
}

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("express");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("mongoose");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("express-validation");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = require("joi");

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = require("mongoose-autopopulate");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = require("mongoose-paginate");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = require("mongoose-unique-validator");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.logPost = logPost;
exports.setSlugUrl = setSlugUrl;

var _slugify = __webpack_require__(14);

var _slugify2 = _interopRequireDefault(_slugify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function logPost(schema, options) {
	schema.post('init', function (doc) {
		console.log(`${options.schemaName || 'Model'}: ${doc.name || doc.title || doc._id} has been initialized`);
	});

	schema.post('validate', function (doc) {
		console.log(`${options.schemaName || 'Model'}: ${doc.name || doc.title || doc._id} has been validated`);
	});

	schema.post('save', function (doc) {
		console.log(`${options.schemaName || 'Model'}: ${doc.name || doc.title || doc._id} has been saved`);
	});

	schema.post('remove', function (doc) {
		console.log(`${options.schemaName || 'Model'}: ${doc.name || doc.title || doc._id} has been removed`);
	});
}

// eslint-disable-next-line no-unused-vars
/* eslint-disable no-console */
function setSlugUrl(schema, options) {
	schema.pre('validate', function (next) {
		if (this.name || this.title) {
			if (schema.paths.slug) {
				this.slug = (0, _slugify2.default)(this.name || this.title, {
					lower: true
				});
			}
			if (schema.paths.url) {
				this.url = `${(0, _slugify2.default)(this.name || this.title, {
					lower: true
				})}_${String(this._id).slice(-6)}`; // ObjectId.valueOf
			}
		}
		let nameOrigin = this.nameOrigin || (this.name || this.title) + `_${String(this._id).slice(-6)}`;
		if (schema.paths.slugOrigin) {
			this.slugOrigin = (0, _slugify2.default)(nameOrigin);
		}
		next();
	});
}

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = require("validator");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
/* eslint-disable indent */
/* eslint-disable no-undef */
const devConfig = {
	HOST: process.env.HOST || 'localhost',
	PORT: process.env.PORT || 3000,
	// MONGO_URL: 'mongodb://localhost:27017/gr2019-dev'
	MONGO_URL: 'mongodb://hungdm:30c15b7800213b2844e224a1f5fbdfb0@43.239.223.206:27017/gr2019-dev'
};

const testConfig = {
	HOST: process.env.HOST || 'localhost',
	PORT: process.env.PORT || 3000,
	MONGO_URL: 'mongodb://hungdm:30c15b7800213b2844e224a1f5fbdfb0@43.239.223.206:27017/gr2019-test'
};

const prodConfig = {
	HOST: process.env.HOST || '43.239.223.206',
	PORT: process.env.PORT || 3000,
	MONGO_URL: 'mongodb://hungdm:30c15b7800213b2844e224a1f5fbdfb0@43.239.223.206:27017/gr2019'
};

const defaultConfig = {
	API_PREFIX: '/api',
	JWT_SECRET: 'hihihihihihihi',
	FACEBOOK_APP_ID: '329324544364004',
	FACEBOOK_APP_SECRET: '6521fe7adaa99b2038e728dccfcb0885',
	UPLOAD_VBEE_URL: 'https://upload.vbee.vn/api/v1/upload/file',
	UPLOAD_VBEE_TOKEN: '30065a2c-cdf1-4316-8827-488557133f54',
	UPLOAD_FILE_MAX: 10 * 1000000,
	UPLOAD_IMAGE_MAX: 5 * 1000000,
	UPLOAD_MOVIE_MAX: 3000 * 1000000,
	UPLOAD_SUBTITLE_MAX: 10 * 1000000,
	UPLOAD_VOICEOVER_MAX: 200 * 1000000
};

function envConfig(env) {
	switch (env) {
		case 'development':
			return devConfig;
		case 'test':
			return testConfig;
		default:
			return prodConfig;
	}
}

exports.default = Object.assign({}, defaultConfig, envConfig(process.env.NODE_ENV));

// openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout cert.key -out cert.pem -config req.cnf -sha256

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.accessControl = accessControl;

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _accessControlService = __webpack_require__(115);

var _accessControlService2 = _interopRequireDefault(_accessControlService);

var _helper = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function accessControl(access, resource) {
	return function checkPermission(req, res, next) {
		req.permission = _accessControlService2.default.can(req.user.role).execute(access).on(resource);

		if (req.permission.granted) {
			req.body = req.permission.filter(req.body);

			return next();
		} else {
			(0, _helper.log)(`${String(req.user.role).toUpperCase()} ${access} ${resource}`, 'error-role.log');

			return res.status(_httpStatus2.default.FORBIDDEN).json({
				status: 'Not Permission',
				message: `${String(req.user.role).toUpperCase()} can not ${access} ${resource}`
			});
		}
	};
}

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.parseParamList = parseParamList;
async function parseParamList(req, res, next) {
	const limit = parseInt(req.query.limit, 0) || 10;
	const page = parseInt(req.query.page, 0) || 1;
	const offset = parseInt(req.query.offset, 0) || 0;
	const search = String(req.query.search || '');
	const filter = JSON.parse(req.query.filter || '{}');
	const sort = req.query.sort || '-createdAt';

	req.parsedParams = {
		page,
		limit,
		search,
		filter,
		sort
	};

	if (offset) {
		req.parsedParams.offset = offset;
	}
	next();
}

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = require("slugify");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.authFacebook = exports.authJwt = exports.authLocal = undefined;

var _passport = __webpack_require__(40);

var _passport2 = _interopRequireDefault(_passport);

var _passportLocal = __webpack_require__(131);

var _passportFacebook = __webpack_require__(129);

var _passportJwt = __webpack_require__(130);

var _userModel = __webpack_require__(24);

var _userModel2 = _interopRequireDefault(_userModel);

var _constants = __webpack_require__(11);

var _constants2 = _interopRequireDefault(_constants);

var _helper = __webpack_require__(1);

var _axios = __webpack_require__(38);

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const localOpts = {
	usernameField: 'email'
};

const localStrategy = new _passportLocal.Strategy(localOpts, async (email, password, done) => {
	try {
		const user = await _userModel2.default.findOne({
			email
		});
		if (!user) {
			return done(null, false);
		} else if (!user.authenticateUser(password)) {
			return done(null, false);
		}
		return done(null, user);
	} catch (e) {
		return done(e, false);
	}
});

// Jwt strategy
const jwtOpts = {
	jwtFromRequest: _passportJwt.ExtractJwt.fromAuthHeaderWithScheme('jwt'),
	secretOrKey: _constants2.default.JWT_SECRET
};

const jwtStrategy = new _passportJwt.Strategy(jwtOpts, async (payload, done) => {
	try {
		const user = await _userModel2.default.findById(payload._id);

		if (!user) {
			return done(null, false);
		}

		return done(null, user);
	} catch (e) {
		return done(e, false);
	}
});

// Facebook
const fbOpts = {
	clientID: _constants2.default.FACEBOOK_APP_ID,
	clientSecret: _constants2.default.FACEBOOK_APP_SECRET,
	callbackURL: 'http://localhost:3000/api/users/auth/facebook/callback',
	enableProof: true,
	profileFields: ['id', 'displayName', 'email', 'photos', 'gender', 'profileUrl']
};

const facebookStrategy = new _passportFacebook.Strategy(fbOpts, async (accessToken, refreshToken, profile, done) => {
	try {
		const user = await _userModel2.default.findOne({
			email: profile._json.email
		});

		if (user) {
			return done(null, user);
		} else {
			let newUser = new _userModel2.default();
			newUser.fbId = profile.id;
			newUser.name = profile._json.name;
			newUser.gender = (0, _helper.genderToNumber)(profile.gender);
			newUser.email = profile._json.email || profile.id + '@facebook.com';
			newUser.provier = 'facebook';
			if (profile.photos && profile.photos.length && profile.photos[0].value) {
				newUser.avatarUrl = profile.photos[0].value;
			}
			newUser.token = accessToken;

			await newUser.save();
			return done(null, newUser);
		}
	} catch (e) {
		return done(e, false);
	}
});

_passport2.default.use(localStrategy);
_passport2.default.use(jwtStrategy);
_passport2.default.use(facebookStrategy);

const authLocal = exports.authLocal = _passport2.default.authenticate('local', { session: false });
const authJwt = exports.authJwt = _passport2.default.authenticate('jwt', { session: false });
// export const authFacebook = passport.authenticate('facebook', {
// 	session: false,
// 	display: 'popup'
// })

const authFacebook = exports.authFacebook = async function (access_token) {
	const appLink = 'https://graph.facebook.com/oauth/access_token?client_id=' + _constants2.default.FACEBOOK_APP_ID + '&client_secret=' + _constants2.default.FACEBOOK_APP_SECRET + '&grant_type=client_credentials';

	const app = await _axios2.default.get(appLink);
	const appToken = app && app.data && app.data.access_token;

	const link = 'https://graph.facebook.com/debug_token?input_token=' + access_token + '&access_token=' + appToken;
	const fbAuthUserData = await _axios2.default.get(link);
	const fbAuthUser = fbAuthUserData && fbAuthUserData.data && fbAuthUserData.data.data;

	return fbAuthUser;
};

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.parseParam = parseParam;
async function parseParam(req, res, next) {
	const limit = parseInt(req.query.limit, 0) || 10;
	const page = parseInt(req.query.page, 0) || 0;
	const offset = parseInt(req.query.offset, 0) || 0;
	const sort = String(req.query.sort) || '-createdAt';

	req.parsedParams = {
		limit,
		offset,
		page,
		sort
	};

	next();
}

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.existFollowMovie = existFollowMovie;
exports.existFollowUser = existFollowUser;
exports.existLike = existLike;
exports.existMember = existMember;

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _followMovieModel = __webpack_require__(20);

var _followMovieModel2 = _interopRequireDefault(_followMovieModel);

var _likeModel = __webpack_require__(22);

var _likeModel2 = _interopRequireDefault(_likeModel);

var _memberModel = __webpack_require__(23);

var _memberModel2 = _interopRequireDefault(_memberModel);

var _helper = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

async function existFollowMovie(req, res, next) {
	try {
		res.followMovie = await _followMovieModel2.default.findOne(Object.assign({}, req.body, { user: req.user }));

		if (res.followMovie) {
			return res.status(_httpStatus2.default.OK).json({
				data: res.followMovie
			});
		}

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function existFollowUser(req, res, next) {
	try {
		res.followUser = await _followMovieModel2.default.findOne(Object.assign({}, req.body, { user: req.user }));

		if (res.followUser) {
			return res.status(_httpStatus2.default.OK).json({
				data: res.followUser
			});
		}

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function existLike(req, res, next) {
	try {
		res.like = await _likeModel2.default.findOne(Object.assign({}, req.body, { user: req.user }));

		if (res.like) {
			return res.status(_httpStatus2.default.OK).json({
				data: res.like
			});
		}

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function existMember(req, res, next) {
	try {
		res.member = await _memberModel2.default.findOne(Object.assign({}, req.body, { user: req.user }));

		if (res.member) {
			return res.status(_httpStatus2.default.OK).json({
				data: res.member
			});
		}

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ownMovie = ownMovie;

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _movieModel = __webpack_require__(21);

var _movieModel2 = _interopRequireDefault(_movieModel);

var _helper = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// update req.movie
async function ownMovie(req, res, next) {
	try {
		req.movie = await _movieModel2.default.findById(req.params.id);

		if (!req.movie.uploader.equals(req.user._id)) {
			return res.sendStatus(_httpStatus2.default.NON_AUTHORITATIVE_INFORMATION);
		}

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _slugify = __webpack_require__(14);

var _slugify2 = _interopRequireDefault(_slugify);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;


let followMovieSchema = new _mongoose.Schema({
	user: {
		type: ObjectId,
		required: [true, 'User is required!'],
		trim: true
	},
	movie: {
		type: ObjectId,
		required: [true, 'Movie is required!'],
		trim: true
	}
}, {
	timestamps: true
});

followMovieSchema.statics = {};

followMovieSchema.pre('save', function (next) {
	return next();
});

followMovieSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
followMovieSchema.plugin(_mongoosePaginate2.default);
followMovieSchema.plugin(_mongooseAutopopulate2.default);
followMovieSchema.plugin(pluginService.logPost, { schemaName: 'FollowMovie' });
followMovieSchema.plugin(pluginService.setSlugUrl, {
	schemaName: 'FollowMovie'
});

exports.default = _mongoose2.default.model('FollowMovie', followMovieSchema);

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongooseFloat = __webpack_require__(127);

var _mongooseFloat2 = _interopRequireDefault(_mongooseFloat);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ObjectId = _mongoose2.default.Schema.Types.ObjectId; // import validator from 'validator'
// import * as myValid from './movieValidation'

const Float = _mongooseFloat2.default.loadType(_mongoose2.default);
// import Actor from '../actor/actorModel'
// import Director from '../director/directorModel'
// import Genre from '../genre/genreModel'

var embedSchema = new _mongoose.Schema({
	resolution: {
		type: Number,
		default: 720
	},
	embedUrl: {
		type: String,
		required: [true, 'Movie file is required!']
	},
	default: {
		type: Boolean,
		default: false
	}
});

var movieSchema = new _mongoose.Schema({
	name: {
		type: String,
		required: [true, 'Movie name is required!'],
		trim: true
	},
	nameOrigin: {
		type: String,
		trim: true
	},
	desc: {
		type: String,
		trim: true
	},
	imdb: {
		id: {
			type: String,
			trim: true
		},
		ratesAvg: {
			type: Float,
			trim: true
		},
		ratesCount: {
			type: Number,
			trim: true
		}
	},
	duration: {
		type: Number,
		trim: true
	},
	category: {
		type: String,
		enum: ['single', 'series'],
		default: 'single',
		trim: true
	},
	countries: [{
		type: String,
		trim: true
	}],
	uploader: {
		type: ObjectId,
		ref: 'User',
		autopopulate: true,
		required: [true, 'Uploader is required!'],
		// hung-prod
		default: '5c9edb2d6d7b1b2ea07ff3fa',
		trim: true
	},
	embeds: [embedSchema],
	url: {
		type: String,
		unique: true,
		trim: true
	},
	trailerUrl: {
		type: String,
		trim: true
	},
	thumbnails: {
		small: {
			type: String,
			trim: true
		},
		medium: {
			type: String,
			trim: true
		},
		large: {
			type: String,
			trim: true
		}
	},
	photos: [{
		type: String,
		trim: true
	}],
	slug: {
		type: String,
		unique: true,
		trim: true
	},
	slugOrigin: {
		type: String,
		unique: true,
		trim: true,
		index: false
	},
	genres: [{
		type: String,
		trim: true
	}],
	status: {
		type: String,
		enum: ['pending', 'updating', 'done'],
		default: 'pending',
		trim: true
	},
	share: {
		type: String,
		enum: ['private', 'friend', 'public'],
		default: 'public',
		trim: true
	},
	releaseDate: {
		type: Date,
		trim: true
	},
	year: {
		type: Number,
		trim: true
	},
	provider: {
		type: Object,
		trim: true
	},
	isAdult: {
		type: Boolean,
		default: false
	},
	subUrl: {
		type: String,
		trim: true
	},
	voiceoverUrl: {
		type: String,
		trim: true
	},
	actors: [{
		type: String,
		trim: true
	}],
	directors: [{
		type: String,
		trim: true
	}],
	quality: {
		type: String,
		enum: ['CAM', 'HD', 'FULL HD'],
		default: 'HD',
		trim: true
	},
	viewsCount: {
		type: Number,
		default: 1,
		trim: true
	},
	likesCount: {
		type: Number,
		default: 0,
		trim: true
	},
	favoritesCount: {
		type: Number,
		default: 0,
		trim: true
	},
	ratesAvg: {
		type: Number,
		default: 5,
		trim: true
	},
	ratesCount: {
		type: Number,
		default: 0,
		trim: true
	}
}, {
	timestamps: true
});

movieSchema.set('autoIndex', true);

movieSchema.index({
	name: 'text',
	nameOrigin: 'text',
	genres: 'text',
	actors: 'text',
	countries: 'text',
	directors: 'text',
	uploader: 'text',
	year: 'text'
});

movieSchema.pre('save', function (next) {
	// if (this.country) {
	// 	this.countries.push(this.country)
	// }
	// return next()
});

movieSchema.statics = {
	// views inc
	incViewsCount(movieId) {
		return this.findByIdAndUpdate(movieId, { $inc: { viewsCount: 1 } });
	},

	// favorites inc
	incFavoritesCount(movieId) {
		return this.findByIdAndUpdate(movieId, { $inc: { favoritesCount: 1 } });
	},

	// favorites dec
	decFavoritesCount(movieId) {
		return this.findByIdAndUpdate(movieId, { $inc: { favoritesCount: -1 } });
	}
};

movieSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});

movieSchema.plugin(_mongoosePaginate2.default);
movieSchema.plugin(_mongooseAutopopulate2.default);
movieSchema.plugin(pluginService.logPost, { schemaName: 'Movie' });
movieSchema.plugin(pluginService.setSlugUrl, { schemaName: 'Movie' });

exports.default = _mongoose2.default.model('Movie', movieSchema);

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _slugify = __webpack_require__(14);

var _slugify2 = _interopRequireDefault(_slugify);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;


let likeSchema = new _mongoose.Schema({
	movie: {
		type: ObjectId,
		ref: 'Movie',
		required: [true, 'Movie is required!'],
		trim: true
	},
	user: {
		type: ObjectId,
		ref: 'User',
		required: [true, 'User is required!'],
		trim: true
	}
}, {
	timestamps: true
});

likeSchema.statics = {};

likeSchema.pre('save', function (next) {
	// this.slug = slugify(this.name, {
	// 	lower: true
	// })

	return next();
});

likeSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
likeSchema.plugin(_mongoosePaginate2.default);
likeSchema.plugin(_mongooseAutopopulate2.default);
likeSchema.plugin(pluginService.logPost, { schemaName: 'Like' });
likeSchema.plugin(pluginService.setSlugUrl, { schemaName: 'Like' });

exports.default = _mongoose2.default.model('Like', likeSchema);

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _slugify = __webpack_require__(14);

var _slugify2 = _interopRequireDefault(_slugify);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;


let memberSchema = new _mongoose.Schema({
	group: {
		type: ObjectId,
		ref: 'Group',
		required: [true, 'Group is required!'],
		trim: true
	},
	user: {
		type: ObjectId,
		ref: 'User',
		required: [true, 'User is required!'],
		trim: true
	},
	status: {
		type: String,
		enum: ['checking', 'done', 'block'],
		default: 'checking',
		trim: true
	}
}, {
	timestamps: true
});

memberSchema.statics = {};

memberSchema.pre('save', function (next) {
	// this.slug = slugify(this.name, {
	// 	lower: true
	// })

	return next();
});

memberSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
memberSchema.plugin(_mongoosePaginate2.default);
memberSchema.plugin(_mongooseAutopopulate2.default);
memberSchema.plugin(pluginService.logPost, { schemaName: 'Member' });
memberSchema.plugin(pluginService.setSlugUrl, { schemaName: 'Member' });

exports.default = _mongoose2.default.model('Member', memberSchema);

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _constants = __webpack_require__(11);

var _constants2 = _interopRequireDefault(_constants);

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _bcryptNodejs = __webpack_require__(118);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _jsonwebtoken = __webpack_require__(39);

var _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);

var _lodash = __webpack_require__(125);

var _lodash2 = _interopRequireDefault(_lodash);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

var _regex = __webpack_require__(27);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ObjectId = _mongoose2.default.Schema.Types.ObjectId;


/**
 * @typedef users
 * @property {string} _id
 * @property {string} email
 * @property {string} name
 * @property {string} email
 * @property {string} name
 * @property {string} email
 * @property {string} name
 * @property {string} password
 */

let userSchema = new _mongoose.Schema({
	email: {
		type: String,
		unique: true,
		required: [true, 'Email is required!'],
		trim: true,
		validate: {
			validator(email) {
				return _validator2.default.isEmail(email);
			},
			message: '{VALUE} is not a valid email!'
		}
	},
	password: {
		type: String,
		trim: true,
		minlength: [6, 'Password need to be longer!']
		// validate: {
		// 	validator(password) {
		// 		return passwordReg.test(password)
		// 	},
		// 	message: '{VALUE} is not a valid password!'
		// }
	},
	name: {
		type: String,
		default: 'User',
		trim: true
	},
	url: {
		type: String,
		unique: true,
		trim: true
	},
	provider: {
		type: String,
		trim: true
	},
	social: {
		type: Object,
		trim: true
	},
	gender: {
		type: Number,
		trim: true,
		default: 0
	},
	role: {
		type: String,
		trim: true,
		enum: ['viewer', 'user', 'contributor', 'editer', 'admin', 'superadmin'],
		default: 'user'
	},
	avatarUrl: {
		type: String,
		trim: true,
		default: 'https://png.pngtree.com/svg/20161027/631929649c.png'
	},
	token: {
		type: String,
		trim: true
	},
	uploadedCount: {
		type: Number,
		trim: true
	}
}, {
	timestamps: true
});

userSchema.set('autoIndex', true);

userSchema.index({
	name: 'text',
	email: 'text',
	gender: 'text'
});

userSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});

userSchema.pre('save', function (next) {
	if (this.isModified('password')) {
		this.password = this._hashPassword(this.password);
	}

	return next();
});

userSchema.statics = {
	incUploadedCount(userId) {
		return this.findByIdAndUpdate(userId, { $inc: { uploadedCount: 1 } });
	}
};

userSchema.methods = {
	_hashPassword(password) {
		return (0, _bcryptNodejs.hashSync)(password);
	},
	authenticateUser(password) {
		return (0, _bcryptNodejs.compareSync)(password, this.password);
	},
	createToken() {
		this.token = 'JWT ' + _jsonwebtoken2.default.sign({
			_id: this._id,
			salt: Math.random()
		}, _constants2.default.JWT_SECRET, {
			expiresIn: '60d' // expires in 365 days
		});
		this.save();
	},
	toJSON() {
		return _lodash2.default.pick(this, ['_id', 'email', 'name', 'gender', 'role', 'avatarUrl', 'provider']);
	},
	toAuthJSON() {
		this.createToken();
		return Object.assign({}, this.toJSON(), {
			role: this.role,
			provider: this.provider,
			providerUrl: this.providerUrl,
			token: this.token
			// tokenExpiresAt: this.tokenExpiresAt
			// token: `JWT ${this.createToken()}`
		});
	}
};

userSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});

userSchema.plugin(_mongoosePaginate2.default);
userSchema.plugin(_mongooseAutopopulate2.default);
userSchema.plugin(pluginService.logPost, { schemaName: 'User' });
userSchema.plugin(pluginService.setSlugUrl, { schemaName: 'User' });

exports.default = _mongoose2.default.model('User', userSchema);

/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = require("multiparty");

/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = require("request");

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
const passwordReg = exports.passwordReg = /(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/;

const countryCodeReg = exports.countryCodeReg = /^\w{2}$/;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _slugify = __webpack_require__(14);

var _slugify2 = _interopRequireDefault(_slugify);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;


let followUserSchema = new _mongoose.Schema({
	user: {
		type: ObjectId,
		required: [true, 'User is required!'],
		trim: true
	},
	follow: {
		type: ObjectId,
		required: [true, 'Follow is required!'],
		trim: true
	}
}, {
	timestamps: true
});

followUserSchema.statics = {};

followUserSchema.pre('save', function (next) {
	// this.slug = slugify(this.name, {
	// 	lower: true
	// })

	return next();
});

followUserSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
followUserSchema.plugin(_mongoosePaginate2.default);
followUserSchema.plugin(_mongooseAutopopulate2.default);
followUserSchema.plugin(pluginService.logPost, { schemaName: 'FollowUser' });
followUserSchema.plugin(pluginService.setSlugUrl, { schemaName: 'FollowUser' });

exports.default = _mongoose2.default.model('FollowUser', followUserSchema);

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;


let groupSchema = new _mongoose.Schema({
	creator: {
		type: ObjectId,
		ref: 'User',
		autopopulate: true,
		required: [true, 'Creator is required!'],
		trim: true
	},
	name: {
		type: String,
		required: [true, 'Name is required!'],
		trim: true
	},
	slug: {
		type: String,
		trim: true
	},
	url: {
		type: String,
		trim: true
	},
	desc: {
		type: String,
		trim: true
	},
	membersCount: {
		type: Number,
		default: 0,
		trim: true
	},
	requestsCount: {
		type: Number,
		default: 0,
		trim: true
	},
	genres: [{
		type: String,
		required: [true, 'Genre is required!'],
		trim: true
	}],
	posts: [{
		type: ObjectId,
		ref: 'Post',
		trim: true
	}]
}, {
	timestamps: true
});

groupSchema.index({ '$**': 'text' });

groupSchema.statics = {
	incMembersCount(groupId) {
		return this.findByIdAndUpdate(groupId, { $inc: { membersCount: 1 } });
	},

	decMembersCount(groupId) {
		return this.findByIdAndUpdate(groupId, { $inc: { membersCount: -1 } });
	},

	incRequestsCount(groupId) {
		return this.findByIdAndUpdate(groupId, { $inc: { requestsCount: 1 } });
	},

	decRequestsCount(groupId) {
		return this.findByIdAndUpdate(groupId, { $inc: { requestsCount: -1 } });
	}
};

groupSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
groupSchema.plugin(_mongoosePaginate2.default);
groupSchema.plugin(_mongooseAutopopulate2.default);
groupSchema.plugin(pluginService.logPost, { schemaName: 'Group' });
groupSchema.plugin(pluginService.setSlugUrl, { schemaName: 'Group' });

exports.default = _mongoose2.default.model('Group', groupSchema);

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.createRequest = createRequest;
exports.acceptRequest = acceptRequest;
exports.getRequestsByUserId = getRequestsByUserId;
exports.getFriendsByUserId = getFriendsByUserId;
exports.getRelationshipsStats = getRelationshipsStats;
exports.getRelationships = getRelationships;
exports.getRelationshipById = getRelationshipById;
exports.createRelationship = createRelationship;
exports.updateRelationship = updateRelationship;
exports.deleteRelationship = deleteRelationship;

var _relationshipModel = __webpack_require__(102);

var _relationshipModel2 = _interopRequireDefault(_relationshipModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _relationshipUtil = __webpack_require__(104);

var util = _interopRequireWildcard(_relationshipUtil);

var _helper = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


/**
 * @group relationships - Operations about relationships
 *
 */

async function createRequest(req, res, next) {
	try {
		let own = {
			_id: req.body.target
		};
		res.relationship = await _relationshipModel2.default.createRequest(own, req.user);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function acceptRequest(req, res, next) {
	try {
		let request = {
			_id: req.body.target
		};
		res.relationship = await _relationshipModel2.default.acceptRequest(req.user, // user
		request);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getRequestsByUserId(req, res, next) {
	try {
		let rs = await _relationshipModel2.default.findOne({
			user: req.params.id
		}).populate({
			path: 'requests',
			options: req.parsedParams
		});
		res.requests = rs.requests;
		res.pagination = Object.assign({}, req.parsedParams, {
			page: 'null. Please use limit argument for load more',
			total: rs.requestsCount
		});

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getFriendsByUserId(req, res, next) {
	try {
		let rs = await _relationshipModel2.default.findOne({
			user: req.params.id
		}).populate({
			path: 'friends',
			options: req.parsedParams
		});
		res.friends = rs.friends;
		res.pagination = Object.assign({}, req.parsedParams, {
			page: 'null. Please use limit argument for load more',
			total: rs.friendsCount
		});

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getRelationshipsStats(req, res, next) {
	try {
		res.relationshipsStats = {
			count: await _relationshipModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getRelationships(req, res, next) {
	try {
		let _ref = await _relationshipModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.relationships = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getRelationshipById(req, res, next) {
	try {
		res.relationship = await _relationshipModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createRelationship(req, res, next) {
	try {
		res.relationship = await _relationshipModel2.default.create(req.body);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateRelationship(req, res, next) {
	try {
		let relationship = await _relationshipModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			relationship[key] = req.body[key];
		});
		await relationship.save();
		res.relationship = relationship;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteRelationship(req, res, next) {
	try {
		const relationship = await _relationshipModel2.default.findById(req.params.id);

		await relationship.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.checkSynthesis = checkSynthesis;
exports.uploadVoiceover = uploadVoiceover;
exports.callbackSynthesis = callbackSynthesis;
exports.getVoiceoversStats = getVoiceoversStats;
exports.getVoiceoversByMovie = getVoiceoversByMovie;
exports.getVoiceovers = getVoiceovers;
exports.getVoiceoverById = getVoiceoverById;
exports.createVoiceover = createVoiceover;
exports.updateVoiceover = updateVoiceover;
exports.deleteVoiceover = deleteVoiceover;

var _voiceoverModel = __webpack_require__(113);

var _voiceoverModel2 = _interopRequireDefault(_voiceoverModel);

var _movieModel = __webpack_require__(21);

var _movieModel2 = _interopRequireDefault(_movieModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _synthesisService = __webpack_require__(37);

var synthesisService = _interopRequireWildcard(_synthesisService);

var systhesisService = _interopRequireWildcard(_synthesisService);

var _fileService = __webpack_require__(36);

var fileService = _interopRequireWildcard(_fileService);

var _constants = __webpack_require__(11);

var _constants2 = _interopRequireDefault(_constants);

var _helper = __webpack_require__(1);

var _request = __webpack_require__(26);

var _request2 = _interopRequireDefault(_request);

var _fs = __webpack_require__(17);

var _fs2 = _interopRequireDefault(_fs);

var _multiparty = __webpack_require__(25);

var _multiparty2 = _interopRequireDefault(_multiparty);

var _util = __webpack_require__(41);

var _util2 = _interopRequireDefault(_util);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @group voiceovers - Operations about voiceovers
 *
 */

/* eslint-disable no-unused-vars */
async function checkSynthesis(req, res, next) {
	try {
		let voiceoverChecked = await synthesisService.checkSynthesis(req.params.requestId);

		let voiceover = await _voiceoverModel2.default.find({
			requestId: voiceoverChecked.requestId
		});

		if (voiceover.status !== 'done' && voiceoverChecked && voiceoverChecked.status == 'done') {
			voiceover = Object.assign(voiceover, voiceoverChecked);
			await voiceover.save();
			res.voiceover = voiceover;
		} else {
			res.voiceover = voiceoverChecked;
		}

		let file = await fileService.uploadFileByUrl('test', false, 'https://i.vimeocdn.com/portrait/25122243_300x300');
		// console.log(file)
		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function uploadVoiceover(req, res, next) {
	try {
		var form = new _multiparty2.default.Form();

		// await form.parse(req, async function(err, fields, files) {
		// 	// 	res.writeHead(200, { 'content-type': 'text/plain' })
		// 	// 	res.write('received upload:\n\n')
		// 	// 	res.end(util.inspect({ fields: fields, files: files }))
		// 	console.log(files.file)
		// await request.post(
		// 	{
		// 		url: 'https://upload.vbee.vn/api/v1/upload/file',
		// 		headers: {
		// 			authorization: cons.UPLOAD_VBEE_TOKEN
		// 		},
		// 		formData: {
		// 			path: '/test',
		// 			overwrite: 'false',
		// 			file: request(
		// 				'https://raw.githubusercontent.com/svenhornberg/pipeupload/master/LICENSE'
		// 			)
		// 		}
		// 	},
		// 	(error, response, body) => {
		// 		console.error('error:', error) // Print the error if one occurred
		// 		console.log('statusCode:', response && response.statusCode) // Print the response status code if a response was received
		// 		console.log('body:', body) // Prin
		// 		res.file = JSON.parse(body)
		// 		next()
		// 	}
		// )
		// fileService.uploadFileByUrl(
		// 	'test',
		// 	'false',
		// 	'https://raw.githubusercontent.com/svenhornberg/pipeupload/master/LICENSE',
		// 	function(uploadedFile) {
		// 		console.log(uploadedFile)
		// 	}
		// )
		// console.log('object')

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function callbackSynthesis(req, res, next) {
	try {
		(0, _helper.log)(JSON.stringify(req.body), 'voiceover-callback.log');

		let synthesised = req.body;

		let voiceover = await _voiceoverModel2.default.findOne({
			requestId: synthesised.requestId
		});
		if (!voiceover) {
			next();
		}
		voiceover.fileFormat = synthesised.fileFormat;
		voiceover.downloadUrl = synthesised.downloadUrl;
		voiceover.status = synthesised.status;

		fileService.uploadFileByUrl('/voiceovers', 'false', synthesised.downloadUrl, async function (uploadedFile) {
			voiceover.embedUrl = uploadedFile.url;
			voiceover.save();
			res.voiceover = voiceover;

			let movie = await _movieModel2.default.findByIdAndUpdate(voiceover.movie, {
				status: synthesised.status,
				voiceoverUrl: uploadedFile.url
			});

			(0, _helper.log)(JSON.stringify(uploadedFile), 'voiceover-callback.log');
		});

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getVoiceoversStats(req, res, next) {
	try {
		res.voiceoversStats = {
			count: await _voiceoverModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getVoiceoversByMovie(req, res, next) {
	try {
		res.voiceovers = await _voiceoverModel2.default.find({ movie: res.movie });

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getVoiceovers(req, res, next) {
	const limit = parseInt(req.query.limit, 0);
	const skip = parseInt(req.query.skip, 0);

	try {
		res.voiceovers = await _voiceoverModel2.default.find(Object.assign({}, req.query));

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getVoiceoverById(req, res, next) {
	try {
		res.voiceover = await _voiceoverModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createVoiceover(req, res, next) {
	try {
		const movie = await _movieModel2.default.findById(req.body.movieId);

		let requestSysthesis = await systhesisService.requestSynthesis(movie.subUrl, req.body.voice || 'hn_male_xuantin_vdts_48k-hsmm');

		res.voiceover = await _voiceoverModel2.default.create({
			requestId: requestSysthesis.requestId,
			movie,
			uploader: req.user || ''
		});
		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateVoiceover(req, res, next) {
	try {
		let voiceover = await _voiceoverModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			voiceover[key] = req.body[key];
		});
		await voiceover.save();
		res.voiceover = voiceover;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteVoiceover(req, res, next) {
	try {
		const voiceover = await _voiceoverModel2.default.findById(req.params.id);

		await voiceover.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	checkSynthesis: {
		params: {
			requestId: _joi2.default.string().required()
		}
	},
	upload: {
		body: {
			file: _joi2.default.any().required()
		}
	},
	callbackSynthesis: {},
	stats: {},
	index: {},
	show: {},
	create: {
		body: {
			movieId: _joi2.default.string().required(),
			voice: _joi2.default.string().required().valid('hn_male_xuantin_vdts_48k-hsmm', 'hn_female_xuanthu_news_48k-hsmm', 'sg_male_xuankien_vdts_48k-hsmm', 'hn_female_thutrang_phrase_48k-hsmm', 'sg_female_xuanhong_vdts_48k-hsmm', 'sg_male_minhhoang_dial_48k-hsmm', 'sg_female_thaotrinh_dialog_48k-hsmm')
		}
	},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.uploadFile = uploadFile;
exports.uploadFileByUrl = uploadFileByUrl;

var _request = __webpack_require__(26);

var _request2 = _interopRequireDefault(_request);

var _constants = __webpack_require__(11);

var _constants2 = _interopRequireDefault(_constants);

var _fs = __webpack_require__(17);

var _fs2 = _interopRequireDefault(_fs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

async function uploadFile(path = 'default', overwrite = 'false', file, callback) {
	_request2.default.post({
		url: _constants2.default.UPLOAD_VBEE_URL,
		headers: {
			authorization: _constants2.default.UPLOAD_VBEE_TOKEN
		},
		formData: {
			path: path,
			overwrite: overwrite,
			file: file
		}
	}, (error, res, body) => {
		if (error) {
			throw error;
		}
		callback(JSON.parse(body));
	});
} /* eslint-disable no-console */
async function uploadFileByUrl(path = '/default', overwrite = 'false', fileUrl, callback) {
	_request2.default.post({
		url: _constants2.default.UPLOAD_VBEE_URL,
		headers: {
			authorization: _constants2.default.UPLOAD_VBEE_TOKEN
		},
		formData: {
			path: path,
			overwrite: overwrite,
			file: (0, _request2.default)(fileUrl).on('error', function (err) {
				console.error(err);
			})
		}
	}, (error, res, body) => {
		if (error) {
			throw error;
		}
		callback(JSON.parse(body));
	});
}

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.requestSynthesis = requestSynthesis;
exports.requestResynthesis = requestResynthesis;
exports.checkSynthesis = checkSynthesis;
exports.doneSynthesis = doneSynthesis;

var _axios = __webpack_require__(38);

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import HTTPStatus from 'http-status'

async function requestSynthesis(subtitle_url, voice = 'hn_male_xuantin_vdts_48k-hsmm') {
	let url = 'http://api.thuyetminhphim.vn/synthesis';
	let callback = 'http://api-social.thuyetminhphim.com/api/voiceovers/callback';
	return await _axios2.default.get(url, {
		params: { callback, subtitle_url, voice }
	}).then(function (response) {
		return response.data;
	}).catch(function (e) {
		console.log('error', e);
		throw e;
	});
} /* eslint-disable no-console */
async function requestResynthesis(requestId) {
	return await _axios2.default.get(`http://api.thuyetminhphim.vn/resynthesis?request_id=${requestId}`).then(function (response) {
		return response.data;
	}).catch(function (e) {
		console.log('error', e);
		throw e;
	});
}

async function checkSynthesis(requestId) {
	return await _axios2.default.get('http://api.thuyetminhphim.vn/check?request_id=' + requestId).then(function (response) {
		return response.data;
	}).catch(function (e) {
		// eslint-disable-next-line no-console
		console.log('error', e);
		throw e;
	});
}

function doneSynthesis(movieId, subUrl) {}

/***/ }),
/* 38 */
/***/ (function(module, exports) {

module.exports = require("axios");

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = require("jsonwebtoken");

/***/ }),
/* 40 */
/***/ (function(module, exports) {

module.exports = require("passport");

/***/ }),
/* 41 */
/***/ (function(module, exports) {

module.exports = require("util");

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _constants = __webpack_require__(11);

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Removes the warning with promises
// eslint-disable-next-line no-undef
/* eslint-disable no-console */
_mongoose2.default.Promise = global.Promise;

const options = {
	autoIndex: false,
	useNewUrlParser: true
	// Connect the db with the url provided
};try {
	_mongoose2.default.connect(_constants2.default.MONGO_URL, options);
} catch (err) {
	_mongoose2.default.createConnection(_constants2.default.MONGO_URL);
}
_mongoose2.default.connection.once('open', () => console.log('\tMongoDB Connected')).on('error', e => {
	throw e;
});

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _morgan = __webpack_require__(128);

var _morgan2 = _interopRequireDefault(_morgan);

var _bodyParser = __webpack_require__(119);

var _bodyParser2 = _interopRequireDefault(_bodyParser);

var _compression = __webpack_require__(120);

var _compression2 = _interopRequireDefault(_compression);

var _helmet = __webpack_require__(124);

var _helmet2 = _interopRequireDefault(_helmet);

var _passport = __webpack_require__(40);

var _passport2 = _interopRequireDefault(_passport);

var _cors = __webpack_require__(122);

var _cors2 = _interopRequireDefault(_cors);

var _cookieParser = __webpack_require__(121);

var _cookieParser2 = _interopRequireDefault(_cookieParser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const isDev = process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'dev'; /* eslint-disable no-undef */

const isProd = process.env.NODE_ENV === 'production';

exports.default = app => {
	if (isProd) {
		app.use((0, _compression2.default)());
		app.use((0, _helmet2.default)());
	}
	app.use(_bodyParser2.default.json());

	app.use((0, _cookieParser2.default)());

	app.use((0, _cors2.default)());

	app.use(_bodyParser2.default.urlencoded({
		extended: true
	}));
	app.use(_passport2.default.initialize());

	if (isDev) {
		app.use((0, _morgan2.default)('dev'));
	}
};

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _constants = __webpack_require__(11);

var _constants2 = _interopRequireDefault(_constants);

var _authMiddleware = __webpack_require__(50);

var _actorRoute = __webpack_require__(54);

var _actorRoute2 = _interopRequireDefault(_actorRoute);

var _countryRoute = __webpack_require__(58);

var _countryRoute2 = _interopRequireDefault(_countryRoute);

var _directorRoute = __webpack_require__(63);

var _directorRoute2 = _interopRequireDefault(_directorRoute);

var _followMovieRoute = __webpack_require__(67);

var _followMovieRoute2 = _interopRequireDefault(_followMovieRoute);

var _followUserRoute = __webpack_require__(71);

var _followUserRoute2 = _interopRequireDefault(_followUserRoute);

var _relationshipRoute = __webpack_require__(103);

var _relationshipRoute2 = _interopRequireDefault(_relationshipRoute);

var _subRoute = __webpack_require__(135);

var _subRoute2 = _interopRequireDefault(_subRoute);

var _genreRoute = __webpack_require__(76);

var _genreRoute2 = _interopRequireDefault(_genreRoute);

var _groupRoute = __webpack_require__(79);

var _groupRoute2 = _interopRequireDefault(_groupRoute);

var _likeRoute = __webpack_require__(83);

var _likeRoute2 = _interopRequireDefault(_likeRoute);

var _memberRoute = __webpack_require__(87);

var _memberRoute2 = _interopRequireDefault(_memberRoute);

var _movieRoute = __webpack_require__(91);

var _movieRoute2 = _interopRequireDefault(_movieRoute);

var _postRoute = __webpack_require__(95);

var _postRoute2 = _interopRequireDefault(_postRoute);

var _rateRoute = __webpack_require__(99);

var _rateRoute2 = _interopRequireDefault(_rateRoute);

var _uploadRoute = __webpack_require__(107);

var _uploadRoute2 = _interopRequireDefault(_uploadRoute);

var _userRoute = __webpack_require__(110);

var _userRoute2 = _interopRequireDefault(_userRoute);

var _voiceoverRoute = __webpack_require__(114);

var _voiceoverRoute2 = _interopRequireDefault(_voiceoverRoute);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = app => {
	app.use(_authMiddleware.getUser);
	app.use(_constants2.default.API_PREFIX + '/actors', _actorRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/countries', _countryRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/directors', _directorRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/follows/movies', _followMovieRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/follows/users', _followUserRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/relationships', _relationshipRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/subs', _subRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/genres', _genreRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/groups', _groupRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/likes', _likeRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/members', _memberRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/posts', _postRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/movies', _movieRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/rates', _rateRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/upload', _uploadRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/users', _userRoute2.default);
	app.use(_constants2.default.API_PREFIX + '/voiceovers', _voiceoverRoute2.default);
};
// ((following)|(followers)|(actor)|(actors)|(country)|(countries)|(director)|(directors)|(genre)|(genres)|(group)|(groups)|(like)|(likes)|(member)|(members)|(movie)|(movies)|(post)|(posts)|(rate)|(rates)|(user)|(users)|(voiceover)|(voiceovers)|(followMovie)|(followUser)): res.
/* eslint-disable no-console */

/***/ }),
/* 45 */
/***/ (function(module, exports) {

module.exports = require("express-list-endpoints");

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _express = __webpack_require__(2);

var _express2 = _interopRequireDefault(_express);

var _constants = __webpack_require__(11);

var _constants2 = _interopRequireDefault(_constants);

__webpack_require__(42);

var _middleware = __webpack_require__(43);

var _middleware2 = _interopRequireDefault(_middleware);

var _modules = __webpack_require__(44);

var _modules2 = _interopRequireDefault(_modules);

var _expressListEndpoints = __webpack_require__(45);

var _expressListEndpoints2 = _interopRequireDefault(_expressListEndpoints);

var _fs = __webpack_require__(17);

var _fs2 = _interopRequireDefault(_fs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const app = (0, _express2.default)();
// import fileUpload from 'express-fileupload'

// import path from 'path'

(0, _middleware2.default)(app);

// default options
// app.use(fileUpload())

app.get('/', (req, res) => {
	res.send('Welcome!');
});

app.use('/logs', _express2.default.static('./logs', {
	maxAge: '30d',
	immutable: true
}));

app.get('/logs', async (req, res) => {
	await _fs2.default.readdir('./logs', function (err, files) {
		if (err) {
			res.send('Unable to scan directory: ' + err);
		}
		res.send(files);
	});
});

app.get('/api', (req, res) => {
	res.send((0, _expressListEndpoints2.default)(app));
});

(0, _modules2.default)(app);

app.listen(_constants2.default.PORT, err => {
	if (err) {
		throw err;
	} else {
		// eslint-disable-next-line no-console
		console.log(`\tRunning on ${_constants2.default.HOST}:${_constants2.default.PORT}`);
	}
});

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = [{ "name": "Hoàng Bột" }, { "name": "Matthew Morrison" }, { "name": "Ron Smoorenburg" }, { "name": "Tom Pelphrey" }, { "name": "Alexander Skarsgård" }, { "name": "Daniel Fathers" }, { "name": "Paul Rudd" }, { "name": "Robert Sheehan" }, { "name": "Louis Mandylor" }, { "name": "Scott Adkins" }, { "name": "Tony Todd" }, { "name": "Vladimir Kulich" }, { "name": "Jacob Lohmann" }, { "name": "Jakob Cedergren" }, { "name": "Jessica Dinnage" }, { "name": "Morten Suurballe" }, { "name": "Adria Arjona" }, { "name": "Ben Affleck" }, { "name": "Charlie Hunnam" }, { "name": "Oscar Isaac" }, { "name": "Israel Broussard" }, { "name": "Jessica Rothe" }, { "name": "Ruby Modine" }, { "name": "Suraj Sharma" }, { "name": "Chih Wei Tang" }, { "name": "Hang Cai" }, { "name": "Heng Yu" }, { "name": "Xuan Gu" }, { "name": "Linda Cardellini" }, { "name": "Mahershala Ali" }, { "name": "Sebastian Maniscalco" }, { "name": "Viggo Mortensen" }, { "name": "Famke Janssen" }, { "name": "Peter Facinelli" }, { "name": "Richard Dreyfuss" }, { "name": "Ron Perlman" }, { "name": "Collin Chou" }, { "name": "John Demita" }, { "name": "Kent Cheng" }, { "name": "Lý Liên Kiệt" }, { "name": "Deborah Ann Woll" }, { "name": "Logan Miller" }, { "name": "Taylor Russell" }, { "name": "Tyler Labine" }, { "name": "Iko Uwais" }, { "name": "Tiger Hu Chen" }, { "name": "Tony Jaa" }, { "name": "Isabela Moner" }, { "name": "Mark Wahlberg" }, { "name": "Octavia Spencer" }, { "name": "Rose Byrne" }, { "name": "Chi Pu" }, { "name": "Jung Chae Yeon" }, { "name": "Lee Su Ryeon" }, { "name": "San E" }, { "name": "đang cập nhập" }, { "name": "India Eisley" }, { "name": "Jason Isaacs" }, { "name": "Mira Sorvino" }, { "name": "Penelope Mitchell" }, { "name": "Crispin Freeman" }, { "name": "Daniel Dae Kim" }, { "name": "John Cho" }, { "name": "Rebecca Hall" }, { "name": "Grégoire Isvarine" }, { "name": "Lou Castel" }, { "name": "Marie Mottet" }, { "name": "Noémie Schmidt" }, { "name": "Aamir Khan" }, { "name": "Amitabh Bachchan" }, { "name": "Fatima Sana Shaikh" }, { "name": "Katrina Kaif" }, { "name": "Adriana Ugarte" }, { "name": "Albert Pérez" }, { "name": "Francesc Orella" }, { "name": "Javier Gutiérrez" }, { "name": "Arielle Tuliao" }, { "name": "Bryce Dallas Howard" }, { "name": "Chris Bauer" }, { "name": "Jennifer Gibson" }, { "name": "Bae Doo Na" }, { "name": "Cho Jung Seok" }, { "name": "Kim So Jin" }, { "name": "Song Kang Ho" }, { "name": "Alice Isaaz" }, { "name": "Cécile De France" }, { "name": "Edouard Baer" }, { "name": "Natalia Dontcheva" }, { "name": "Jerry O'connell" }, { "name": "Patrick Fabian" }, { "name": "Rainn Wilson" }, { "name": "Rebecca Romijn" }, { "name": "Ahn Sung Bong" }, { "name": "Ha Jung Woo" }, { "name": "Lee Sun Kyun" }, { "name": "Shin Hyun Bin" }, { "name": "Joey Ansah" }, { "name": "Louis Ashbourne Serkis" }, { "name": "Rebecca Ferguson" }, { "name": "Tom Taylor" }, { "name": "Jung Jae Young" }, { "name": "Kim Nam Gil" }, { "name": "Lee Soo kyung" }, { "name": "Uhm Ji Won" }, { "name": "Alessandro Roja" }, { "name": "Carolina Crescentini" }, { "name": "Claudio Camilli" }, { "name": "Euridice Axen" }, { "name": "Jang Gwang" }, { "name": "Jung Ji Hoon" }, { "name": "Lee Soon Jae" }, { "name": "Sung Byoung Sook" }, { "name": "Amyra Dastur" }, { "name": "Aparshakti Khurana" }, { "name": "Rishi Kapoor" }, { "name": "Sheeba Chaddha" }, { "name": "America Ferrera" }, { "name": "Cate Blanchett" }, { "name": "F. Murray Abraham" }, { "name": "Jay Baruchel" }, { "name": "Đang cập nhật" }, { "name": "Kelly Macdonald" }, { "name": "Ralph Fiennes" }, { "name": "Will Ferrell" }, { "name": "Charlyne Yi" }, { "name": "Jason Sudeikis" }, { "name": "John Krasinski" }, { "name": "Carolyn Chen" }, { "name": "Emerson Tsai" }, { "name": "Eugenie Liu" }, { "name": "Tống Vân Hoa" }, { "name": "Inuko Inuyama" }, { "name": "James Carter Cathcart" }, { "name": "Megumi Hayashibara" }, { "name": "Unshô Ishizuka" }, { "name": "Alain Hernández" }, { "name": "Aura Garrido" }, { "name": "Ben Temple" }, { "name": "Leticia Etala" }, { "name": "John Malkovich" }, { "name": "Sandra Bullock" }, { "name": "Sarah Paulson" }, { "name": "Trevante Rhodes" }, { "name": "Billy Howle" }, { "name": "Chris Pine" }, { "name": "Sam Spruell" }, { "name": "Stephen Dillane" }, { "name": "Kar Ying Law" }, { "name": "Sing Hom" }, { "name": "Soda Voyu" }, { "name": "Ting Hu Zhang" }, { "name": "Harumi Syuhama" }, { "name": "Kazuaki Nagaya" }, { "name": "Mao" }, { "name": "Takayuki Hamatsu" }, { "name": "Colin Woodell" }, { "name": "Joseph Lee" }, { "name": "Sara Sohn" }, { "name": "Chiwetel Ejiofor" }, { "name": "Felix Lemburo" }, { "name": "Maxwell Simba" }, { "name": "Robert Agengo" }, { "name": "Jeff Goldblum" }, { "name": "Jodie Foster" }, { "name": "Sofia Boutella" }, { "name": "Sterling K. Brown" }, { "name": "Adam Ferency" }, { "name": "Joanna Kulig" }, { "name": "Slavko Sobin" }, { "name": "Tomasz Kot" }, { "name": "Ashley Tisdale" }, { "name": "Demi Lovato" }, { "name": "Sia" }, { "name": "Wilmer Valderrama" }, { "name": "Jake Eng" }, { "name": "Mark Lee" }, { "name": "Tosh Chan" }, { "name": "Yann Yann Yeo" }, { "name": "Brittany Ashworth" }, { "name": "Grégory Fitoussi" }, { "name": "Javier Botet" }, { "name": "Jay Benedict" }, { "name": "Channing Tatum" }, { "name": "Common" }, { "name": "James Corden" }, { "name": "Zendaya" }, { "name": "Craig Conway" }, { "name": "Olga Kurylenko" }, { "name": "Rosie Fellner" }, { "name": "Alex" }, { "name": "Banita Sandhu" }, { "name": "Nikita Anand" }, { "name": "Varun Dhawan" }, { "name": "Rikiya Koyama" }, { "name": "Ryôtarô Okiayu" }, { "name": "Tôru Furuya" }, { "name": "Dong Hyun Bae" }, { "name": "Lee Chun Hee" }, { "name": "Lee Gyu Han" }, { "name": "Nam Gyu Ri" }, { "name": "Bao Bối Nhĩ" }, { "name": "Clara Lee" }, { "name": "Tiểu Tống Giai" }, { "name": "Yasuaki Kurata" }, { "name": "Clancy Brown" }, { "name": "Tim Blake Nelson" }, { "name": "Willie Watson" }, { "name": "Chloë Grace Moretz" }, { "name": "Quinn Shephard" }, { "name": "Steven Hauck" }, { "name": "Hàn Canh" }, { "name": "Rhydian Vaughan" }, { "name": "Tomohisa Yamashita" }, { "name": "Chris Hemsworth" }, { "name": "Emma Thompson" }, { "name": "Kumail Nanjiani" }, { "name": "Tessa Thompson" }, { "name": "Alyson Walker" }, { "name": "Ian Butcher" }, { "name": "Meelah Adams" }, { "name": "Tony Giroux" }, { "name": "Gal Gadot" }, { "name": "John C. Reilly" }, { "name": "Sarah Silverman" }, { "name": "Taraji P. Henson" }, { "name": "Lâm Doãn" }, { "name": "Vương Đại Lục" }, { "name": "Nhậm Đạt Hoa" }, { "name": "Từ Tranh" }, { "name": "Vương Lệ Khôn" }, { "name": "Zhu Zhu" }, { "name": "Jung Yeon Joo" }, { "name": "Song Kang" }, { "name": "Park Jun Myun" }, { "name": "Lee Yong Nyeo" }, { "name": "Gerard Butle" }, { "name": "Peter Mullan" }, { "name": "Søren Malling" }, { "name": "Han Ji Min" }, { "name": "Lee Byung hun" }, { "name": "Park Jung Min" }, { "name": "Youn Yuh Jung" }, { "name": "Brie Larson" }, { "name": "Evangeline Lilly" }, { "name": "Karen Gillan" }, { "name": "Châu Đông Vũ" }, { "name": "Cheney Chen" }, { "name": "Cổ Thiên Lạc" }, { "name": "Denzel Washington" }, { "name": "Melissa Leo" }, { "name": "Hải Nhĩ Phu" }, { "name": "Lữ Luật Lai" }, { "name": "Ngô Siêu" }, { "name": "Vương Lực Khả" }, { "name": "Wendi Mclendon Covey" }, { "name": "Madison Iseman" }, { "name": "Jeremy Ray Taylor" }, { "name": "Caleel Harris" }, { "name": "Ken Jeong" }, { "name": "Chris Parnell" }, { "name": "Bryce Cass" }, { "name": "Peyton Wich" }, { "name": "Jessi Goei" }, { "name": "Drew Scheid" }, { "name": "Jack Black" }, { "name": "Shari Headley" }, { "name": "Christian Finlayson" }, { "name": "Matthew J. Vasquez" }, { "name": "Courtney Lauren Cummings" }, { "name": "Tyler Silva" }, { "name": "Sydney Bullock" }, { "name": "Barry W. Jerald Jr." }, { "name": "Katie Douglas" }, { "name": "Kiana Madeira" }, { "name": "Peter Outerbridge" }, { "name": "Sara Canning" }, { "name": "Choi Yoo Ri" }, { "name": "Lee Yoo Young" }, { "name": "Ma Dong Seok" }, { "name": "Nguyễn Kinh Thiên" }, { "name": "Peng Lin" }, { "name": "Po Hung Lin" }, { "name": "Thành Long" }, { "name": "Alice Braga" }, { "name": "Anya Taylor Joy" }, { "name": "Charlie Heaton" }, { "name": "Maisie Williams" }, { "name": "Dustin Demri Burns" }, { "name": "Justin Theroux" }, { "name": "Kate McKinnon" }, { "name": "Mila Kunis" }, { "name": "Jake Gyllenhaal" }, { "name": "Rene Russo" }, { "name": "Tom Sturridge" }, { "name": "Toni Collette" }, { "name": "Katheryn Winnick" }, { "name": "Mads Mikkelsen" }, { "name": "Matt Lucas" }, { "name": "Vanessa Hudgens" }, { "name": "Kim Sae Ron" }, { "name": "Lee Sang Yeob" }, { "name": "Shin Se Hwi" }, { "name": "Jin Seon Kyu" }, { "name": "Oh Hee Joon" }, { "name": "Yoon Byung Hee" }, { "name": "Jung Soo Han" }, { "name": "Yoo Ha Bok" }, { "name": "Son Eun Seo" }, { "name": "Seo Jung Yeon" }, { "name": "Bae Jin Ah" }, { "name": "Son Young Soon" }, { "name": "Kim Min Che" }, { "name": "Lee Sang Hee" }, { "name": "Lee Dong Yong" }, { "name": "Lee Sang Hoon" }, { "name": "Kwon Hyuk Bum" }, { "name": "Yang Jae Young" }, { "name": "Asa Butterfield" }, { "name": "Nina Dobrev" }, { "name": "Bruce Khan" }, { "name": "Park Hee Soon" }, { "name": "Yoon Jin Seo" }, { "name": "Kim In Kwon" }, { "name": "Park Chul Min" }, { "name": "Bashir Salahuddin" }, { "name": "Charlize Theron" }, { "name": "David Oyelowo" }, { "name": "Joel Edgerton" }, { "name": "Benedict Hardie" }, { "name": "Harrison Gilbertson" }, { "name": "Logan Marshall Green" }, { "name": "Steve Danielsen" }, { "name": "Amy Manson" }, { "name": "Kevin Guthrie" }, { "name": "Paul Brannigan" }, { "name": "Sheila Hancock" }, { "name": "Brynie Furstenberg" }, { "name": "Hani Furstenberg" }, { "name": "Ishai Golan" }, { "name": "Lenny Ravich" }, { "name": "ngô minh đạt" }, { "name": "Jin Young" }, { "name": "Lee Soo Min" }, { "name": "Park Sung Woong" }, { "name": "Ra Mi Ran" }, { "name": "Adam Devine" }, { "name": "Liam Hemsworth" }, { "name": "Priyanka Chopra" }, { "name": "Rebel Wilson" }, { "name": "Bojana Novakovic" }, { "name": "Delroy Lindo" }, { "name": "Josh Stewart" }, { "name": "Melissa Bolona" }, { "name": "David Torok" }, { "name": "Jingwen E." }, { "name": "Kai Man Tin" }, { "name": "Vương Bảo Cường" }, { "name": "Guangjie Li" }, { "name": "Jing Wu" }, { "name": "Man Tat Ng" }, { "name": "Mike Kai Sui" }, { "name": "David Castañeda" }, { "name": "Elijah Rodriguez" }, { "name": "Jean Claude Van Damme" }, { "name": "Joana Metrass" }, { "name": "Lưu Diệc Phi" }, { "name": "Nghiêm Khoan" }, { "name": "Bille August" }, { "name": "Vivian Wu" }, { "name": "Shameik Moore" }, { "name": "Liev Schreiber" }, { "name": "Richard Elfyn" }, { "name": "Dan Stevens" }, { "name": "Paul Higgins" }, { "name": "Chung Tử Đơn" }, { "name": "Huỳnh Thánh Y" }, { "name": "Kim Yun Seok" }, { "name": "Ju Ji Hoon" }, { "name": "Moon Jeong Hee" }, { "name": "Lee Bong Ryun" }, { "name": "Kim Jong Soo" }, { "name": "Bae Hae Sun" }, { "name": "Joo Jin Mo" }, { "name": "Ko Chang Seok" }, { "name": "Heo Jin" }, { "name": "Kwon So Hyun" }, { "name": "Kim Joong Ki" }, { "name": "Kim Young Woong" }, { "name": "Jeong Gi Seop" }, { "name": "Jeon Kuk Hwan" }, { "name": "Lee Yoo Joon" }, { "name": "Won Hyun Joon" }, { "name": "Kim Mi Kyung" }, { "name": "Kim Mi Hwa" }, { "name": "Han Chul Woo" }, { "name": "Choi Kwang Je" }, { "name": "Châu Tấn" }, { "name": "Hồ Ca" }, { "name": "Tần Hạo" }, { "name": "Trương Tử Phong" }, { "name": "Ngô Ngạn Muội" }, { "name": "Đặng Ân Hi" }, { "name": "Margaret Qualley" }, { "name": "Anthony Mackie" }, { "name": "Danny Huston" }, { "name": "Teagan Johnson" }, { "name": "Noomi Rapace" }, { "name": "Sophie Nélisse" }, { "name": "Indira Varma" }, { "name": "Charley Palmer Rothwell" }, { "name": "Eoin Macken" }, { "name": "Akin Gazi" }, { "name": "George Georgiou" }, { "name": "Olivia Jewson" }, { "name": "Abdellatif Chaouqi" }, { "name": "Huw Parmenter" }, { "name": "Cherise Silvestri" }, { "name": "Sargon Yelda" }, { "name": "Robin Kermode" }, { "name": "Jonathan Jude" }, { "name": "Anna Marie Sullivan" }, { "name": "Nobunaga Shimazaki" }, { "name": "Marina Inoue" }, { "name": "Sora Amamiya" }, { "name": "Misuzu Togashi" }, { "name": "Ayana Taketatsu" }, { "name": "Iori Nomizu" }, { "name": "Asami Sanada" }, { "name": "Maaya Uchida" }, { "name": "Sarah Emi Bridcutt" }, { "name": "Minori Chihara" }, { "name": "Viktoriya Agalakova" }, { "name": "Efim Petrunin" }, { "name": "Sesil Plezhe" }, { "name": "Nikita Elenev" }, { "name": "Sofia Shidlovskaya" }, { "name": "Igor Khripunov" }, { "name": "Lee Mi Do" }, { "name": "Jung So Min" }, { "name": "Lee Il Hwa" }, { "name": "Yoon Je Moon" }, { "name": "Shin Goo" }, { "name": "Kang Ki Young" }, { "name": "Bành Vu Yến" }, { "name": "Wen Jiang" }, { "name": "Fan Liao" }, { "name": "Qing Xu" }, { "name": "Jiali Ding" }, { "name": "Meng Li" }, { "name": "Sam Palladio" }, { "name": "Nick Sagar" }, { "name": "Sara Stewart" }, { "name": "Robin Soans" }, { "name": "Quách Phú Thành" }, { "name": "Châu Nhuận Phát" }, { "name": "Kartik Aaryan" }, { "name": "Nushrat Bharucha" }, { "name": "Sunny Singh Nijjar" }, { "name": "Vic Mignogna" }, { "name": "Christopher Sabat" }, { "name": "Jason Douglas" }, { "name": "Sean Schemmel" }, { "name": "Monica Rial" }, { "name": "Dameon Clarke" }, { "name": "Ian Sinclair" }, { "name": "Masako Nozawa" }, { "name": "Alexis Tipton" }, { "name": "Kôichi Yamadera" }, { "name": "Sonny Strait" }, { "name": "Tomokazu Sugita" }, { "name": "Chris Ayres" }, { "name": "Ryô Horikawa" }, { "name": "Aya Hisakawa" }, { "name": "Ryûsei Nakao" }, { "name": "Bin Shimada" }, { "name": "Kara Edwards" }, { "name": "Đào Điển" }, { "name": "Thẩm Đạt Uy" }, { "name": "Tôn Diệp" }, { "name": "Hailee Steinfeld" }, { "name": "John Cena" }, { "name": "Kenneth Choi" }, { "name": "Park Bo Young" }, { "name": "Kim Young Kwang" }, { "name": "Ko Kyu Pil" }, { "name": "Chuan jun Wang" }, { "name": "Yiwei Zhou" }, { "name": "Xinming Yang" }, { "name": "Beibi Gong" }, { "name": "Stephen Lang" }, { "name": "Hugo Weaving" }, { "name": "Hera Hilmar" }, { "name": "Frankie Adams" }, { "name": "Sylvester Stallone" }, { "name": "Ryan Guzman" }, { "name": "Meadow Williams" }, { "name": "Kim Hae Sook" }, { "name": "Kim Sung Ryoung" }, { "name": "Kim Hee Ae" }, { "name": "Ye Soo Jung" }, { "name": "Moon Sook" }, { "name": "Jeff Bridges" }, { "name": "Dakota Johnson" }, { "name": "Jon Hamm" }, { "name": "Cynthia Erivo" }, { "name": "Yaya Urassaya Sperbund" }, { "name": "Sunny Suwanmethanont" }, { "name": "Nichkhun Horvejkul" }, { "name": "Thư Kỳ" }, { "name": "Trương Nghệ Hưng" }, { "name": "Hewei Yu" }, { "name": "Xun Wang" }, { "name": "Qinqin Li" }, { "name": "Hu Guan" }, { "name": "Jing Liang" }, { "name": "You Lin Lee" }, { "name": "Teddy Chan" }, { "name": "Xiaohang Fang" }, { "name": "Wenting Hao" }, { "name": "Yanqing Liu" }, { "name": "Hao Ning" }, { "name": "Dolph Lundgren" }, { "name": "Jason Momoa" }, { "name": "Amber Heard" }, { "name": "Tabu" }, { "name": "Radhika Apte" }, { "name": "Ayushmann Khurrana" }, { "name": "Shay Mitchell" }, { "name": "Louis Herthum" }, { "name": "Stana Katic" }, { "name": "Gijs Scholten Van Aschat" }, { "name": "Lexie Roth" }, { "name": "Grey Damon" }, { "name": "Kirby Johnson" }, { "name": "Nick Thune" }, { "name": "Maximillian Mcnamara" }, { "name": "Jacob Ming Trent" }, { "name": "James A. Watson Jr." }, { "name": "Marianne Bayard" }, { "name": "Adrian M. Mompoint" }, { "name": "Matt Mings" }, { "name": "Guy Clemens" }, { "name": "Sean Burns" }, { "name": "J.p. Valenti" }, { "name": "Arthur Hiou" }, { "name": "Lisa Wynn" }, { "name": "Kenneth Israel" }, { "name": "Larry Eudene" }, { "name": "Alice Lowe" }, { "name": "Fionn Whitehead" }, { "name": "Craig Parkinson" }, { "name": "John Abraham" }, { "name": "Shruti Haasan" }, { "name": "Nathalia Kaur" }, { "name": "Nishikant Kamat" }, { "name": "Gary Oldman" }, { "name": "Gerard Butler" }, { "name": "Jason Schwartzman" }, { "name": "Robert Capron" }, { "name": "Jenny Slate" }, { "name": "Jacki Weaver" }, { "name": "J.b. Smoove" }, { "name": "Christian Bale" }, { "name": "Benedict Cumberbatch" }, { "name": "Adam Driver" }, { "name": "John David Washington" }, { "name": "Laura Harrier" }, { "name": "Jang Young Nam" }, { "name": "Lee Hee Joon" }, { "name": "Kim Shi A" }, { "name": "Baek Soo Jang" }, { "name": "Johnny Depp" }, { "name": "Eddie Redmayne" }, { "name": "Zoë Kravitz" }, { "name": "Callum Turner" }, { "name": "Carmen Ejogo" }, { "name": "Wolf Roth" }, { "name": "Matthew Modine" }, { "name": "James Remar" }, { "name": "Tom Sizemore" }, { "name": "John Travolta" }, { "name": "Jennifer Esposito" }, { "name": "Trần Quốc Khôn" }, { "name": "Triệu Văn Trác" }, { "name": "Prakash Raj" }, { "name": "Mahesh Babu" }, { "name": "Sarath Kumar" }, { "name": "Kiara Advani" }, { "name": "Devaraj" }, { "name": "Rajsekhar Aningi" }, { "name": "Judy Greer" }, { "name": "Haluk Bilginer" }, { "name": "Jamie Lee Curtis" }, { "name": "Andi Matichak" }, { "name": "James Jude Courtney" }, { "name": "Nick Castle" }, { "name": "Ray Sahetapy" }, { "name": "Chelsea Islan" }, { "name": "Pevita Pearce" }, { "name": "Karina Suwandhi" }, { "name": "Samo Rafael" }, { "name": "Hadijah Shahab" }, { "name": "Kim Min Kyu" }, { "name": "So Joo Yeon" }, { "name": "Choi Hee Jin" }, { "name": "Kim Young" }, { "name": "Kim Tae Min" }, { "name": "Park Jin" }, { "name": "Betty Gabriel" }, { "name": "Chelsea Alden" }, { "name": "Yuan Nie" }, { "name": "Lu Zhang" }, { "name": "Zhaoqi Shi" }, { "name": "Kevin Cheng" }, { "name": "Lan Qin" }, { "name": "Wei Gan" }, { "name": "Sam Elliott" }, { "name": "Bradley Cooper" }, { "name": "Lady Gaga" }, { "name": "Dave Chappelle" }, { "name": "Hồ Quân" }, { "name": "Tôn Lệ" }, { "name": "Đặng Siêu" }, { "name": "Trịnh Khải" }, { "name": "Jo Jae Yun" }, { "name": "Yoon Kye Sang" }, { "name": "Choi Gwi Hwa" }, { "name": "Min Ren" }, { "name": "Yunlai Xin" }, { "name": "Ruonan Zhang" }, { "name": "Yingbo Zhao" }, { "name": "Danni Zhu" }, { "name": "Han Go Eun" }, { "name": "Kim Byung Gi" }, { "name": "Joo Woo Jae" }, { "name": "Lee Hye Ran" }, { "name": "Kim Ye Ryung" }, { "name": "Chu Nhân" }, { "name": "KAI CHUNG CHEUNG" }, { "name": "Jang Dong Gun" }, { "name": "Hyun Bin" }, { "name": "Son Na Eun" }, { "name": "Seo Young Hee" }, { "name": "Lee Tae Ri" }, { "name": "Bryan Cranston" }, { "name": "Edward Norton" }, { "name": "Koyu Rankin" }, { "name": "Kim Sung Kyung" }, { "name": "Jin Kyung" }, { "name": "Kim Sang Ho" }, { "name": "Lee Sung Min" }, { "name": "Kwak Si Yang" }, { "name": "Park Bom" }, { "name": "Mã Tư Thuần" }, { "name": "Trương Nhược Quân" }, { "name": "Lý Hiện" }, { "name": "Toshiyuki Nishida" }, { "name": "Takeshi Kitano" }, { "name": "Nao Ômori" }, { "name": "Pierre Taki" }, { "name": "Sansei Shiomi" }, { "name": "Tatsuo Nadaka" }, { "name": "Cao Dĩ Tường" }, { "name": "Leehom Wang" }, { "name": "Victoria Song" }, { "name": "Karena Ng" }, { "name": "Ed Helms" }, { "name": "Annabelle Wallis" }, { "name": "Rami Malek" }, { "name": "Christopher Fulford" }, { "name": "Joe David Walters" }, { "name": "Brian Vernel" }, { "name": "Damijan Oklopdzic" }, { "name": "James Franco" }, { "name": "Dennis Quaid" }, { "name": "Jack Reynor" }, { "name": "Carrie Coon" }, { "name": "Ian Matthews" }, { "name": "Phàn Thiếu Hoàng" }, { "name": "Thích Ngạn Năng" }, { "name": "Xa Vĩnh Lợi" }, { "name": "Stephen Rea" }, { "name": "Barry Keoghan" }, { "name": "Moe Dunford" }, { "name": "James Frecheville" }, { "name": "Freddie Fox" }, { "name": "Tom Hardy" }, { "name": "Riz Ahmed" }, { "name": "Michelle Williams" }, { "name": "Mitsuki Takahata" }, { "name": "Masato Sakai" }, { "name": "Sakura Ando" }, { "name": "Yûsuke Iseya" }, { "name": "Kanata Hongô" }, { "name": "Mari Hamada" }, { "name": "Ayaka Miyoshi" }, { "name": "Moon Chae Won" }, { "name": "Ji Sung" }, { "name": "Cho Seung Woo" }, { "name": "Yoo Jae Myung" }, { "name": "Baek Yoon Sik" }, { "name": "Trịnh Y Kiện" }, { "name": "Xa Thi Mạn" }, { "name": "Trần Tiểu Xuân" }, { "name": "Michael Tse" }, { "name": "Kar Lok Chin" }, { "name": "Jerry Lamb" }, { "name": "Jennifer Garner" }, { "name": "Tyson Rittler" }, { "name": "Stanley Tucci" }, { "name": "Will Arnett" }, { "name": "Ludacris" }, { "name": "Natasha Lyonne" }, { "name": "Gabriel Iglesias" }, { "name": "Jordin Sparks" }, { "name": "Shraddha Kapoor" }, { "name": "Rajkummar Rao" }, { "name": "Pankaj Tripathi" }, { "name": "Dermot Mulroney" }, { "name": "Richard Harmon" }, { "name": "Bella Thorne" }, { "name": "Rowan Atkinson" }, { "name": "Ben Miller" }, { "name": "Mimi Chi Yan Kung" }, { "name": "Carlos Chan" }, { "name": "Carmen Soup" }, { "name": "Trương Hiếu Toàn" }, { "name": "Quế Luân Mỹ" }, { "name": "Trần Học Đông" }, { "name": "Tưởng Mộng Điệp" }, { "name": "Vương Uyên Tuệ" }, { "name": "Đậu Bá Lâm" }, { "name": "Soo Ae" }, { "name": "Park Hae il" }, { "name": "Alex Neustaedter" }, { "name": "Becky G" }, { "name": "Alex MacNicoll" }, { "name": "Bruce Willis" }, { "name": "Lưu Diệp" }, { "name": "Tạ Đình Phong" }, { "name": "Alexander Petrov" }, { "name": "Taisiya Vilkova" }, { "name": "Nam Joo Hyuk" }, { "name": "Jo In Sung" }, { "name": "Kim Myung Min" }, { "name": "Kim In kwon" }, { "name": "Choi Woo Sik" }, { "name": "Hyeri" }, { "name": "Kyle MacLachla" }, { "name": "Lauren Cohan" }, { "name": "Michelle Yeoh" }, { "name": "Constance Wu" }, { "name": "Henry Golding" }, { "name": "Son Ye Jin" }, { "name": "Julian Cheung" }, { "name": "Stephy Tang" }, { "name": "Chung Chi Cheung" }, { "name": "Keegan Michael Key" }, { "name": "Boyd Holbrook" }, { "name": "Shin Da Eun" }, { "name": "Jo Min Soo" }, { "name": "Kim Da Mi" }, { "name": "Go Min Si" }, { "name": "Eero Aho" }, { "name": "Johannes Holopainen" }, { "name": "Jussi Vatanen" }, { "name": "Julie Estelle" }, { "name": "Joe Taslim" }, { "name": "Thi Triển" }, { "name": "Lan Lam" }, { "name": "Văn Mộng" }, { "name": "Lâu Nghệ Tiêu" }, { "name": "Tôn Nghệ Châu" }, { "name": "Trần Hách" }, { "name": "Viên Hoằng" }, { "name": "Nakagawa Taishi" }, { "name": "Dean Fujioka" }, { "name": "Chinen Yuri" }, { "name": "Mano Erina" }, { "name": "Komatsu Nana" }, { "name": "Jessica Mila" }, { "name": "Bianca Hello" }, { "name": "Denny Sumargo" }, { "name": "Josh Brolin" }, { "name": "Benicio Del Toro" }, { "name": "Jeffrey Donovan" }, { "name": "Riley Keough" }, { "name": "Jeffrey Wright" }, { "name": "Beckam Crawford" }, { "name": "Michael Tayles" }, { "name": "Issac Bird" }, { "name": "Marisa Tomei" }, { "name": "Mo McRae" }, { "name": "Steve Harris" }, { "name": "Patch Darragh" }, { "name": "Luna Lauren Velez" }, { "name": "Jermel Howard" }, { "name": "Michael Fassbender" }, { "name": "Alicia Vikander" }, { "name": "Rachel Weisz" }, { "name": "Brad Pitt" }, { "name": "Marion Cotillard" }, { "name": "Jared Harris" }, { "name": "Nicolas Cage" }, { "name": "Thomas Jane" }, { "name": "Mario Van Peebles" }, { "name": "Jane Levy" }, { "name": "Dylan Minnette" }, { "name": "Eric Roberts" }, { "name": "Joey Morgan" }, { "name": "Omar Chaparro" }, { "name": "Jun Kunimura" }, { "name": "Jung min Hwang" }, { "name": "Woo hee Chun" }, { "name": "Teresa Palmer" }, { "name": "Gabriel Bateman" }, { "name": "Alexander Dipersia" }, { "name": "Billy Burke" }, { "name": "Maria Bello" }, { "name": "Rolando Boyce" }, { "name": "Kim Jung Tae" }, { "name": "Kim Seung Woo" }, { "name": "Lee Han Wi" }, { "name": "Shin Kang Woo" }, { "name": "Hyuk" }, { "name": "Moon Yong Suk" }, { "name": "Oh Man Seok" }, { "name": "Kim Min Kyung" }, { "name": "Emma Roberts" }, { "name": "Dave Franco" }, { "name": "Keanu Reeves" }, { "name": "Ian McShane" }, { "name": "Ruby Rose" }, { "name": "Dina Meyer" }, { "name": "AnnaLynne McCord" }, { "name": "George MacKay" }, { "name": "Samantha Isler" }, { "name": "Sam Neill" }, { "name": "Julian Dennison" }, { "name": "Rima Te Wiata" }, { "name": "Rudolf Martin" }, { "name": "Christoph Letkowski" }, { "name": "Svenja Jung" }, { "name": "Uta Bonz" }, { "name": "Paul Boche" }, { "name": "Constantin Lücke" }, { "name": "Waléra Kanischtscheff" }, { "name": "Jack Nicholson" }, { "name": "Morgan Freeman" }, { "name": "Sean Hayes" }, { "name": "Anna Kendrick" }, { "name": "J.K. Simmons" }, { "name": "Narges Rashidi" }, { "name": "Avin Manshadi" }, { "name": "Bobby Naderi" }, { "name": "Hollie Burrows" }, { "name": "James Cooke" }, { "name": "Liam Dascombe" }, { "name": "Vikram Prabhu" }, { "name": "Ranya Rao" }, { "name": "Karunas" }, { "name": "Zachary Quinto" }, { "name": "Karl Urban" }, { "name": "Bạch Kính Đình" }, { "name": "Quách Thù Đồng" }, { "name": "Lý Hồng Nghị" }, { "name": "Vương Hạc Nhuận" }, { "name": "Đinh Quan Sâm" }, { "name": "Triệu Văn Long" }, { "name": "Tô Hữu Bằng" }, { "name": "Liễu Nham" }, { "name": "Lâm Canh Tân" }, { "name": "Nhiều diễn viên" }, { "name": "Trần Khôn" }, { "name": "Bạch Bách Hà" }, { "name": "Jin mo Joo" }, { "name": "Dong won Kang" }, { "name": "Sabrina Carpenter" }, { "name": "Sofia Carson" }, { "name": "Nikki Hahn" }, { "name": "Kaya Scodelario" }, { "name": "Orlando Bloom" }, { "name": "Tom Cruise" }, { "name": "Cobie Smulders" }, { "name": "Robert Knepper" }, { "name": "Trần Vỹ Đình" }, { "name": "Đường Nghệ Hân" }, { "name": "Jessica" }, { "name": "Christian Clavier" }, { "name": "Isabelle Nanty" }, { "name": "Pierre François Martin Laval" }, { "name": "Kev Adams" }, { "name": "Arnaud Ducret" }, { "name": "Pio Marmaï" }, { "name": "Franck Gastambide" }, { "name": "Camille Cottin" }, { "name": "Bae Sung Woo" }, { "name": "Yoon Kyun Sang" }, { "name": "Cheeranun Yusanont" }, { "name": "Kom Chuancheun" }, { "name": "Nutchapatchara Wongsuwan" }, { "name": "Pitsanu NimSakul" }, { "name": "Anime" }, { "name": "Dany Boon" }, { "name": "Alice Pol" }, { "name": "Kad Merad" }, { "name": "Kang Dong Won" }, { "name": "Man sik Jeong" }, { "name": "Ji hun Ju" }, { "name": "Jung Woo Sung" }, { "name": "Jason Statham" }, { "name": "Jessica Alba" }, { "name": "Tommy Lee Jones" }, { "name": "Jason Biggs" }, { "name": "Janet Montgomery" }, { "name": "Paul Dano" }, { "name": "Daniel Radcliffe" }, { "name": "Mary Elizabeth Winstead" }, { "name": "Doona Bae" }, { "name": "Jung woo Ha" }, { "name": "Dal su Oh" }, { "name": "Louis Koo" }, { "name": "Ching Wan Lau" }, { "name": "Eddie Peng" }, { "name": "Chris Pratt" }, { "name": "Ethan Hawke" }, { "name": "Pierce Brosnan" }, { "name": "Jason Barry" }, { "name": "Karen Moskow" }, { "name": "Dev Patel" }, { "name": "Jeremy Irons" }, { "name": "Malcolm Sinclair" }, { "name": "Galen T. Chu" }, { "name": "Đồng Phi" }, { "name": "Lâm Thu Nam" }, { "name": "Lưu Nhuế Lân" }, { "name": "Brendan Fletcher" }, { "name": "Dan Shea" }, { "name": "Loretta Walsh" }, { "name": "Melissa McCarthy" }, { "name": "Kristen Bell" }, { "name": "Peter Dinklage" }, { "name": "Kurt Russell" }, { "name": "Douglas M. Griffin" }, { "name": "Tom Hanks" }, { "name": "Felicity Jones" }, { "name": "Ben Foster" }, { "name": "La Tường" }, { "name": "Trạch Tử Mạnh" }, { "name": "Trần Mỹ Hành" }, { "name": "Triệu Cát" }, { "name": "Charles Dance" }, { "name": "Kristen Wiig" }, { "name": "Zach Woods" }, { "name": "Karan Soni" }, { "name": "Frank Grillo" }, { "name": "Elizabeth Mitchell" }, { "name": "Mykelti Williamson" }, { "name": "Renée Zellweger" }, { "name": "Gemma Jones" }, { "name": "Jim Broadbent" }, { "name": "Joe Manganiello" }, { "name": "Mandy Patinkin" }, { "name": "Ngô Kinh" }, { "name": "Lưu Thanh Vân" }, { "name": "Giang Sơ Ảnh" }, { "name": "Khương Hạo Văn" }, { "name": "Ngô Đình Diệp" }, { "name": "Viên Tuyền" }, { "name": "Liêu Khải Trí" }, { "name": "Jamie Dornan" }, { "name": "Tyler Hoechlin" }, { "name": "Jin Se Yun" }, { "name": "Lee Beom Soo" }, { "name": "Lee Jung Jae" }, { "name": "Emma Watson" }, { "name": "Daniel Brühl" }, { "name": "Michael Nyqvist" }, { "name": "Allie Marie Evans" }, { "name": "Patrick Johnson" }, { "name": "Peter O'Brien" }, { "name": "Alexander Black" }, { "name": "Sarita Choudhury" }, { "name": "Amy Adams" }, { "name": "Michael Shannon" }, { "name": "Viên San San" }, { "name": "Park Chan Yeol" }, { "name": "Seo Ju Hyun" }, { "name": "Khương Triều" }, { "name": "Ji Soo – Yong Bi" }, { "name": "Suho – Sang Woo" }, { "name": "Ryoo Joon Yeol – Ji Gong" }, { "name": "Kim Hee Chan – Doo Man" }, { "name": "Jordan Peele" }, { "name": "Tiffany Haddish" }, { "name": "Stephanie Sigman" }, { "name": "Alicia Vela Bailey" }, { "name": "Miranda Otto" }, { "name": "Enjie Lu" }, { "name": "Qiang Zheng" }, { "name": "Wei Dong Chen" }, { "name": "Leslie Mann" }, { "name": "Sunny Suwanmethanon" }, { "name": "Davika Hoorne" }, { "name": "Ferdia Walsh Peelo" }, { "name": "Aidan Gillen" }, { "name": "Maria Doyle Kennedy" }, { "name": "Britt Robertson" }, { "name": "Peggy Lipton" }, { "name": "Gugu Mbatha Raw" }, { "name": "Hướng Tá" }, { "name": "Huỳnh Hiểu Minh" }, { "name": "Lương Gia Huy" }, { "name": "Phạm Băng Băng" }, { "name": "Henry Thomas" }, { "name": "Doug Jones" }, { "name": "Elizabeth Reaser" }, { "name": "Jennifer Lawrence" }, { "name": "Michael Sheen" }, { "name": "Jonathan Groff" }, { "name": "Frankie J. Alvarez" }, { "name": "Murray Bartlett" }, { "name": "JESSE METCALFE" }, { "name": "MEGHAN ORY" }, { "name": "Elle Fanning" }, { "name": "Christina Hendricks" }, { "name": "Dwayne Johnson" }, { "name": "Kevin Hart" }, { "name": "Danielle Nicolet" }, { "name": "Atsuko Tanaka" }, { "name": "Akio Otsuka" }, { "name": "Lu Han" }, { "name": "Tỉnh Bách Nhiên" }, { "name": "Ed Westwick" }, { "name": "Phoebe Tonkin" }, { "name": "Jeremy Sumpter" }, { "name": "Cẩm Vinh" }, { "name": "Đằng Cách Nhĩ" }, { "name": "Alycia Debnam Carey" }, { "name": "William Moselley" }, { "name": "Milo Cawthorne" }, { "name": "James Blake" }, { "name": "Kimberley Crossman" }, { "name": "Sam Berkley" }, { "name": "Daniel Cresswell" }, { "name": "Delaney Tabron" }, { "name": "Stephen Ure" }, { "name": "Colin Moy" }, { "name": "Jodie Rimmer" }, { "name": "Nick Hoskins Smith" }, { "name": "Erroll Shand" }, { "name": "Kate Elliott" }, { "name": "Aaron McGregor" }, { "name": "Andrew Laing" }, { "name": "Tim Foley" }, { "name": "Kris Wu" }, { "name": "Rhona Mitra" }, { "name": "Thành Long" }, { "name": "Milla Jovovich" }, { "name": "Dave Bautista" }, { "name": "Alain Moussi" }, { "name": "Gina Carano" }, { "name": "Van Damme" }, { "name": "Lý Du Phi" }, { "name": "Trần Tuệ Lâm" }, { "name": "Trâu Triệu Long" }, { "name": "Ju hyuk Kim" }, { "name": "So hee Kim" }, { "name": "Yu hwa Choi" }, { "name": "Vladimir Mashkov" }, { "name": "Agne Grudyte" }, { "name": "Sergey Shakurov" }, { "name": "Trương Gia Huy" }, { "name": "Ngô Trấn Vũ" }, { "name": "Trần Hào" }, { "name": "Rose McGowan" }, { "name": "Rachel Nichols" }, { "name": "Idris Elba" }, { "name": "Richard Madden" }, { "name": "Kelly Reilly" }, { "name": "Dương Mịch" }, { "name": "Ngô Diệc Phàm" }, { "name": "Vương Nguyên (Tfboys)" }, { "name": "Jung Yu Mi" }, { "name": "Gong Yoo" }, { "name": "Baek Jin Hee" }, { "name": "Seth Rogen" }, { "name": "Zac Efron | See full cast & crew" }, { "name": "Erin Moriarty" }, { "name": "Mel Gibson" }, { "name": "Trương Học Hữu" }, { "name": "Matt Damon" }, { "name": "Julia Stiles" }, { "name": "Seung Ho Yoo" }, { "name": "Jae Hyeon Jo" }, { "name": "Suk Ho Jun" }, { "name": "Chang Seok Ko" }, { "name": "Kim Min Seok" }, { "name": "Mi Ran Ra" }, { "name": "Dan Chupong" }, { "name": "Nathan Jones" }, { "name": "Damian Mavis" }, { "name": "Kessarin Ektawatk" }, { "name": "Scott Glenn" }, { "name": "Chris O'Donnell" }, { "name": "Bill Paxton" }, { "name": "Ngọc Trai" }, { "name": "Ngô Thanh Vân" }, { "name": "Thành Lộc" }, { "name": "Will" }, { "name": "Phạm Lưu Tuấn Tài" }, { "name": "Chyler Leigh" }, { "name": "Jaime Pressly" }, { "name": "Chris Evans" }, { "name": "Jackie Chan" }, { "name": "Andy Lau and Sammo Hung Kam Bo" }, { "name": "Christopher Meloni" }, { "name": "Lưu Đức Hoa" }, { "name": "Hồng Kim Bảo" }, { "name": "Trần Phái Nghiên" }, { "name": "Min sik Choi" }, { "name": "Hong pa Kim" }, { "name": "Vương Lạc Đan" }, { "name": "Châu Du Dân" }, { "name": "Bào Khởi Tịnh" }, { "name": "Thiên Tâm" }, { "name": "Thiệu Mỹ Kỳ" }, { "name": "Woody Harrelson" }, { "name": "Ellen DeGeneres" }, { "name": "Albert Brooks" }, { "name": "Torbin Xan Bullock" }, { "name": "Lisa Brenner" }, { "name": "Samuel Larsen" }, { "name": "Todd Lowe" }, { "name": "Trương Trí Lâm" }, { "name": "Trần Kiều Ân" }, { "name": "Tiết Giia Yến" }, { "name": "Đường Văn Long" }, { "name": "Jared Leto" }, { "name": "Lý Thẩm" }, { "name": "Đàm Tùng Vận" }, { "name": "Angelababy" }, { "name": "Ngô Thiến" }, { "name": "Margot Robbie" }, { "name": "Samuel L. Jackson" }, { "name": "Triệu Vy" }, { "name": "Chung Hán Lương" }, { "name": "Rachel McAdams" }, { "name": "Benedict Wong" }, { "name": "Rossif Sutherland" }, { "name": "Douangmany Soliphanh" }, { "name": "Sara Botsford" }, { "name": "Chương Tử Di" }, { "name": "Đồng Lệ Á" }, { "name": "Lương Tịnh" }, { "name": "Shailene Wood" }, { "name": "Joseph Gordon Levitt" }, { "name": "Tom Wilkinso" }, { "name": "Christy Meyer" }, { "name": "Adrienne Wilkinson" }, { "name": "Walter Koenig" }, { "name": "Sanzhar Madiyev" }, { "name": "Anton Pampushnyy" }, { "name": "Sebastien Sisak" }, { "name": "Valeriya Shkirando" }, { "name": "Alina Kiziyarova" }, { "name": "Michael Jai White" }, { "name": "Max Ryan" }, { "name": "Han Hye Rin" }, { "name": "Ahn Sung Ki" }, { "name": "Đỗ Văn Trạch" }, { "name": "Philip Keung" }, { "name": "Gregory Wong" }, { "name": "Asami" }, { "name": "Kirara Asuka" }, { "name": "Jack Huston" }, { "name": "Nazanin Boniadi" }, { "name": "Ayelet Zurer" }, { "name": "Kim Min Hee" }, { "name": "Kim Tae Ri" }, { "name": "Cho Jin Woong" }, { "name": "Lena Headey" }, { "name": "Aaron Paul" }, { "name": "Sean Bean" }, { "name": "Jon Campling" }, { "name": "Kezia Burrows" }, { "name": "Will Bowden" }, { "name": "Neil Newbon" }, { "name": "Andrea Tivadar" }, { "name": "Amanda Piery" }, { "name": "Edward Saxby" }, { "name": "Joo Won – Jang Woo Yu Hae Jin – Dược sỹ Min Lee Yoo Young – Shi Eun Ryoo Hye Young – Eun Ji" }, { "name": "Đoàn Dịch Hồng" }, { "name": "Quách Đào" }, { "name": "Lữ Tụng Hiền" }, { "name": "Ngô Ngạn Tổ" }, { "name": "Cảnh Điềm" }, { "name": "Analeigh Tipton" }, { "name": "Sofia Black D'Elia" }, { "name": "Michael Kelly" }, { "name": "Eva Green" }, { "name": "Kim Dickens" }, { "name": "Kathryn Hahn" }, { "name": "Lance Henriksen" }, { "name": "Johnny Strong" }, { "name": "Martin Sheen" }, { "name": "Marlon Brando" }, { "name": "Robert Duvall" }, { "name": "Katherine Waterston" }, { "name": "Dan Fogler" }, { "name": "Alison Sudol" }, { "name": "and Colin Farrell" }, { "name": "Cao Viên Viên" }, { "name": "Dương Thiên Hoa" }, { "name": "Kylie Rogers" }, { "name": "Martin Henderson" }, { "name": "Yoshimasa Hosoya" }, { "name": "Inori Minase" }, { "name": "Ben Whishawlan Richmen" }, { "name": "Louis C.K." }, { "name": "Eric Stonestreet" }, { "name": "Stuart Graham" }, { "name": "Laine Megaw" }, { "name": "Brian Milligan" }, { "name": "Liam McMahon" }, { "name": "Karen Hassan" }, { "name": "Frank McCusker" }, { "name": "Lalor Roddy" }, { "name": "Helen Madden" }, { "name": "Des McAleer" }, { "name": "Geoff Gatt" }, { "name": "Rory Mullen" }, { "name": "Ben Peel" }, { "name": "Helena Bereen" }, { "name": "Paddy Jenkins" }, { "name": "Lambert Wilson" }, { "name": "Virginie Ledoyen" }, { "name": "Guillaume Gouix" }, { "name": "Vương Truyền Nhất" }, { "name": "Lý Yến Chinh" }, { "name": "Sử Đại Tây" }, { "name": "Đậu Trí Khổng" }, { "name": "Phim Hành Động" }, { "name": "Phim Hoạt Hình" }, { "name": "Phim Phiêu Lưu" }, { "name": "Ara Go" }, { "name": "Seong gyoon Kim" }, { "name": "Je hoon Lee" }, { "name": "Anton Yelchin" }, { "name": "Imogen Poots" }, { "name": "Alia Shawkat" }, { "name": "Hiếu Long" }, { "name": "Tào Mộng Cách" }, { "name": "Dương Tử Thâm" }, { "name": "Vu Ba" }, { "name": "Châu Vũ Đồng" }, { "name": "Vương Đức Thuận" }, { "name": "Lý Thanh" }, { "name": "Mia Wasikowska" }, { "name": "Helena Bonham Carter" }, { "name": "Nicholas Hoult" }, { "name": "Vernetta Lopez" }, { "name": "Scott Lawrence" }, { "name": "Jamie Bernadette" }, { "name": "Katie Carpenter" }, { "name": "Gema Calero" }, { "name": "Nick Cheung" }, { "name": "Qi Shu" }, { "name": "Jing Wong" }, { "name": "Ngôn Thừa Húc" }, { "name": "Giản Đình Nhuế" }, { "name": "Lý Ngọc Tỷ" }, { "name": "Lee Min ho" }, { "name": "Wallace Chung" }, { "name": "Tiffany Tang" }, { "name": "Ngô Thiên Ngữ" }, { "name": "Minami Hamabe" }, { "name": "Marie Iitoyo" }, { "name": "Airi Matsui" }, { "name": "Maika Monroe" }, { "name": "Roland Emmerich" }, { "name": "Joey King" }, { "name": "Ryan Reynolds" }, { "name": "Kevin Costner" }, { "name": "Naomi Watts" }, { "name": "Chris Cooper" }, { "name": "Rita Blanco" }, { "name": "Joaquim de Almeida" }, { "name": "Roland Giraud" }, { "name": "Jesse Metcalfe" }, { "name": "Jessica Harmon" }, { "name": "Keegan Connor Tracy" }, { "name": "Trương Siêu" }, { "name": "Trần Kinh Thiên" }, { "name": "Hà Nhuận Đông" }, { "name": "Lý Đông Học" }, { "name": "Hạ Tử Đồng" }, { "name": "Dương Kỳ Minh" }, { "name": "Điền Nguyên" }, { "name": "Tạ Miêu" }, { "name": "Trương Hách" }, { "name": "Tiêu Ân Na" }, { "name": "Megan Fox" }, { "name": "Stephen Amell" }, { "name": "Taron Egerton" }, { "name": "Hugh Jackman" }, { "name": "Tom Costello" }, { "name": "Tống Dực Phi" }, { "name": "Lí Hồng Đào" }, { "name": "Chu Giai Hi" }, { "name": "Sigourney Weaver" }, { "name": "Jennifer Love Hewitt" }, { "name": "Gene Hackman" }, { "name": "Arun Bali" }, { "name": "Meera Chopra" }, { "name": "Gajendra Chouhan" }, { "name": "Nhậm Hiền Tề" }, { "name": "Lâm Gia Đống" }, { "name": "Ron Allen" }, { "name": "George Babbit" }, { "name": "Laila Berzins" }, { "name": "Will Smith" }, { "name": "Cara Delevingne" }, { "name": "Josh Barnett" }, { "name": "Gillian White" }, { "name": "Ploychompoo" }, { "name": "Pongsakorn Tosuwan" }, { "name": "Kate Bosworth" }, { "name": "Devon Sawa" }, { "name": "Owen Teague" }, { "name": "John Cusack" }, { "name": "Melanie Stone" }, { "name": "Adam Johnson" }, { "name": "Jake Stormoen" }, { "name": "Emilia Clarke" }, { "name": "Sam Claflin" }, { "name": "Jenna Coleman" }, { "name": "Thanh Long" }, { "name": "Pimchanok LerwisetpibolThana Aiemniyom" }, { "name": "Johnathan Samson" }, { "name": "Yui Tsutsumi" }, { "name": "Vera Farmiga" }, { "name": "Patrick Wilson" }, { "name": "Frances O'Connor" }, { "name": "Madison Wolfe" }, { "name": "Simon McBurney" }, { "name": "Franka Potente" }, { "name": "Kristian Brodie" }, { "name": "Yvonne Strahovski" }, { "name": "Adrien Brody" }, { "name": "Jennifer Beals" }, { "name": "Châu Tinh Trì" }, { "name": "La Chí Tường" }, { "name": "Trương Vũ Kỳ" }, { "name": "Travis Fimmel" }, { "name": "Robert Kazinsky" }, { "name": "Anders Dahlberg" }, { "name": "Åsmund Brede Eike" }, { "name": "Elg Elgesem" }, { "name": "Tina Fey" }, { "name": "Martin Freeman" }, { "name": "Đỗ Thiên Hạo" }, { "name": "Tần Lam" }, { "name": "Trần Hiểu" }, { "name": "Jesse Eisenberg" }, { "name": "Mark Ruffalo" }, { "name": "Keanu Reeves Charlize Theron Jason Isaacs" }, { "name": "Leonardo DiCaprio" }, { "name": "Kate Winslet" }, { "name": "Billy Zane" }, { "name": "Michael Martin" }, { "name": "Kristen Stewart" }, { "name": "Robert Pattinson" }, { "name": "Justin Chon" }, { "name": "Shailene Woodley" }, { "name": "Theo James" }, { "name": "Jeff Daniels" }, { "name": "Sidharth Malhotra" }, { "name": "Fawad Khan" }, { "name": "Alia Bhatt" }, { "name": "Leon Dai" }, { "name": "Chris Lee" }, { "name": "George Clooney" }, { "name": "Julia Roberts" }, { "name": "Jack O'Connell" }, { "name": "Su jeong Lim" }, { "name": "Jung suk Jo" }, { "name": "Jin wook Lee" }, { "name": "Lanyi Zhang" }, { "name": "Jiang Xinqi" }, { "name": "John Goodman" }, { "name": "John Gallagher Jr." }, { "name": "Kristen StewartAshley Greene" }, { "name": "Taylor Lautner" }, { "name": "Tao liang Tan" }, { "name": "James Tien and Wei Yang" }, { "name": "Motoki Fukami" }, { "name": "Elaiza Ikeda" }, { "name": "Megumi Kagurazaka" }, { "name": "Barry Watson" }, { "name": "Esmé Bianco" }, { "name": "Gavin Lewis" }, { "name": "Willem Dafoe" }, { "name": "Charlotte Gainsbourg" }, { "name": "Storm Acheche Sahlstrøm" }, { "name": "Vincent Cassel" }, { "name": "Léa Seydoux" }, { "name": "André Dussollier" }, { "name": "Sharlto Copley" }, { "name": "Tim Roth" }, { "name": "Haley Bennett" }, { "name": "Ansel Elgort" }, { "name": "Nat Wolff" }, { "name": "BoA" }, { "name": "Uyển Quỳnh Đan" }, { "name": "Đàm Diệu Văn" }, { "name": "Alden Ehrenreich" }, { "name": "Josh Gad" }, { "name": "Danny McBride" }, { "name": "Lê Minh" }, { "name": "Dư Thiếu Quần" }, { "name": "Shane West" }, { "name": "Mandy Moore" }, { "name": "Sharman Joshi" }, { "name": "Zarine Khan" }, { "name": "Karan Singh Grover" }, { "name": "Sam Rockwell" }, { "name": "Hilary Swank" }, { "name": "James Marsters" }, { "name": "Jeffrey Dean Morgan" }, { "name": "Janet McTeer" }, { "name": "Tom Hiddleston" }, { "name": "Young nam Jang" }, { "name": "Ho bin Jeong" }, { "name": "Yun seok Kim" }, { "name": "Halle Berry" }, { "name": "Ian McKellen" }, { "name": "Patrick Stewart" }, { "name": "Ellen Page" }, { "name": "preechaya pongthananikorn" }, { "name": "sunny suwanmethanont" }, { "name": "aoi sora" }, { "name": "popetorn soonthornyanakij" }, { "name": "Vanessa Kirby" }, { "name": "David Ajala" }, { "name": "Deborah Rosan" }, { "name": "Tom McKay" }, { "name": "Mike Noble" }, { "name": "Bentley Kalu" }, { "name": "Toby Jones" }, { "name": "Nick Frost" }, { "name": "Richard Armitage" }, { "name": "Ko Ah Sung" }, { "name": "Sacha Baron Cohen" }, { "name": "Mark Strong" }, { "name": "Eve Mauro" }, { "name": "Danny Trejo" }, { "name": "Rocky Myers" }, { "name": "Steven Seagal" }, { "name": "Pim Bubear" }, { "name": "Amanda Schull" }, { "name": "Rebecca De Mornay" }, { "name": "Nopachai Chaiyanam" }, { "name": "Djuangjai Hirunsri" }, { "name": "Mario Maurer" }, { "name": "Han Hyo Joo" }, { "name": "Kim Dae Myung" }, { "name": "Do Ji Han" }, { "name": "Park Shin Hye" }, { "name": "Park Seo Joon" }, { "name": "James McAvoy" }, { "name": "Taylor Kitsch" }, { "name": "Tạ Na" }, { "name": "Hà Cảnh" }, { "name": "Ngô Hân" }, { "name": "Lý Duy Gia" }, { "name": "Đỗ Hải Đào" }, { "name": "Pablo Schreiber" }, { "name": "James Badge Dale" }, { "name": "Ai Hashimoto" }, { "name": "Mayu Matsuoka" }, { "name": "Yôichi Nukumizu" }, { "name": "Đồng Đại Vĩ" }, { "name": "Heather Lind" }, { "name": "Emory Cohen" }, { "name": "Do Kyung Soo" }, { "name": "Kim So Hyun" }, { "name": "Yoo Yeon Seok" }, { "name": "Brian Cox" }, { "name": "Simon Yam" }, { "name": "Kiu Wai Miu" }, { "name": "Fala Chen" }, { "name": "Bo" }, { "name": "yuan Chan" }, { "name": "Ka" }, { "name": "lun Cheung" }, { "name": "Kuen Cheung" }, { "name": "Matt Schulze" }, { "name": "Francois Berleand (II)" }, { "name": "Ric Young (II)" }, { "name": "Doug Rand" }, { "name": "Elyas M'Barek" }, { "name": "Jella Haase" }, { "name": "Karoline" }, { "name": "Ngưu Manh Manh" }, { "name": "Tăng Chí Vỹ" }, { "name": "Chen Sicheng" }, { "name": "Vương Đông Phương" }, { "name": "Elma Begovic" }, { "name": "Annette Wozniak" }, { "name": "Denise Yuen" }, { "name": "Himesh Reshammiya" }, { "name": "Farah Karimaee" }, { "name": "Naseeruddin Shah" }, { "name": "Nguyên Bưu" }, { "name": "Jason Stathammber Valletta" }, { "name": "Mike Powers" }, { "name": "Devon Aoki" }, { "name": "Sarah Carter" }, { "name": "Ben Stiller" }, { "name": "Owen Wilson" }, { "name": "Penélope Cruz" }, { "name": "Park Shin Yang" }, { "name": "Camilla Belle" }, { "name": "Steven Strait" }, { "name": "Marco Khan" }, { "name": "Vanness Wu" }, { "name": "Shawn Yue" }, { "name": "Yu Xia" }, { "name": "Ralph Ineson" }, { "name": "Kate Dickie" }, { "name": "Olivia Munn" }, { "name": "Tạ Dung Nhi" }, { "name": "Mik Thongraya" }, { "name": "Dương Hạnh" }, { "name": "Kate Siegel" }, { "name": "Michael Trucco" }, { "name": "Kabby Borders" }, { "name": "Mirela Burke" }, { "name": "Hunter Canedy" }, { "name": "Ruby Lin" }, { "name": "Tony Yo ning Yang" }, { "name": "Ryôhei Suzuki" }, { "name": "Kentarô Sakaguchi" }, { "name": "Sawa Suzuki" }, { "name": "Gerardo Taracena" }, { "name": "Raoul Trujillo" }, { "name": "Dalia Hernández" }, { "name": "Mario Casas" }, { "name": "Macarena García" }, { "name": "Daniel O'Neill" }, { "name": "Priya Suandokemai" }, { "name": "Gwion Jacob Miles" }, { "name": "Robert De Niro" }, { "name": "Zac Efron" }, { "name": "Zoey Deutch" }, { "name": "Leslie Cheung" }, { "name": "Maggie Cheung" }, { "name": "Andy Lau" }, { "name": "Scarlett Johansson" }, { "name": "Robert Downey Jr." }, { "name": "Jon Favreau" }, { "name": "Vince Vaughn" }, { "name": "Baihe Bai" }, { "name": "Kun Chen" }, { "name": "Hao Qin" }, { "name": "Chung Tử Ðơn" }, { "name": "Waise Lee Chi Hung" }, { "name": "Norman Chu" }, { "name": "Vu Thừa Huệ" }, { "name": "Tống Dương" }, { "name": "Lý Trình Viện" }, { "name": "Cảnh Lạc" }, { "name": "Han Chae Young" }, { "name": "Billy Lau" }, { "name": "Chin Siu Ho" }, { "name": "Siu hou Chin" }, { "name": "Yusi Peng" }, { "name": "Zhang He" }, { "name": "Lý Nhược Đồng" }, { "name": "Dayo Wong Chi Wah" }, { "name": "Lương Hán Văn" }, { "name": "Lam Kwok Bun" }, { "name": "Alexis Peterman" }, { "name": "Matt Rippy" }, { "name": "Nigel Barber" }, { "name": "Kirsten Dunst" }, { "name": "Amber Kuo" }, { "name": "Kai Chung Cheung" }, { "name": "Abby" }, { "name": "Jiang Wenxuan" }, { "name": "Miao Qing" }, { "name": "Liu Liyuan" }, { "name": "Song Wei" }, { "name": "Blake Anderson" }, { "name": "Tyree Brown" }, { "name": "David Cowgill" }, { "name": "Farhan Akhtar" }, { "name": "Aditi Rao Hydari" }, { "name": "Henry Cavill" }, { "name": "Rupert Evans" }, { "name": "James Russell" }, { "name": "Casey Affleck" }, { "name": "Kana Hanazawa" }, { "name": "Taiten Kusunoki" }, { "name": "Chelsey Crisp" }, { "name": "Riley Smith" }, { "name": "Michael Steger" }, { "name": "Kim Ji Ho" }, { "name": "Park Yong Woo" }, { "name": "Park Hae Joon" }, { "name": "Joo Da Young" }, { "name": "David Lee" }, { "name": "Ramin Karimloo" }, { "name": "Sierra Boggess" }, { "name": "Hadley Fraser" }, { "name": "Wendy Ferguson" }, { "name": "Gareth Snook" }, { "name": "Wynne Evans" }, { "name": "Liz Robertson" }, { "name": "Barry James" }, { "name": "Sergei Polunin" }, { "name": "Yeon Jun Suk" }, { "name": "Jessica Chastain" }, { "name": "Akshay Kumar" }, { "name": "Nimrat Kaur" }, { "name": "Taranjit Kaur" }, { "name": "Nhiều Diễn Viên" }, { "name": "Joseph Fiennes" }, { "name": "Tom Felton" }, { "name": "Peter Firth" }, { "name": "Neel Sethi" }, { "name": "Bill Murray" }, { "name": "Ben Kingsley" }, { "name": "Rosario Dawson" }, { "name": "Christopher Gorham" }, { "name": "Shemar Moore" }, { "name": "Sarah Rose Denton" }, { "name": "Lucy Clarvis" }, { "name": "Lawrence Weller" }, { "name": "Ju Yuebin" }, { "name": "Zhu Liqing" }, { "name": "Lai HongYu" }, { "name": "Rob Van Dam" }, { "name": "Tim Abell" }, { "name": "Sarah Bolger" }, { "name": "Carly Adams" }, { "name": "Carl Bailey" }, { "name": "Claire Forlani" }, { "name": "Mark Paul Gosselaar" }, { "name": "Natalie Dormer" }, { "name": "Stephanie Vogt" }, { "name": "Chris O'Dowd" }, { "name": "Guillaume Canet" }, { "name": "Jae mo Ahn" }, { "name": "Kil kang Ahn" }, { "name": "Richard Epcar" }, { "name": "Matthew Zuk" }, { "name": "Gabriela Lopez" }, { "name": "Dani Rovira" }, { "name": "Michelle Jenner" }, { "name": "Carme Calvell" }, { "name": "Iris Chung" }, { "name": "Dominic Ho" }, { "name": "Tony Ho" }, { "name": "Edgar Ramirez" }, { "name": "Luke Bracey" }, { "name": "Ray Winstone" }, { "name": "Rob Schneider" }, { "name": "Heather Graham" }, { "name": "Omar Sy" }, { "name": "Izïa Higelin" }, { "name": "Michaël Grégorio" }, { "name": "Alec Baldwin" }, { "name": "Bryn Apprill" }, { "name": "Kumiko Asô" }, { "name": "Morgan Berry" }, { "name": "Mia Goth" }, { "name": "Martin McCann" }, { "name": "Andrew Simpson" }, { "name": "Lizzy Caplan" }, { "name": "Lưu Gia Linh" }, { "name": "Lý Vũ Xuân" }, { "name": "Aaron Eckhart" }, { "name": "Từ Thiếu Cường" }, { "name": "Vương Tiểu Nghị" }, { "name": "Huỳnh Bạch Lộ" }, { "name": "Paul Gross" }, { "name": "Christine Horne" }, { "name": "Jason Lee" }, { "name": "Jesica Ahlberg" }, { "name": "Josh Green" }, { "name": "Jean Paul Rouve" }, { "name": "Vanessa Guide" }, { "name": "Steve Daron" }, { "name": "Guisela Moro" }, { "name": "Burt Reynolds" }, { "name": "Josh Hutcherson" }, { "name": "Charlie Weber" }, { "name": "Tom Ainsley" }, { "name": "Brenton Thwaites" }, { "name": "Nikolaj Coster Waldau" }, { "name": "Ginnifer Goodwin" }, { "name": "Jason Bateman" }, { "name": "Nhâm Đạt Hoa" }, { "name": "Hoắc Kiến Hoa" }, { "name": "Michael Keaton" }, { "name": "Narikun Ketprapakorn" }, { "name": "Thanapob Leeratanakajorn" }, { "name": "Thiti Mahayotaruk" }, { "name": "Lily James" }, { "name": "Sam Riley" }, { "name": "Will Kemp" }, { "name": "Brinna Kelly" }, { "name": "William Forsythe" }, { "name": "aomi Watts" }, { "name": "Andy Serkis" }, { "name": "Jamie Bell" }, { "name": "Rooney Mara" }, { "name": "Sibelle Hu" }, { "name": "Cynthia Rothrock" }, { "name": "Kara Hui" }, { "name": "Hong Jong Hyun" }, { "name": "Sarah Snook" }, { "name": "Jessica Brown Findlay" }, { "name": "Ana de Armas" }, { "name": "Christopher McDonald" }, { "name": "Johnny Messner" }, { "name": "Mickey Rourke" }, { "name": "Dương Tử Quỳnh" }, { "name": "Saoirse Ronan" }, { "name": "Domhnall Gleeson" }, { "name": "Brandon Routh" }, { "name": "Yuqi Zhang" }, { "name": "Russell Wong" }, { "name": "Demi Moore" }, { "name": "Kiefer Sutherland" }, { "name": "Donald Sutherland" }, { "name": "Josh Duhamel" }, { "name": "Anthony Hopkins" }, { "name": "Al Pacino" }, { "name": "Jeong min Hwang" }, { "name": "Sung ha Jo" }, { "name": "In kwon Kim" }, { "name": "David Thewlis" }, { "name": "Devon Bostick" }, { "name": "Aaron Ashmore" }, { "name": "Reiko Aylesworth" }, { "name": "Steven Pasquale" }, { "name": "Shareeka Epps" }, { "name": "Tom Hiddleston Brie Larson Toby Kebbell Corey Hawkins John C. Reilly Tom Wilkinson Thomas Mann John Goodman Samuel L. Jackson" }, { "name": "Nicole Kidman" }, { "name": "Jacqueline Abrahams" }, { "name": "Roger Ashton Griffiths" }, { "name": "Jessica Barden" }, { "name": "Sanaa Lathan" }, { "name": "Raoul Bova" }, { "name": "Scott Eastwood" }, { "name": "Angela Sarafyan" }, { "name": "Justin Arnold" }, { "name": "Phùng Thiệu Phong" }, { "name": "Củng Lợi" }, { "name": "Teodora Duhovnikova" }, { "name": "Alon Aboutboul" }, { "name": "Ice Cube" }, { "name": "Tika Sumpter" }, { "name": "Heather Sossaman" }, { "name": "Matthew Bohrer" }, { "name": "Courtney Halverson" }, { "name": "Bai Ling" }, { "name": "Amin Joseph" }, { "name": "Jung Woo" }, { "name": "Angelina Jolie" }, { "name": "Dustin Hoffman" }, { "name": "Michael B. Jordan" }, { "name": "Jacob Tremblay" }, { "name": "Sean Bridgers" }, { "name": "Morena Baccarin" }, { "name": "T.J. Miller" }, { "name": "Trương Mạn Ngọc" }, { "name": "Địch Long" }, { "name": "Yuliya Peresild" }, { "name": "Evgeniy Tsyganov" }, { "name": "Joan Blackham" }, { "name": "Vinnie Jones" }, { "name": "Sean Cronin" }, { "name": "Nicole Faraday" }, { "name": "Luis Tosar" }, { "name": "Elvira Mínguez" }, { "name": "Rossy de Palma" }, { "name": "Quim Gutiérrez" }, { "name": "Carlos Areces" }, { "name": "Liêu Phàm" }, { "name": "Tống giai" }, { "name": "Tưởng Văn Lệ" }, { "name": "Lily Rab" }, { "name": "Jason O'Mara" }, { "name": "Stuart Allan" }, { "name": "Kevin Chapman" }, { "name": "Kelly Blatz" }, { "name": "Billy Bob Thornton" }, { "name": "Phan Hồng" }, { "name": "Kim Sĩ Kiệt" }, { "name": "Hình Giai Đống" }, { "name": "Tim Robbins" }, { "name": "Sun kyun Lee" }, { "name": "Go eun Kim" }, { "name": "Hyeong seong Jang" }, { "name": "Salman Khan" }, { "name": "Kareena Kapoor" }, { "name": "Harshaali Malhotra" }, { "name": "Shin Min Ah" }, { "name": "Jo Jung Suk" }, { "name": "Shôta Sometani" }, { "name": "Eri Fukatsu" }, { "name": "Đinh Tử Tuấn" }, { "name": "Lê Tư" }, { "name": "Lý Tụ Hiền" }, { "name": "Tobey Maguire" }, { "name": "Peter Sarsgaard" }, { "name": "Anne Hathaway" }, { "name": "Jack Madigan" }, { "name": "Cao Thành Long" }, { "name": "Lưu Vũ Thỉnh" }, { "name": "Bành Ngu Khư" }, { "name": "Lưu Hạo Nhiên" }, { "name": "Emily Browning" }, { "name": "Mark Rylance" }, { "name": "Alan Alda" }, { "name": "Zhang Shiyu" }, { "name": "Qu Yu tong" }, { "name": "Carrie Ng" }, { "name": "Sammy Hung Tin Chiu" }, { "name": "Kabby Hui" }, { "name": "Rupert Grint" }, { "name": "Steve Carell" }, { "name": "Ryan Gosling" }, { "name": "Joo Won" }, { "name": "(Fx) Sulli" }, { "name": "Ahn Jae Hyun" }, { "name": "Bang Sung Joon" }, { "name": "Lee David" }, { "name": "Jo Sung Ha" }, { "name": "Guy Pearce" }, { "name": "Scoot McNairy" }, { "name": "Trương Hàm Dư" }, { "name": "Lý Dịch Phong" }, { "name": "Hứa Tình" }, { "name": "Phùng Tiểu Cương" }, { "name": "Charlie Chin" }, { "name": "Dorothy Chi hsia Yu" }, { "name": "Hua Yueh" }, { "name": "Phạm Vỹ" }, { "name": "Giang San" }, { "name": "Tiêu Du Trân" }, { "name": "Vương Nhất Minh" }, { "name": "Trương Gia Dịch" }, { "name": "Từ Tịnh Lôi" }, { "name": "Nhiệt Y Trát" }, { "name": "Tùng San" }, { "name": "Walton Goggins" }, { "name": "Tiểu Thẩm Dương" }, { "name": "Đổng Thành Bằng" }, { "name": "Thích Tiểu Long" }, { "name": "Đàm Tiểu Long" }, { "name": "Từ Khiết Nhi" }, { "name": "Viên Hiểu Siêu" }, { "name": "Lưu Thừa Tuấn" }, { "name": "Hùng Đại Lâm" }, { "name": "Bo lin Chen" }, { "name": "Wenbo Ding" }, { "name": "Zhenyu Qiao" }, { "name": "Jean Reno" }, { "name": "Alban Lenoir" }, { "name": "Caterina Murino" }, { "name": "Song Seung Hun" }, { "name": "Giang Ngữ Thần" }, { "name": "Jia (Miss A)" }, { "name": "Âu Đệ" }, { "name": "Ha Jung woo" }, { "name": "Ha Ji won" }, { "name": "Nam Darum" }, { "name": "No Kang Min" }, { "name": "Jeon Hyeon Seok" }, { "name": "Seong Dong il" }, { "name": "Jeong Man sik" }, { "name": "Kim Seong gyoon" }, { "name": "Lưu Đức Hòa" }, { "name": "Kate Mara" }, { "name": "Mimi Rogers" }, { "name": "Ajay Devgn" }, { "name": "Shriya Saran" }, { "name": "Phim Kinh Dị" }, { "name": "Park Geun Hyung" }, { "name": "Park Chanyeol" }, { "name": "Nguyên Bữu" }, { "name": "Dương Lệ Thanh" }, { "name": "Matthew Reese" }, { "name": "Danielle Chuchran" }, { "name": "Ha Ji Won" }, { "name": "Lim Chang Jung" }, { "name": "Park Chang Ik" }, { "name": "Park Yoo Sun" }, { "name": "Kang Ye Won" }, { "name": "Lee Hun" }, { "name": "Ngải Uy" }, { "name": "Lư Hải Bằng" }, { "name": "Liên Thi Nhã" }, { "name": "Yoo" }, { "name": "Jeong Kim" }, { "name": "Ye Ji Seo" }, { "name": "Ho Joon Son" }, { "name": "Colin Farrell" }, { "name": "Abbie Cornish" }, { "name": "Cillian Murphy" }, { "name": "Brendan Gleeson" }, { "name": "Amanda Abbington" }, { "name": "Rupert Graves" }, { "name": "Una Stubbs" }, { "name": "Lương Siêu" }, { "name": "Ben Collins" }, { "name": "Peter Miles" }, { "name": "Evangelos Grecos" }, { "name": "Jennifer Jason Leigh" }, { "name": "Ke Bai" }, { "name": "Xunzimo Liu" }, { "name": "Tianyu Ma" }, { "name": "Im Ju Hwan" }, { "name": "Lee Won Geun" }, { "name": "Elijah Wood" }, { "name": "Alison Pill" }, { "name": "Hao Lei" }, { "name": "Marika Itô" }, { "name": "Seiko Ozone" }, { "name": "Taichi Yamada" }, { "name": "Lâm Chánh Anh" }, { "name": "Suriya" }, { "name": "Samantha Ruth Prabhu" }, { "name": "Vidyut Jamwal" }, { "name": "Ip Chun" }, { "name": "Siu Wong Fan" }, { "name": "Yi Huang" }, { "name": "Tin Chiu Hung" }, { "name": "Lee Seung Gi" }, { "name": "Lee Seo Jin" }, { "name": "Hwa Young" }, { "name": "Son Ga In" }, { "name": "Lee Dong Hae" }, { "name": "Nam Ji Hyun" }, { "name": "Song Seung Hyun" }, { "name": "Will Poulter" }, { "name": "Alison Brie" }, { "name": "Charlotte Le Bon" }, { "name": "Guillaume Baillargeon" }, { "name": "Hoàng Hồng Thăng" }, { "name": "Vương Dương Minh" }, { "name": "Thái Chấn Nam" }, { "name": "Emily Blunt" }, { "name": "Dee Bradley Baker" }, { "name": "Jeff Bennett" }, { "name": "Beau Black" }, { "name": "Honghui Xu" }, { "name": "Seong woo Bae" }, { "name": "Son Hyun joo" }, { "name": "Jang In sub" }, { "name": "Adam Sandler" }, { "name": "Terry Crews" }, { "name": "Jorge Garcia" }, { "name": "Yi Yan Jiang" }, { "name": "Ka Tung Lam" }, { "name": "Mạc Tiểu Kỳ" }, { "name": "Mã Dục Kha" }, { "name": "Phan Việt Minh" }, { "name": "Grace Wang" }, { "name": "Lâm Tuyết" }, { "name": "Kellan Lutz" }, { "name": "Cao Vân Tường" }, { "name": "Hùng Nãi Cẩn" }, { "name": "Lưu Ngôn Ngữ" }, { "name": "Sienna Miller" }, { "name": "Daisy Ridley" }, { "name": "John Boyega" }, { "name": "Tye Sheridan" }, { "name": "Meng Meng Liu" }, { "name": "Ning Li" }, { "name": "Enhe Kang" }, { "name": "Weixun Zhang" }, { "name": "RenLiang Qiao" }, { "name": "Zhang Xinyu" }, { "name": "French Stewart" }, { "name": "Erick Avari" }, { "name": "Barbara Babcock" }, { "name": "Odeya Rush" }, { "name": "Christina Cabot" }, { "name": "Mos Def" }, { "name": "Jason Segel" }, { "name": "Anna Chlumsky" }, { "name": "Jonathan Bennett" }, { "name": "Talulah Riley" }, { "name": "Rosa Salazar" }, { "name": "Lữ Duật Lai" }, { "name": "Tạ Quân Hào" }, { "name": "Trương Duệ Gia" }, { "name": "Trần Đăng" }, { "name": "Mã Lệ" }, { "name": "Duẫn Chính" }, { "name": "Macaulay Culkin" }, { "name": "Joe Pesci" }, { "name": "Daniel Stern" }, { "name": "John Heard" }, { "name": "Roberts Blossom" }, { "name": "Kodi Smit McPhee" }, { "name": "Ben Mendelsohn" }, { "name": "Wallace Shawn" }, { "name": "Kristoffer Joner" }, { "name": "Thomas Bo Larsen" }, { "name": "Ane Dahl Torp" }, { "name": "Levi Miller" }, { "name": "Garrett Hedlund" }, { "name": "Jennifer Ehle" }, { "name": "Kevin Durand" }, { "name": "Mélanie St Pierre" }, { "name": "Abby Feng" }, { "name": "Yunqi Guo" }, { "name": "Musi Ni" }, { "name": "Jiahao Song" }, { "name": "Hanfeng" }, { "name": "Catherine O’Hara" }, { "name": "Tara Basro" }, { "name": "Christine Hakim" }, { "name": "Eva Celia Latjuba" }, { "name": "Lập Uy Liêm" }, { "name": "Chu Châu" }, { "name": "Ronald Cheng" }, { "name": "Mark Wu" }, { "name": "Archie Kao" }, { "name": "Anita Yuen" }, { "name": "Zimu Zhang" }, { "name": "Anushka Shetty" }, { "name": "Allu Arjun" }, { "name": "Rana Daggubati" }, { "name": "Cheon hee Lee" }, { "name": "Kwang Soo Lee" }, { "name": "Bo yeong Park" }, { "name": "Alex D. Linz" }, { "name": "Olek Krupa" }, { "name": "Rya Kihlstedt" }, { "name": "Laia Costa" }, { "name": "Frederick Lau" }, { "name": "Franz Rogowski" }, { "name": "James Ransone" }, { "name": "Shannyn Sossamon" }, { "name": "Robert Daniel Sloan" }, { "name": "Chin Han" }, { "name": "Ngô Thanh Liên" }, { "name": "Trương Bá Chi" }, { "name": "Frances McDormand" }, { "name": "Maleah Nipay Padilla" }, { "name": "KIKO MIZUHARA" }, { "name": "KANATA HONGO" }, { "name": "RINA TAKEDA" }, { "name": "SATOMI ISHIHARA" }, { "name": "Mark Chao" }, { "name": "Jin Chen" }, { "name": "Li Feng" }, { "name": "Andy Samberg" }, { "name": "Selena Gomez" }, { "name": "Airi Taira" }, { "name": "Ren Kiriyama" }, { "name": "Nonoka Ono" }, { "name": "Sang Woo Kwon" }, { "name": "Young hee Seo" }, { "name": "Dong il Sung" }, { "name": "Hershel Peppers" }, { "name": "Jet Li" }, { "name": "Charlton HestonJames Coburn" }, { "name": "Đồng Đại Vi" }, { "name": "Sung Kang" }, { "name": "Nick Chinlund" }, { "name": "Caitlin Keats" }, { "name": "Phim Hài Hước" }, { "name": "Jackie Shroff" }, { "name": "Haruma Miura" }, { "name": "Kiko Mizuhara" }, { "name": "Jennifer Aniston" }, { "name": "Reina Triendl" }, { "name": "Mariko Shinoda" }, { "name": "Erina Mano" }, { "name": "Chia Liang Liu" }, { "name": "Jung Yuen" }, { "name": "Lars Mikkelsen" }, { "name": "Pilou Asbæk" }, { "name": "Gustav Dyekjær Giese" }, { "name": "Nickie Bryar" }, { "name": "Feodor Chin" }, { "name": "Nika Futterman" }, { "name": "Devin Brochu" }, { "name": "Natalie Portma" }, { "name": "Shia LaBeouf" }, { "name": "John Turturro" }, { "name": "Tyrese Gibson" }, { "name": "Rosie Huntington Whiteley" }, { "name": "Patrick Dempsey" }, { "name": "Rich Hutchman" }, { "name": "Kevin Dunn" }, { "name": "John Malkovic" }, { "name": "Daniel Craig" }, { "name": "Mathieu Amalric" }, { "name": "Gemma Arterton" }, { "name": "Giang Nhất Yến" }, { "name": "Huỳnh Thu Sinh" }, { "name": "Ngô Tú Ba" }, { "name": "Rupert Friend" }, { "name": "Hannah Ware" }, { "name": "Phim Võ Thuật" }, { "name": "Saif Ali Khan" }, { "name": "Sabyasachi Chakraborty" }, { "name": "Thiệu Binh" }, { "name": "Đổng Tuyền" }, { "name": "Bành Ba" }, { "name": "Armie Hammer" }, { "name": "Hayden Christensen" }, { "name": "Jordana Brewster" }, { "name": "Monica Engesser" }, { "name": "Amelia Haberman" }, { "name": "James Ray" }, { "name": "Phim Cổ Trang" }, { "name": "Trịnh Trung Cơ" }, { "name": "William Shatner" }, { "name": "Leonard Nimoy" }, { "name": "DeForest Kelley" }, { "name": "Jonathan Frakes" }, { "name": "Brent Spiner" }, { "name": "Abraham Attah" }, { "name": "Emmanuel Affadzi" }, { "name": "Ricky Adelayitor" }, { "name": "Chang Yiran" }, { "name": "Jiajia Liu" }, { "name": "Ying Fei" }, { "name": "Ward Horton" }, { "name": "Alfre Woodard" }, { "name": "Holly Valance" }, { "name": "Vincent Pastore" }, { "name": "Corinna Harney" }, { "name": "Ngô Tôn" }, { "name": "Malcolm McDowell" }, { "name": "Lilian Prent" }, { "name": "Jan Josef Liefers" }, { "name": "Christoph Maria Herbst" }, { "name": "Chen Chang" }, { "name": "Satoshi Tsumabuki" }, { "name": "Dylan O'Brien" }, { "name": "Thomas Brodie Sangster" }, { "name": "Connie Britton" }, { "name": "Taissa Farmiga" }, { "name": "Malin Akerman" }, { "name": "Adam DeVine" }, { "name": "Boran Jing" }, { "name": "Miroslav Karel" }, { "name": "Anthony Ilott" }, { "name": "Aqueela Zoll" }, { "name": "Sadie Katz" }, { "name": "Kate Beckinsale" }, { "name": "Robin Williams" }, { "name": "Simon Pegg" }, { "name": "Randy Orton" }, { "name": "Wes Studi" }, { "name": "Helen McCrory" }, { "name": "Jeremy Irvine" }, { "name": "Phoebe Fox" }, { "name": "Vin Diesel" }, { "name": "Rose Leslie" }, { "name": "Alan Tang" }, { "name": "Brigitte Lin" }, { "name": "Elsie Chan" }, { "name": "Lake Bell" }, { "name": "Mike Tyson" }, { "name": "Trương Tấn" }, { "name": "Xin Gao" }, { "name": "Christoph Waltz" }, { "name": "Michael Douglas" }, { "name": "Corey Stoll" }, { "name": "Cynthia Khan" }, { "name": "Gary Chow" }, { "name": "Prabhas" }, { "name": "Katrina Law" }, { "name": "Lochlyn Munro" }, { "name": "Victoria Pratt" }, { "name": "Michael Gross" }, { "name": "Jamie Kennedy" }, { "name": "Ernest Ndhlovu" }, { "name": "Ji hyun Jun" }, { "name": "Jung jae Lee" }, { "name": "Jason Clarke" }, { "name": "Ang Phula Sherpa" }, { "name": "Thomas M. Wright" }, { "name": "Stephanie Honoré" }, { "name": "Jerome Andries" }, { "name": "Sue Lynn Ansari" }, { "name": "James Purefoy" }, { "name": "Laura Linney" }, { "name": "Hiroyuki Sanada" }, { "name": "Ed Speleers" }, { "name": "Holly Weston" }, { "name": "Elliot Cowan" }, { "name": "Kane Hodder" }, { "name": "Bill Moseley" }, { "name": "Olivia Alexander" }, { "name": "Isla Fisher" }, { "name": "Jim Parsons" }, { "name": "Anson Mount" }, { "name": "Matthew Goode" }, { "name": "Joe Cole" }, { "name": "Hong Zhou" }, { "name": "Eunsung Kim" }, { "name": "Lee Chae young" }, { "name": "Al Pacinondy Garcia" }, { "name": "James Caan" }, { "name": "Thomas Haden Church" }, { "name": "Josh Wiggins" }, { "name": "Luke Kleintank" }, { "name": "Tony Revolori" }, { "name": "Kiersey Clemon" }, { "name": "Chao Deng" }, { "name": "Yihong Duan" }, { "name": "Tao Guo" }, { "name": "Aaron Stielstra" }, { "name": "Michael Segal" }, { "name": "Marius Bizau" }, { "name": "Lorenza Izzo" }, { "name": "Bruce Payne" }, { "name": "Mark Adams" }, { "name": "Adrian Grenier" }, { "name": "Kevin Connolly" }, { "name": "Jerry Ferrara" }, { "name": "Miles Teller" }, { "name": "Max Rhyser" }, { "name": "Ashton Leigh" }, { "name": "Boomer Tibb" }, { "name": "Daniel MacPherson" }, { "name": "Grace Huang" }, { "name": "Luke Hemsworth" }, { "name": "Brittany Allen" }, { "name": "Freddie Stroma" }, { "name": "Jesse Moss" }, { "name": "Krysten Ritter" }, { "name": "Viktor Bychkov" }, { "name": "Emma Cerná" }, { "name": "Aleksey Chadov" }, { "name": "Ali Larter" }, { "name": "Max Rose" }, { "name": "Chloe Perrin" }, { "name": "Ariel Levy" }, { "name": "Aaron Burns" }, { "name": "Zan Ban" }, { "name": "Zhao Chunyang" }, { "name": "Dongping Gao" }, { "name": "Yayan Ruhian" }, { "name": "Rirî Furankî" }, { "name": "Mio Yûki" }, { "name": "Robin Das" }, { "name": "Zachary Coffin" }, { "name": "Dustin Nguyen" }, { "name": "Sahajak Boonthanakit" }, { "name": "Sarah Butler" }, { "name": "Gabriel Hogan" }, { "name": "Doug McKeon" }, { "name": "Bipasha Basu" }, { "name": "Sulabha Arya" }, { "name": "Matt Winston" }, { "name": "Camille Balsamo" }, { "name": "Chung Hân Đồng" }, { "name": "Kiều Chấn Vũ" }, { "name": "Mayuko Iwasa" }, { "name": "Minehiro Kinomoto" }, { "name": "Nao Nagasawa" }, { "name": "Oona Laurence" }, { "name": "Mike Doyle" }, { "name": "Estella Warren" }, { "name": "Massimo Dobrovic" }, { "name": "Choi Won joon" }, { "name": "Han Se I" }, { "name": "Lee Jae in" }, { "name": "Jang Moon yeong" }, { "name": "Sara Malakul Lane" }, { "name": "Lily Brooks O'Briant" }, { "name": "Pierre Coffin" }, { "name": "Prama Immanothai" }, { "name": "Focus Jirakul" }, { "name": "Chonnikan Netjui" }, { "name": "Stefanie Scott" }, { "name": "Angus Sampson" }, { "name": "Jim Carrey" }, { "name": "Rob Riggle" }, { "name": "Amy Poehler" }, { "name": "Bill Hader" }, { "name": "Lewis Black" }, { "name": "Song Hye Kyo" }, { "name": "Nagasawa Masami" }, { "name": "Takeshi Kaneshiro" }, { "name": "Ed Skrein" }, { "name": "Loan Chabanol" }, { "name": "Ray Stevenson" }, { "name": "Togo Igawa" }, { "name": "Christian Howard" }, { "name": "Mike Moh" }, { "name": "Jeremy Renner" }, { "name": "Jin Goo" }, { "name": "Lee Hyun Woo" }, { "name": "Mu Yeol Kim" }, { "name": "Kevin James" }, { "name": "Michelle Monaghan" }, { "name": "Jessica Lowndes" }, { "name": "Freida Pinto" }, { "name": "Ryan Kwanten" }, { "name": "Mischa Barton" }, { "name": "Luke Goss" }, { "name": "Ving Rhames" }, { "name": "Grace Phipps" }, { "name": "Spencer Breslin" }, { "name": "Maestro Harrell" }, { "name": "Jude Law" }, { "name": "Christina Applegate" }, { "name": "Skyler Gisondo" }, { "name": "Jonah Hill" }, { "name": "Lauren Ambrose" }, { "name": "Wes Ramsey" }, { "name": "Christopher Backus" }, { "name": "Steve Agee" }, { "name": "Nick Damici" }, { "name": "Kevin Duran" }, { "name": "Arnold Schwarzenegger" }, { "name": "Kit Harington" }, { "name": "Tuppence Middleton" }, { "name": "Lara Pulver" }, { "name": "Jonathan Good" }, { "name": "Roger R. Cross" }, { "name": "Daniel Cudmore" }, { "name": "Carla Gugino" }, { "name": "Alexandra Daddario" }, { "name": "Hugh Laurie" }, { "name": "Natalie Martinez" }, { "name": "Matt Mercer" }, { "name": "Marianna Palka" }, { "name": "Morgan Peter Brown" }, { "name": "Rashida Jones" }, { "name": "Lauren Gottlieb" }, { "name": "Salma Hayek" }, { "name": "Tăng Chí Vĩ" }, { "name": "Ngô Quân Như" }, { "name": "Thang Duy" }, { "name": "James Marsden" }, { "name": "Timothy Woodward Jr" }, { "name": "Andrew Cheney" }, { "name": "John Rhys Davies" }, { "name": "Kara Killmer" }, { "name": "Phim Tâm Lý" }, { "name": "Tuva Novotny" }, { "name": "Fridtjov Såheim" }, { "name": "Anders Baasmo Christiansen" }, { "name": "Jennifer Lopez" }, { "name": "Viola Davis" }, { "name": "Shea Whigham" }, { "name": "Allari Naresh" }, { "name": "Allari Naresh Sakshi Chaudhary" }, { "name": "Sarah Wayne Callies" }, { "name": "Veronica Ferres" }, { "name": "Lauren Beatty" }, { "name": "Hans Zhang Han" }, { "name": "Zhang Li" }, { "name": "Fan Chih Wei" }, { "name": "Kong Wei" }, { "name": "Kevin Sorbo" }, { "name": "Peter Fonda" }, { "name": "Andrew Galligan" }, { "name": "Matt Bomer" }, { "name": "Trương Chấn" }, { "name": "Lâm Chí Linh" }, { "name": "Vương Học Kỳ" }, { "name": "Jacky Cheung" }, { "name": "Dermot Magennis" }, { "name": "Callum Maloney" }, { "name": "Tara Flynn" }, { "name": "Jaime King" }, { "name": "Madeleine Stack" }, { "name": "Phim Viễn Tưởng" }, { "name": "Matthew Fox" }, { "name": "Quinn McColgan" }, { "name": "Angela Baby" }, { "name": "Paul Walker" }, { "name": "Michelle Rodriguez" }, { "name": "Chris Bridges" }, { "name": "Lucas Black" }, { "name": "Ko Shibasaki" }, { "name": "Rihanna" }, { "name": "Steve Martin" }, { "name": "Masachika Ichimura" }, { "name": "Yumi Kakazu" }, { "name": "Reese Witherspoon" }, { "name": "Sofía Vergara" }, { "name": "Matthew Del Negro" }, { "name": "Philip Davis" }, { "name": "Dexter Fletcher" }, { "name": "Patrick Bergin" }, { "name": "Junior N.T.R." }, { "name": "Kajal Agarwal" }, { "name": "Ali" }, { "name": "Lim Soo Jung" }, { "name": "Lee Geung Young" }, { "name": "Min ho Lee" }, { "name": "Rae won Kim" }, { "name": "Jin young Jung" }, { "name": "Jun'ichi Okada" }, { "name": "Mao Inoue" }, { "name": "Dong seok Ma" }, { "name": "Daniel Choi" }, { "name": "Teerapat Lohanan" }, { "name": "Pongsatorn Sripinta" }, { "name": "Withawat Thaokhamlue" }, { "name": "Michael Rene Walton" }, { "name": "Vivica A. Fox" }, { "name": "Judi Dench" }, { "name": "Steve Coogan" }, { "name": "Sophie Kennedy Clark" }, { "name": "Clifton Collins Jr." }, { "name": "Jessica Cook" }, { "name": "Tony de Maeyer" }, { "name": "Nghê Ni" }, { "name": "Trình Vũ Mông" }, { "name": "Michel Diercks" }, { "name": "Pit Bukowski" }, { "name": "Uwe Preuss" }, { "name": "Sterling Jerins" }, { "name": "Ty Simpkins" }, { "name": "Keir Gilchrist" }, { "name": "Olivia Luccardi" }, { "name": "Dean Cain" }, { "name": "Paul Wight" }, { "name": "Michael Eklund" }, { "name": "Onni Tommila" }, { "name": "Tom Arnold" }, { "name": "Drake Bell" }, { "name": "Miranda Cosgrove" }, { "name": "Woo bin Kim" }, { "name": "Jun Ho Lee" }, { "name": "Ha Neul Kang" }, { "name": "Paddy Wallace" }, { "name": "Parker Sawyers" }, { "name": "Bashar Rahal" }, { "name": "Liam Neeson" }, { "name": "Ed Harris" }, { "name": "Joel Kinnaman" }, { "name": "Reese Hartwig" }, { "name": "Sixuan Chen" }, { "name": "Mark Cheng" }, { "name": "Jamie Cheung" }, { "name": "Raini Rodriguez" }, { "name": "Eduardo Verástegui" }, { "name": "Rutger Hauer" }, { "name": "Aurélie Meriel" }, { "name": "Seth Macfarlane" }, { "name": "Amanda Seyfried" }, { "name": "Tom Schilling" }, { "name": "Wotan Wilke Möhring" }, { "name": "An Chí Kiệt" }, { "name": "Darren Shahlavi" }, { "name": "Charlotte Peters" }, { "name": "Blake Lively" }, { "name": "Michiel Huisman" }, { "name": "Harrison Ford" }, { "name": "Idina Menzel" }, { "name": "Rosemarie DeWitt" }, { "name": "Kennedi Clement" }, { "name": "Olivia Wilde" }, { "name": "Mark Duplass" }, { "name": "Evan Peters" }, { "name": "Diệp Tuyền" }, { "name": "Tiêu Ân Tuấn" }, { "name": "Andrew Lin" }, { "name": "Sean Penn" }, { "name": "Jasmine Trinca" }, { "name": "Mélanie Laurent" }, { "name": "Sarah Gadon" }, { "name": "Ewan McGregor" }, { "name": "Brendan Kerkvliet" }, { "name": "Clive Owen" }, { "name": "Aksel Hennie" }, { "name": "Takamasa Ishihara" }, { "name": "David Rawle" }, { "name": "Lisa Hannigan" }, { "name": "Roger Carel" }, { "name": "Lorànt Deutsch" }, { "name": "Laurent Lafitte" }, { "name": "Ben Barnes" }, { "name": "Julianne Moore" }, { "name": "Abigail Breslin" }, { "name": "Joely Richardson" }, { "name": "Li Siru" }, { "name": "Wang Chong" }, { "name": "Zhou Ting" }, { "name": "Jin Ji Hee" }, { "name": "Ga In" }, { "name": "Joo Sang Wook" }, { "name": "Chae Sang Woo" }, { "name": "Choi Seong Min" }, { "name": "Ocean Hou" }, { "name": "Tom Prior" }, { "name": "Gabriella Wright" }, { "name": "Jennifer Blanc" }, { "name": "Yeong cheol Kim" }, { "name": "Jessica Lange" }, { "name": "Keira Knightley" }, { "name": "Peyman Moaadi" }, { "name": "Lane Garrison" }, { "name": "Marie Avgeropoulos" }, { "name": "Adam Rayner" }, { "name": "Jacky Wu" }, { "name": "Kevin Lee" }, { "name": "Michelle Hu" }, { "name": "Meryl Streep" }, { "name": "Sheila Vand" }, { "name": "Arash Marandi" }, { "name": "Marshall Manesh" }, { "name": "Mike 'The Miz' Mizanin" }, { "name": "Josh Blacker" }, { "name": "Matthew MacCaull" }, { "name": "Rodrigo Santoro" }, { "name": "Min Hee Kim" }, { "name": "Brian Tee" }, { "name": "An Dĩ Hiên" }, { "name": "Trương Hình Dư" }, { "name": "Troy Baker" }, { "name": "Kevin Conroy" }, { "name": "Józef Pawlowski" }, { "name": "Zofia Wichlacz" }, { "name": "Anna Próchniak" }, { "name": "Triệu Hựu Đình" }, { "name": "Trương Quân Ninh" }, { "name": "Quan Dĩnh" }, { "name": "Tu Kiệt Giai" }, { "name": "Jake Gylle" }, { "name": "Daniel Garcia" }, { "name": "Gambler" }, { "name": "Dư Văn Lạc" }, { "name": "Tatsuya Fujiwara" }, { "name": "Takeru Satô" }, { "name": "Emi Takei" }, { "name": "Colin Firth" }, { "name": "Michael Caine" }, { "name": "Kyle Gallner" }, { "name": "jacky chan" }, { "name": "thành long" }, { "name": "William Fichtner" }, { "name": "Jack Davenport" }, { "name": "Geoffrey Rush" }, { "name": "Phim Âm Nhạc" }, { "name": "Zoe Saldana" }, { "name": "Sam Worthington" }, { "name": "Ryu Seung Ryong" }, { "name": "Jin woong Jo" }, { "name": "Quang Tèo" }, { "name": "Bình Trọng" }, { "name": "NS. Chiến Thắng" }, { "name": "Matthew McConaughey" }, { "name": "Kang Don Won" }, { "name": "Kim Xuyến" }, { "name": "Công Lý" }, { "name": "Matt Lanter" }, { "name": "Sumalee Montano" }, { "name": "Quốc Anh" }, { "name": "Chiến Thắng" }, { "name": "Hán Văn Tình" }, { "name": "Thu Hương" }, { "name": "NS.Phạm Bằng" }, { "name": "Michael Angarano" }, { "name": "Dominik García Lorido" }, { "name": "Từ Phàm" }, { "name": "Trương Tịnh Sơ" }, { "name": "Trần Đạo Minh" }, { "name": "Lý Thần" }, { "name": "Lục Nghị" }, { "name": "Trúc Mai" }, { "name": "Thu Huyền" }, { "name": "Bill Nighy" }, { "name": "Kaitlyn Dever" }, { "name": "Forest Whitaker" }, { "name": "Maggie Grac" }, { "name": "Justin Long" }, { "name": "Michael Parks" }, { "name": "Haley Joel Osment" }, { "name": "Jessica Cambensy" }, { "name": "Abby Fung" }, { "name": "Chang Ha" }, { "name": "Phim Hình Sự" }, { "name": "Richard Sammel" }, { "name": "Alice Taglioni" }, { "name": "Simon Abkarian" }, { "name": "Phim Chiến Tranh" }, { "name": "Chingmy Yau" }, { "name": "Tze Miu" }, { "name": "Deannie Yip" }, { "name": "Victor Webster" }, { "name": "Ellen Hollman" }, { "name": "Nam gil Kim" }, { "name": "Ye jin Son" }, { "name": "Hae jin Yoo" }, { "name": "Tully Banta Cain" }, { "name": "Paul Ben Victo" }, { "name": "Kevin Wu" }, { "name": "Harry Shum Jr." }, { "name": "Alfie Allen" }, { "name": "Phim Thuyết Minh" }, { "name": "Sheila Kelley" }, { "name": "Keiko Kitagawa" }, { "name": "Shunji Igarashi" }, { "name": "Kento Kaku" }, { "name": "Natsuki Katô" }, { "name": "Fumino Kimura" }, { "name": "Osamu Mukai" }, { "name": "Logan Lerman" }, { "name": "James Gandolfini" }, { "name": "David Harbour" }, { "name": "Mireille Enos" }, { "name": "Jamie Blackley" }, { "name": "Tobias Moretti" }, { "name": "Helmuth Häusler" }, { "name": "Matthias Schweighöfer" }, { "name": "August Diehl" }, { "name": "Anna Bederke" }, { "name": "Won Bin" }, { "name": "Rosamund Pike" }, { "name": "Neil Patrick Harris" }, { "name": "Fred Cavayé" }, { "name": "Lea Thompson" }, { "name": "Cassi Thomson" }, { "name": "Justin Chatwin" }, { "name": "Jamie Chung" }, { "name": "Marton Csokas" }, { "name": "Donnie Yen" }, { "name": "Charlie Yeung" }, { "name": "Baoqiang Wang" }, { "name": "Kaito Ishikawa" }, { "name": "Kenji Akabane" }, { "name": "Kensho Ono" }, { "name": "Vegar Hoel" }, { "name": "Ørjan Gamst" }, { "name": "Martin Starr" }, { "name": "Tadanobu Asano" }, { "name": "Rie Miyazawa" }, { "name": "Machiko Ono" }, { "name": "Essie Davis" }, { "name": "Noah Wiseman" }, { "name": "Daniel Henshall" }, { "name": "William H. Macy" }, { "name": "Philip Baker Hall" }, { "name": "Timothy Olyphant" }, { "name": "Andy Richter" }, { "name": "Tom McGrath" }, { "name": "Chris Miller" }, { "name": "Christopher Knights" }, { "name": "Scott Adkins and Ben Cross" }, { "name": "Mykel Shannon Jenkins" }, { "name": "Mark Ivanir" }, { "name": "Hristo Shopov" }, { "name": "Melissa George" }, { "name": "Jimmy Bennett" }, { "name": "Chutavuth Pattarakampol" }, { "name": "Supassra Thanachat" }, { "name": "Noah Taylor" }, { "name": "Olivia Cooke" }, { "name": "Ana Coto" }, { "name": "Daren Kagasoff" }, { "name": "Phim Khoa học Tài liệu" }, { "name": "Noel Clarke" }, { "name": "Ian Somerhalder" }, { "name": "Kim Coates" }, { "name": "Shawn Roberts" }, { "name": "Ryan Potter" }, { "name": "Scott Adsit" }, { "name": "Jack Kilmer" }, { "name": "Olivia Crocicchia" }, { "name": "Ellar Coltrane" }, { "name": "Patricia Arquette" }, { "name": "Chad Anderson" }, { "name": "Lexi Atkins" }, { "name": "Brent Briscoe" }, { "name": "Bill Burr" }, { "name": "Park Sang Joon" }, { "name": "Johnathon Schaech" }, { "name": "Lee Jung jae" }, { "name": "Kim Hyang Gi" }, { "name": "Kim Dong Wook" }, { "name": "Steve Buscemi" }, { "name": "Yuki Yamada" }, { "name": "Jumpei Mizobata" }, { "name": "Mikie Hara" }, { "name": "Dongyu Zhou" }, { "name": "Yi Feng Li" }, { "name": "Cherami Leigh" }, { "name": "Bryce Papenbrook" }, { "name": "Johnny Yong Bosch" }, { "name": "Masami Nagasawa" }, { "name": "Sota Fukushi" }, { "name": "Hana Sugisaki" }, { "name": "Yôsuke Eguchi" }, { "name": "Miyavi" }, { "name": "Ashley Greene" }, { "name": "Yuki Furukawa" }, { "name": "Takemi Fujii" }, { "name": "Hiroshi Abe" }, { "name": "Yoko Maki" }, { "name": "Satomi Kobayashi" }, { "name": "AnnaSophia Robb" }, { "name": "Isabelle Fuhrman" }, { "name": "Victoria Moroles" }, { "name": "Jo Bok Rae" }, { "name": "Kim Sang Kyung" }, { "name": "Yeon Woo Jin" }, { "name": "Kang Min Hyuk" }, { "name": "Shim Eun Kyung" }, { "name": "Ilya Malakov" }, { "name": "Aleksey Serebryakov" }, { "name": "Aleksandr Ilin" }, { "name": "Timofey Tribuntsev" }, { "name": "Yuliya Khlynina" }, { "name": "Andrey Burkovskiy" }, { "name": "Igor Savochkin" }, { "name": "Polina Chernyshova" }, { "name": "Aleksandr Tsoy" }, { "name": "Viktor Proskurin" }, { "name": "Sergey Koltakov" }, { "name": "Julia Pisarenko" }, { "name": "Fedor Starykh" }, { "name": "Minami Takayama" }, { "name": "Kappei Yamaguchi" }, { "name": "Wakana Yamazaki" }, { "name": "Ken'ichi Ogata" }, { "name": "Chân Tử Đan" }, { "name": "Lưu Dĩ Hào" }, { "name": "Nghiêm Chính Lam" }, { "name": "Lý Thuyên" }, { "name": "David Tennant" }, { "name": "Kerry Condon" }, { "name": "Jacqueline Byers" }, { "name": "Carlito Olivero" }, { "name": "Lee Byung Hun" }, { "name": "Ko Soo" }, { "name": "Song Young Chang" }, { "name": "Jo Woo Jin" }, { "name": "Disha Patani" }, { "name": "Deepak Dobriyal" }, { "name": "Darshan Kumaar" }, { "name": "Indraneel Bhattacharya" }, { "name": "Andrea Riseborough" }, { "name": "Linus Roache" }, { "name": "Olwen Fouere" }, { "name": "Ned Dennehy" }, { "name": "Richard Brake" }, { "name": "Donald Glover" }, { "name": "Yuko Takeuchi" }, { "name": "Tsutomu Yamazaki" }, { "name": "Kenny Lin" }, { "name": "Sichun Ma" }, { "name": "Ann Dowd" }, { "name": "Alex Wolff" }, { "name": "BriAnn Rachele" }, { "name": "Fiona Sit" }, { "name": "Jack Kao" }, { "name": "Shao Huai Chang" }, { "name": "Tien Niu" }, { "name": "Jacky Cai" }, { "name": "Tai Bo" }, { "name": "Yi Hang He" }, { "name": "Joy Sheng" }, { "name": "Sean Liu" }, { "name": "Phoebe Yuan" }, { "name": "Yi Chung Chang Chien" }, { "name": "Wei Ni Chang" }, { "name": "Jerry Chen" }, { "name": "Temuera Morrison" }, { "name": "DAN EWING" }, { "name": "STEPHANIE JACOBSEN" }, { "name": "RHIANNON FISH" }, { "name": "ZACHARY GARRED" }, { "name": "JACK KAO KUO HSIN" }, { "name": "CHEN NAN TSAI" }, { "name": "PENG SUN" }, { "name": "Trương Lượng" }, { "name": "Lâm Lộ Địch" }, { "name": "Tomokazu Seki" }, { "name": "Subaru Kimura" }, { "name": "Wasabi Mizuta" }, { "name": "JUNG JIN YOUNG" }, { "name": "Jung Hae In" }, { "name": "Kim Won Hae" }, { "name": "Kim Ju Hyeok" }, { "name": "Jung Sang Hoon" }, { "name": "Minnie Driver" }, { "name": "Natassia Malthe" }, { "name": "Leonor Varela" }, { "name": "Jóhannes Haukur Jóhannesson" }, { "name": "Sammi Cheng" }, { "name": "Kwok Keung Cheung" }, { "name": "Sui Man Chim" }, { "name": "Ada Choi" }, { "name": "Philippe Joly" }, { "name": "Colin David Herbert Blackwell" }, { "name": "Chi Wah Wong" }, { "name": "Cecilia So" }, { "name": "Sze Kwan Cheng" }, { "name": "Lawrence Cheng" }, { "name": "Justin Cheung" }, { "name": "Michael Hui" }, { "name": "Rani Mukerji" }, { "name": "Neeraj Kabi" }, { "name": "Jannat Zubair Rahmani" }, { "name": "Bạch Vũ" }, { "name": "Hoàng Dung" }, { "name": "Khương Chấn Hạo" }, { "name": "Yoshitaka Yuriko" }, { "name": "Kenichi Matsuyama" }, { "name": "Kaya Kiyohara" }, { "name": "Matsuzaka Tori" }, { "name": "Aimi Satsukawa" }, { "name": "Matt Barr" }, { "name": "Kate Upton" }, { "name": "Matt Jones" }, { "name": "Kal Penn" }, { "name": "Ron Livingston" }, { "name": "Mackenzie Davis" }, { "name": "ASHER MILES FALLICA" }, { "name": "Lia Frankland" }, { "name": "Lee Yeon hee" }, { "name": "Dong Il Sung" }, { "name": "Dam Bi Son" }, { "name": "Griffin Dunne" }, { "name": "Deidre Goodwin" }, { "name": "Daniella Rabbani" }, { "name": "Brian J. Carter" }, { "name": "Gemma Forbes" }, { "name": "Conan" }, { "name": "Ran" }, { "name": "Shinichi" }, { "name": "Haibara" }, { "name": "Kim Min Jae" }, { "name": "Sung Dong Il" }, { "name": "Na Moon Hee" }, { "name": "Lee Sung Kyung" }, { "name": "Yu Hae Jin" }, { "name": "Aleksey Faddeev" }, { "name": "Aleksandr Kuznetsov" }, { "name": "Yuriy Tsurilo" }, { "name": "Izmaylova Vasilisa" }, { "name": "Vladimir Ilin" }, { "name": "Yuriy Itskov" }, { "name": "Ike Barinholtz" }, { "name": "Bernard Farcy" }, { "name": "Anouar Toubali" }, { "name": "Edouard Montoute" }, { "name": "Eric Fraticelli" }, { "name": "Dịch Bách Thần" }, { "name": "Chu Tiển" }, { "name": "Khảm Bôn Bôn" }, { "name": "Ngu Y Kiệt" }, { "name": "Lý Thụy Siêu" }, { "name": "Rajit Kapoor" }, { "name": "Vicky Kaushal" }, { "name": "Phùng Húc Đông" }, { "name": "Trinh Kim Minh" }, { "name": "Vân Tường" }, { "name": "Cha Seung Won" }, { "name": "Ryoo Joon Yeol" }, { "name": "Jin Seo Yeon" }, { "name": "Chrissie Chau" }, { "name": "Francis Ng" }, { "name": "Sam Lee" }, { "name": "Roland Møller" }, { "name": "Robert Englund" }, { "name": "Emily Haine" }, { "name": "Grayson Gabriel" }, { "name": "Gabrielle Haugh" }, { "name": "Logan Creran" }, { "name": "Alessandro Nivola" }, { "name": "Điền Tráng Tráng" }, { "name": "Zheming Qu" }, { "name": "Wes Chatham" }, { "name": "Baylee Curran" }, { "name": "Trường Giang" }, { "name": "Thanh Thúy" }, { "name": "Đức Thịnh" }, { "name": "Mai Tài Phến" }, { "name": "Carmen Machi" }, { "name": "Adriana Ozores" }, { "name": "Aitana Sánchez Gijón" }, { "name": "Sophie Skelton" }, { "name": "Michael Rainey Jr." }, { "name": "Dwayne Cameron" }, { "name": "Weston Cage" }, { "name": "Andy Nyman" }, { "name": "Paul Whitehouse" }, { "name": "Lý Hân Trạch" }, { "name": "Phó Dương Dương" }, { "name": "Trương Duyệt Nam" }, { "name": "Michael Peña" }, { "name": "Mike Colter" }, { "name": "Emma Booth" }, { "name": "Tom Riley" }, { "name": "Ji Hyun Woo" }, { "name": "Lee Seung Wook" }, { "name": "Kim Hak Cheol" }, { "name": "Jim Gaffigan" }, { "name": "Eddie Marsan" }, { "name": "Lucy Hale" }, { "name": "Landon Liboiron" }, { "name": "Tyler Posey" }, { "name": "Violett Beane" }, { "name": "Sophia Ali" }, { "name": "Dean Norris" }, { "name": "Jaeden Lieberher" }, { "name": "Lee Pace" }, { "name": "Thích Lam Duẫn" }, { "name": "Rafe Spall" }, { "name": "Justice Smith" }, { "name": "NADIYA DOROFEEVA" }, { "name": "OLEKSIY ZAVHORODNIY" }, { "name": "YEVHEN MALUKHA" }, { "name": "SERHIY PRYTULA" }, { "name": "Bành Kính Từ" }, { "name": "Từ Nam" }, { "name": "Alex Essoe" }, { "name": "Perla Haney Jardine" }, { "name": "Dylan McTee" }, { "name": "Andrew Rothenberg" }, { "name": "Andy Garcia" }, { "name": "Grace Byers" }, { "name": "Vincent Spano" }, { "name": "Ana Ularu" }, { "name": "Boris Gulyarin" }, { "name": "Noriaki Sugiyama" }, { "name": "Noriko Shitaya" }, { "name": "Katee Sackhoff" }, { "name": "Julie Cox" }, { "name": "Steven Cree" }, { "name": "Ray Fearon" }, { "name": "Noush Skaugen" }, { "name": "Diane Kruger" }, { "name": "Numan Acar" }, { "name": "Denis Moschitto" }, { "name": "Ranveer Singh" }, { "name": "Deepika Padukone" }, { "name": "Shahid Kapoor" }, { "name": "Stephanie Pearson" }, { "name": "Kelly Connaire" }, { "name": "Rod Hernandez" }, { "name": "Im Si Wan" }, { "name": "Sol Kyung gu" }, { "name": "Ko Chang seok" }, { "name": "So Ji Sub" }, { "name": "Lee Joon Hyuk" }, { "name": "Son Yeo Eun" }, { "name": "Lee You Jin" }, { "name": "Kelly Asbury" }, { "name": "Mary J. Blige" }, { "name": "Chris Rock" }, { "name": "Rachel Dratch" }, { "name": "Allison Strong" }, { "name": "Roland Buck Iii" }, { "name": "Kim Hee Won" }, { "name": "Oh Ha Nee" }, { "name": "Lee Hak Joo" }, { "name": "Max Irons" }, { "name": "Mike Myers" }, { "name": "Katarina Cas" }, { "name": "Richard Ayoade" }, { "name": "Jim Sturgess" }, { "name": "Luke Evans" }, { "name": "Dominic Cooper" }, { "name": "Bradley Coope" }, { "name": "Caity Lotz" }, { "name": "Camilla Luddington" }, { "name": "Scott Michael Foster" }, { "name": "Anupam Kher" }, { "name": "Jae yeong Jeong" }, { "name": "Jo Jung suk" }, { "name": "Keri Russell" }, { "name": "lly" }, { "name": "Masahiro Higashide" }, { "name": "Ryusuke Ito" }, { "name": "Chris Sarandonndre the Giant" }, { "name": "Phim TV Show" }, { "name": "DMX" }, { "name": "Kelly Hu" }, { "name": "Anthony Anderson" }, { "name": "Matt Walsh" }, { "name": "Jake Johnson" }, { "name": "Damon Wayans Jr." }, { "name": "Bi Rain" }, { "name": "50 Cent" }, { "name": "Peter Stormare" }, { "name": "Danny Glover" }, { "name": "Jun Sang Yu" }, { "name": "Kim Basinger" }, { "name": "John Hurt" }, { "name": "Andy On" }, { "name": "Kate Hudson" }, { "name": "Tom Wilkinson" }, { "name": "Adam Levine" }, { "name": "Lorna Raver" }, { "name": "Philip Seymour Hoffman" }, { "name": "Richard Jenkins" }, { "name": "Antonio Banderas" }, { "name": "Birgitte Hjort Sørensen" }, { "name": "Dylan McDermott" }, { "name": "Zach Gilfor" }, { "name": "Eric Bana" }, { "name": "Édgar Ramírez" }, { "name": "Mi Yang" }, { "name": "Chao Liang" }, { "name": "Yan Liu" }, { "name": "Jacqueline Fernandez" }, { "name": "Nawazuddin Siddiqui" }, { "name": "Cameron Diaz" }, { "name": "Rob Corddry" }, { "name": "Trần Tĩnh" }, { "name": "Juno Temple" }, { "name": "Ye ri Han" }, { "name": "Man shik Jeong" }, { "name": "Beau Knapp" }, { "name": "Lương Triều Vỹ" }, { "name": "Truong Mạn Ngọc" }, { "name": "Zang Ziyi" }, { "name": "Phim Thần Thoại" }, { "name": "Bingbing Fan" }, { "name": "Xiaoming Huang" }, { "name": "Wenzhuo Zhao" }, { "name": "Yoo In Na" }, { "name": "Jin Lee Han" }, { "name": "Namgung Min" }, { "name": "Nicola Peltz" }, { "name": "Alex Fong Lik Sun" }, { "name": "Lam Suet" }, { "name": "Renata Tan" }, { "name": "Wayne Liu" }, { "name": "He Meitian" }, { "name": "Mike Dopud" }, { "name": "David Belle" }, { "name": "RZA" }, { "name": "Seth MacFarlane" }, { "name": "Đang Cập Nhật" }, { "name": "Viva Bianca" }, { "name": "Hanna Mangan Lawrence" }, { "name": "Aaron Taylor Johnson" }, { "name": "Elizabeth Olsen" }, { "name": "Watanabe Ken" }, { "name": "Juliette Binoche" }, { "name": "David Strathairn" }, { "name": "Sally Hawkins" }, { "name": "Cameron 'CJ' Adams" }, { "name": "Brian Markinson" }, { "name": "Richard T. Jones" }, { "name": "Hyuk Jang" }, { "name": "Andrew William Brand" }, { "name": "In Pyo Cha" }, { "name": "Drew Barrymore" }, { "name": "Scott Mechlowicz" }, { "name": "Alphonso McAuley" }, { "name": "Winter Ave Zoli" }, { "name": "Michael York" }, { "name": "Finn Jones" }, { "name": "Grace Van Dien" }, { "name": "Catherine Oxenberg" }, { "name": "Jung Joon Ho" }, { "name": "Song Yoon Ah" }, { "name": "Lea Michele" }, { "name": "Kelsey Grammer" }, { "name": "Dan Aykroyd" }, { "name": "Jason Wong" }, { "name": "Asen Asenov" }, { "name": "Daniel Coetzer" }, { "name": "Christian Slater" }, { "name": "Emily Tennant" }, { "name": "Mary Louise Parker" }, { "name": "Olivia Colman" }, { "name": "Ruth Wilson" }, { "name": "Richard Coyle" }, { "name": "Claire Foy" }, { "name": "Yasmine Al Masri" }, { "name": "Abhishek Bachchan" }, { "name": "Joey Lauren Adams" }, { "name": "Elizabeth Gillies" }, { "name": "Parker Young" }, { "name": "Emily Watson" }, { "name": "Winona Ryder" }, { "name": "Shin Hye Park" }, { "name": "Won sang Park" }, { "name": "Katie Crown" }, { "name": "Brian Doe" }, { "name": "Patrick Gilmore" }, { "name": "Michelle Chen" }, { "name": "Qing Ye" }, { "name": "Siu Lung Sik" }, { "name": "Sebastian Stan" }, { "name": "Andrew Garfield" }, { "name": "Emma Stone" }, { "name": "Jamie Foxx" }, { "name": "Natalie Portman" }, { "name": "Ty Burrell" }, { "name": "Max Charles" }, { "name": "Stephen Colbert" }, { "name": "Dada Chan" }, { "name": "Lương Vịnh Kì" }, { "name": "Arjun Kapoor" }, { "name": "Amrita Singh" }, { "name": "Huỳnh Tông Trạch – Trác Úc" }, { "name": "Hồ Định Hân – Phương Minh Du" }, { "name": "Randeep Hooda" }, { "name": "Durgesh Kumar" }, { "name": "Chung Tử Đan" }, { "name": "Châu Dương." }, { "name": "Christian Oliver" }, { "name": "Les Brandt" }, { "name": "Cary Hiroyuki Tagawa" }, { "name": "Terrence Howard" }, { "name": "Macon Blair" }, { "name": "Devin Ratray" }, { "name": "Amy Hargreaves" }, { "name": "Sinjai Plengpanit" }, { "name": "Supanart Jittaleela" }, { "name": "Ray MacDonald" }, { "name": "Elle FanningKyle Chandler" }, { "name": "Mitsuki Koga" }, { "name": "Yoshiyuki Yamaguchi" }, { "name": "Masanori Mimoto" }, { "name": "Eun kyung Shim" }, { "name": "Mun hee Na" }, { "name": "In hwan Park" }, { "name": "Dong il Song" }, { "name": "Hạ Vũ" }, { "name": "Dương Thái Ni" }, { "name": "Dư Nam" }, { "name": "Nghê Đại Hồng và Trương Lập" }, { "name": "John Hennigan" }, { "name": "Marcus Shirock" }, { "name": "James Woods" }, { "name": "Luci Christian" }, { "name": "David Matranga" }, { "name": "Elizabeth Bunch" }, { "name": "Jeremy McWilliams" }, { "name": "Lynsey Taylor Mackay" }, { "name": "Alexa Vega" }, { "name": "Beau Bridges" }, { "name": "Aidan Quinn" }, { "name": "Josh Henderson" }, { "name": "Sullivan Stapleton" }, { "name": "Roxanne McKee" }, { "name": "Michelle Fairley" }, { "name": "Danny Webb" }, { "name": "Uma Thurman" }, { "name": "David Carradine" }, { "name": "Michael Madsen" }, { "name": "John Jarratt" }, { "name": "Ryan Corr" }, { "name": "Shannon Ashlyn" }, { "name": "Mindy Robinson" }, { "name": "Freya Tingley" }, { "name": "Gaia Weiss" }, { "name": "Wanida Termthanaporn" }, { "name": "Kunatip PinPradub" }, { "name": "Puvadol Vechwongsa" }, { "name": "Kittipat Samarntragulchai" }, { "name": "Pongpitch Preechaborisuthikul" }, { "name": "Jemaine Clement" }, { "name": "Kristina Anapau" }, { "name": "James C. Burns" }, { "name": "Tina Casciani" }, { "name": "Uma ThurmanMichael Madsen" }, { "name": "Lucy Liu" }, { "name": "Vivica A Fox" }, { "name": "Samuel L Jackson" }, { "name": "Kuriyama Chiaki" }, { "name": "Bella Boyd" }, { "name": "Russell Crowe" }, { "name": "Jennifer Connelly" }, { "name": "Bak Ming Wong" }, { "name": "Eric Tsang" }, { "name": "Sandra Ng Kwan Yue" }, { "name": "Arifin Putra" }, { "name": "Michael Fassbender và Jamie Bell" }, { "name": "Kevin Spacey" }, { "name": "Goran Visnjic" }, { "name": "Terence Stamp" }, { "name": "Will Yun Lee" }, { "name": "Eliza Bennett" }, { "name": "Jane March" }, { "name": "Jamie Thomas King" }, { "name": "Gerard Butlerm" }, { "name": "Gloria Reuben" }, { "name": "Josh Hartnett" }, { "name": "Alexis Bledel" }, { "name": "Elizabeth Banks" }, { "name": "Gillian Jacobs" }, { "name": "Sarah Wright" }, { "name": "Ty Simpkins |" }, { "name": "Stella Maeve" }, { "name": "Alexander Nifong" }, { "name": "J. Mallory McCree" }, { "name": "Kris Holden Ried" }, { "name": "Emily Hampshire" }, { "name": "Claudia Bassols" }, { "name": "Catbus" }, { "name": "Satsuki Kusakabe" }, { "name": "Mei Kusakabe" }, { "name": "Noriko Hidaka" }, { "name": "Hitoshi Takagi" }, { "name": "Tanie Kitabayashi" }, { "name": "Tsuyoshi Kusanagi" }, { "name": "Yui Aragaki" }, { "name": "Takao Osawa" }, { "name": "Stellan Skarsgård" }, { "name": "Michael Dorman" }, { "name": "Aiysha Hart" }, { "name": "Paddy Considine" }, { "name": "Faraz Ayub" }, { "name": "Suthep Po ngam" }, { "name": "Theeradanai Suwannahom" }, { "name": "Shahkrit Yamnarm" }, { "name": "Ryosuke Yamada" }, { "name": "Hiroki Narimiya" }, { "name": "Kelvin Kwan" }, { "name": "Teddy Robin Kwan" }, { "name": "Diogo Morgado" }, { "name": "Amber Rose Revah" }, { "name": "Sebastian Knapp" }, { "name": "Bonnie Lee Bouman" }, { "name": "Dylan Edy" }, { "name": "Michael Everson" }, { "name": "Sunil Shetty" }, { "name": "Hồ Quan" }, { "name": "Yoo Gong" }, { "name": "Jae yun Jo" }, { "name": "Seong ha Jo" }, { "name": "Sonam Kapoor" }, { "name": "Pavan Malhotra" }, { "name": "Shengyi Huang" }, { "name": "Yu Kang" }, { "name": "Sharni Vinson" }, { "name": "Joe Swanberg" }, { "name": "AJ Bowen" }, { "name": "Spencer Locke" }, { "name": "Kenneth Branagh" }, { "name": "Eliza Taylor" }, { "name": "Bob Morley" }, { "name": "Lili Taylor" }, { "name": "Ashley Hinshaw" }, { "name": "Albert Dupontel" }, { "name": "Sandrine Kiberlain" }, { "name": "Nicolas Marié" }, { "name": "Connie Nielsen" }, { "name": "Chia Hui Liu" }, { "name": "Ammara Siripong" }, { "name": "Samuel L. JacksonJulia Margulies" }, { "name": "Paul Logan" }, { "name": "Ralitsa Paskaleva" }, { "name": "Borislav Iliev" }, { "name": "Gattlin Griffith" }, { "name": "Lucy Fry" }, { "name": "Danila Kozlovsky" }, { "name": "Pål Sverre Hagen" }, { "name": "Nicolai Cleve Broch" }, { "name": "Bjørn Sundquist" }, { "name": "Kathy Borland (english adaptation)" }, { "name": "Abraham Vurnbrand" }, { "name": "Rebecca Da Costa" }, { "name": "Crispin Glover" }, { "name": "Hannah Hoekstra" }, { "name": "Isis Cabolet" }, { "name": "Robert de Hoog" }, { "name": "Fumi Nikaidô" }, { "name": "Isao Natsuyagi" }, { "name": "Kim Kap Soo" }, { "name": "Lâm Y Thần" }, { "name": "Miyazaki Aoi" }, { "name": "Mukai Osamu" }, { "name": "Thích Hạng Vũ" }, { "name": "Trương Nhã Mai" }, { "name": "Joaquin Phoenix" }, { "name": "Michael Cera" }, { "name": "Tanya van Graan" }, { "name": "Cam Gigandet" }, { "name": "Thomas Gibson" }, { "name": "Toby Stephens" }, { "name": "Sam Hazeldine" }, { "name": "Kokone Hamada" }, { "name": "Aya Ueto" }, { "name": "Kayoko Kishimoto" }, { "name": "Tom Benedict Knight" }, { "name": "Simon Phillips" }, { "name": "Christina Bellavia" }, { "name": "Jin gu Yeo" }, { "name": "Mạc Văn Úy" }, { "name": "Kang ho Song" }, { "name": "Jung Jae Lee" }, { "name": "Yun shik Baek" }, { "name": "Richard E. Grant" }, { "name": "Demian Bichir" }, { "name": "Seishirô Katô" }, { "name": "Roi Hayashi" }, { "name": "Roy Hayashi" }, { "name": "Craig T. Nelson" }, { "name": "Holly Hunter" }, { "name": "Mi seon Jeon" }, { "name": "Jung Hee Moon" }, { "name": "Hyeon ju Son" }, { "name": "Duncan Casey" }, { "name": "Lee Charles" }, { "name": "Greg Pearson" }, { "name": "Mark Webber" }, { "name": "Devon Graye" }, { "name": "T.O.P" }, { "name": "Seung Hyun Choi" }, { "name": "An Duyệt Khê" }, { "name": "Đổng Tử Kiện" }, { "name": "Nadech Kugimiya" }, { "name": "Kobori" }, { "name": "Arewadee Decubes" }, { "name": "Angsumalin" }, { "name": "Tilda Swinton" }, { "name": "Quách Thái Khiết" }, { "name": "Phòng Tổ Danh" }, { "name": "Ben Diskin" }, { "name": "Kate Higgins" }, { "name": "Lindsay Torrance" }, { "name": "Jason Dohring" }, { "name": "Enrico Colantoni" }, { "name": "Andrew Divoff" }, { "name": "Dominic Purcell" }, { "name": "Adam Beach" }, { "name": "Michael Ironside" }, { "name": "Mae Whitman" }, { "name": "Brendan Fraser" }, { "name": "Kohtee Aramboy" }, { "name": "Sudarat Butrprom" }, { "name": "Kom Chauncheun" }, { "name": "Hoàng Dụ Tường" }, { "name": "Trương Dung Dung" }, { "name": "Jennifer Carpenter" }, { "name": "Brian Bloom" }, { "name": "John Eric Bentley" }, { "name": "Annie Rose Buckley" }, { "name": "Tae seong Jang" }, { "name": "Sang wook Joo" }, { "name": "Dae Hyeon" }, { "name": "Dane DeHaan" }, { "name": "Michael C. Hall" }, { "name": "Charlie Rowe" }, { "name": "Angourie Rice" }, { "name": "Diệp Sơn Hào" }, { "name": "Diêu Thần" }, { "name": "Lã Lương Vỹ" }, { "name": "Lâm Gia Đốn" }, { "name": "Y Tử Duy" }, { "name": "Cuba Gooding Jr." }, { "name": "Dennis Haysbert" }, { "name": "LisaGay Hamilton" }, { "name": "Sean Astin" }, { "name": "Currie Graham" }, { "name": "Ryan Donowho |" }, { "name": "James D'Arcy" }, { "name": "Sophie Lowe" }, { "name": "Daryl Sabara" }, { "name": "Hae suk Kim" }, { "name": "Sang ho Kim" }, { "name": "Mi ran Ra" }, { "name": "Iain De Caestecker" }, { "name": "Alice Englert" }, { "name": "Allen Leech" }, { "name": "Benedict Lim" }, { "name": "Danil Ishutin" }, { "name": "Clinton Loomis" }, { "name": "Matthew Lillard" }, { "name": "John DiMaggio" }, { "name": "Grey DeLisle" }, { "name": "Kim Choong ryeol" }, { "name": "Lee Gyoo bok" }, { "name": "Carice van Houten" }, { "name": "Diedrich Bader" }, { "name": "Laura Bailey" }, { "name": "Dante Basco" }, { "name": "Cao Hổ" }, { "name": "Đỗ Vấn Trạch" }, { "name": "Brandon Anthony" }, { "name": "Carson Holden" }, { "name": "D'Angelo Midili" }, { "name": "Torsten Voges" }, { "name": "Jonathan Banks" }, { "name": "Bryan Larkin" }, { "name": "Iván Kamarás" }, { "name": "Michael McKell" }, { "name": "Yû Aoi" }, { "name": "Ayano Fukuda" }, { "name": "Arata Furuta" }, { "name": "Quan Sở Huy" }, { "name": "La Lực Uy" }, { "name": "LiênThi Nhã" }, { "name": "Adam Brody" }, { "name": "Rob Huebel" }, { "name": "James Cosmo" }, { "name": "Michael Culkin" }, { "name": "Ross Nathan" }, { "name": "Sam Pancake" }, { "name": "Ben Begley" }, { "name": "Herbert Russell" }, { "name": "Bruce Dern" }, { "name": "Will Forte" }, { "name": "June Squibb" }, { "name": "Piolo Pascual" }, { "name": "Gerald Anderson" }, { "name": "Joel Torre" }, { "name": "Châu Kiệt Luân" }, { "name": "Alan Ko" }, { "name": "Châu Tú Na" }, { "name": "Dada Lo" }, { "name": "Hidy Yu" }, { "name": "Zach Callison" }, { "name": "Jon Daly" }, { "name": "Melonie Diaz" }, { "name": "Kyle Chandle" }, { "name": "Jeremy Ray Valdez" }, { "name": "Walter Perez" }, { "name": "Fernanda Romero" }, { "name": "Yuliya Snigir" }, { "name": "Lee Min Ho" }, { "name": "Choi Jin Hyuk" }, { "name": "Kim Sung Ryung" }, { "name": "Kim Woo Bin" }, { "name": "Kim Ji Won" }, { "name": "Yoon Son Ha" }, { "name": "Choi Woon Young" }, { "name": "Kang Ha Neul" }, { "name": "Park Hyung Shik" }, { "name": "Im Joo Eun" }, { "name": "Nawat Kulratanarat" }, { "name": "Rhatha Pho ngam" }, { "name": "Wiraporn Jiravechsoontornkul" }, { "name": "Anon Saisangcharn" }, { "name": "Duek mun Choi" }, { "name": "Jin ho Choi" }, { "name": "Trương Tử Lâm" }, { "name": "Lương Vịnh Kỳ" }, { "name": "Emile Hirsch" }, { "name": "Lý Tâm Khiết" }, { "name": "Joseph Morgan" }, { "name": "Thomas Kretschmann" }, { "name": "Alexandra Lesch" }, { "name": "Kristiana Rohder" }, { "name": "Lara Baum" }, { "name": "Robert Redford" }, { "name": "Clare Kramer" }, { "name": "Lin Shaye" }, { "name": "Greg Grunberg" }, { "name": "Ray Wise" }, { "name": "Quan Chi Lâm" }, { "name": "Triêu Vy" }, { "name": "William Chan" }, { "name": "Christine Kuo" }, { "name": "Michelle Wai" }, { "name": "Terence Chui" }, { "name": "Oscar Leung" }, { "name": "Alien Sun" }, { "name": "Yanina Studilina" }, { "name": "Philippe Reinhardt" }, { "name": "Maaya Sakamoto" }, { "name": "Vithaya Pansringarm" }, { "name": "Vilde Zeiner" }, { "name": "Agnes Kittelsen" }, { "name": "Orlando Jones" }, { "name": "Tom Everett Scott" }, { "name": "Amy Seimetz" }, { "name": "Frank Mosley" }, { "name": "Shane Carruth" }, { "name": "Nanako Matsushima" }, { "name": "Takao Ohsawa" }, { "name": "Gorô Kishitani" }, { "name": "Kyra Sedgwick" }, { "name": "Madison Pettis" }, { "name": "Roselyn Sanchez" }, { "name": "Sylvia Hoeks" }, { "name": "Maiara Walsh" }, { "name": "Brant Daugherty" }, { "name": "Cody Christian" }, { "name": "Bongkoj Khongmalai" }, { "name": "Rit Luecha" }, { "name": "Chalad Na Songkhla" }, { "name": "Kevin McKidd" }, { "name": "Genesis Rodriguez" }, { "name": "Nick Gomez" }, { "name": "Judd Lormand" }, { "name": "Paula Patton" }, { "name": "Tim Allen" }, { "name": "Joan Cusack" }, { "name": "Tom Welling" }, { "name": "Lâm Phong" }, { "name": "Từ Tử San" }, { "name": "Thịnh Quân" }, { "name": "Kyung gu Sol" }, { "name": "So ri Moon" }, { "name": "Daniel Henney" }, { "name": "Ranbir Kapoor" }, { "name": "Madhuri Dixit" }, { "name": "Ashley Sommers" }, { "name": "Carlos Alazraqui" }, { "name": "Dane Cook" }, { "name": "Stacy Keach" }, { "name": "Michelle Pfeiffer" }, { "name": "Dianna Agron" }, { "name": "Matthew Marsden" }, { "name": "Kristanna Loken" }, { "name": "Christian Pitre" }, { "name": "Weerachai Hattagowit" }, { "name": "Sharon Hinnendael" }, { "name": "Kaniehtiio Horn" }, { "name": "C.C. Sheffield" }, { "name": "Kelly Preston" }, { "name": "Danielle Panabaker" }, { "name": "Lily Collins" }, { "name": "Jamie Campbell Bower và Robert Sheehan" }, { "name": "Chương Hàm Du" }, { "name": "Traylor Howard" }, { "name": "Alan Cumming" }, { "name": "Al Pacino Cosgrove" }, { "name": "Will Payne" }, { "name": "Jaime Murray" }, { "name": "Sean Power" }, { "name": "Gianni Capaldi" }, { "name": "Bruce Greenwood" }, { "name": "Parker Posey" }, { "name": "Callum Blue" }, { "name": "Anthony Michael Hall" }, { "name": "Maxim Roy" }, { "name": "Ted Whittall" }, { "name": "Allison Janney" }, { "name": "Frank Welker" }, { "name": "Mindy Cohn" }, { "name": "Nick Robinson" }, { "name": "Gabriel Basso" }, { "name": "Moises Arias" }, { "name": "Jonah Bobo" }, { "name": "Haley Ramm" }, { "name": "Martin Copping" }, { "name": "Clare Niederpruem" }, { "name": "Woong in Jung" }, { "name": "Hwang Jung Min" }, { "name": "Yo won Lee" }, { "name": "Jun Sang Yoo" }, { "name": "Jemma Dallender" }, { "name": "Joe Absolom" }, { "name": "Yavor Baharov" }, { "name": "Aleksandar Aleksiev" }, { "name": "Mary Stockley" }, { "name": "Ted Levine" }, { "name": "Joe Anderson" }, { "name": "Kevin Zegers" }, { "name": "Laurence Fishburne" }, { "name": "Marrese Crump" }, { "name": "JeeJa Yanin" }, { "name": "Christopher Mintz Plasse" }, { "name": "Jiao Xu" }, { "name": "Hee won Kim" }, { "name": "John Ratzenberger" }, { "name": "Michael Teigen" }, { "name": "Jason Earles" }, { "name": "Karel Roden" }, { "name": "Joshua Sasse" }, { "name": "Robert Gwilym" }, { "name": "Carrie Anne Moss" }, { "name": "Kevin Dillon" }, { "name": "Brandon T. Jackson" }, { "name": "Claudio Santamaria" }, { "name": "Jennifer Ulrich" }, { "name": "Elio Germano" }, { "name": "Eriko Hatsune" }, { "name": "Fernando Alves Pinto" }, { "name": "Alessandra Negrini" }, { "name": "Caco Ciocler" }, { "name": "Megumi Oohara" }, { "name": "Hyo ju Han" }, { "name": "Woo sung Jung" }, { "name": "Paul Giamatti" }, { "name": "Maya Rudolph" }, { "name": "Max Burkholder" }, { "name": "Sienna Guillory" }, { "name": "Clive Russell" }, { "name": "Rebecca Ferdinando" }, { "name": "Mingus Johnston" }, { "name": "Katherine Heigl" }, { "name": "Diane Keaton" }, { "name": "Helen Mirren" }, { "name": "Byung hun Lee" }, { "name": "Demian Bichi" }, { "name": "Patitta Attayatamavitaya" }, { "name": "Supachai Girdsuwan" }, { "name": "Setsit Limkasitdej" }, { "name": "Caleb Landry" }, { "name": "Kevin Bacon" }, { "name": "Hyeon woo Kim" }, { "name": "Hae hyo Kwon" }, { "name": "Si young Lee" }, { "name": "Gon" }, { "name": "Killua and Leorio" }, { "name": "Veronica Diaz Carranza" }, { "name": "Melissa Cordero" }, { "name": "Q'orianka Kilcher" }, { "name": "Lindsay Lohan" }, { "name": "James Deen" }, { "name": "Nolan Gerard Funk" }, { "name": "Michael Clarke Duncan" }, { "name": "Luke Treadaway" }, { "name": "Emily Atack" }, { "name": "Craig Fairbrass" }, { "name": "Simon Rex" }, { "name": "Charlie Sheen" }, { "name": "Jacob Lofland" }, { "name": "Wesley Snipes" }, { "name": "Kevin Howarth" }, { "name": "Joo hyun Jo" }, { "name": "Se hong Jeon" }, { "name": "Gwang il Lee" }, { "name": "Matt Doran" }, { "name": "David Field" }, { "name": "Jin mo Ju" }, { "name": "So yeon Kim" }, { "name": "Hee soon Park" }, { "name": "Shin Ha Kyun" }, { "name": "Jo Eun Ji" }, { "name": "Oh Jung Se" }, { "name": "Helene Bergsholm" }, { "name": "Malin Bjørhovde" }, { "name": "Henriette Steenstrup" }, { "name": "David Chokachi" }, { "name": "Tia Carrere" }, { "name": "Meghan McLeod" }, { "name": "Ryan Goslingm" }, { "name": "Kim Seul gi I" }, { "name": "Ko Kyeong pyo" }, { "name": "Lee Se yeong" }, { "name": "Lee Soo hyeok" }, { "name": "Park Seong woong" }, { "name": "Seong Joon" }, { "name": "Bemin Epps" }, { "name": "Justin Chambers" }, { "name": "C. Thomas Howell" }, { "name": "Lauren Ashley Carter" }, { "name": "Kaitlin Cullum" }, { "name": "Miracle Laurie" }, { "name": "Krisada Sukosol Clapp" }, { "name": "Somchai Kemglad" }, { "name": "Sakarin Suthamsamai" }, { "name": "BiaSean Brosnan" }, { "name": "Van Dammep" }, { "name": "Tom Wilson" }, { "name": "Garrison Keillor" }, { "name": "Trịnh Tú Văn" }, { "name": "Kuralay AnarbekovaAliya Telebarisova" }, { "name": "Nathalie Emmanuel" }, { "name": "Milo Ventimiglia" }, { "name": "Say Gupta" }, { "name": "Stephen Moyer" }, { "name": "Mia Kirshner" }, { "name": "Allie MacDonald" }, { "name": "Chadwick Boseman" }, { "name": "Nicole Beharie" }, { "name": "Ryusei Nakao" }, { "name": "Byron J. BrochmanPauline Egan" }, { "name": "Jeronimo Garcia" }, { "name": "Victor Golez" }, { "name": "Katharine Isabellen Fehr" }, { "name": "Nicola Posener" }, { "name": "Vidal Sancho" }, { "name": "David Haydn" }, { "name": "Kippei Shîna" }, { "name": "Duy Ni" }, { "name": "Matilda Anna Ingrid Lutz" }, { "name": "Kevin Janssens" }, { "name": "Vincent Colombe" }, { "name": "Michael Beach" }, { "name": "Danielle Savre" }, { "name": "Rob Mayes" }, { "name": "Sung Hoon" }, { "name": "Jo Han Sun" }, { "name": "Lee Kyoung Young" }, { "name": "Jeon Kwang Leol" }, { "name": "Kim Moo Yul" }, { "name": "Lim Won Hee" }, { "name": "Jasmine Waltz" }, { "name": "Park Ji Hyun" }, { "name": "Park Sung Hoon" }, { "name": "Wi Ha Joon" }, { "name": "Oh Ah Yeon" }, { "name": "Moon Ye Won" }, { "name": "Yoo Je Yoon" }, { "name": "Oprah Winfrey" }, { "name": "Mindy Kaling" }, { "name": "Jacqueline Bisset" }, { "name": "Belçim Bilgin" }, { "name": "Rachel Wilson" }, { "name": "Anushka Sharma" }, { "name": "Parambrata Chatterjee" }, { "name": "Rajat Kapoor" }, { "name": "Ritabhari Chakraborty" }, { "name": "Alex Roe" }, { "name": "Abby Ryder Fortson" }, { "name": "Travis Tritt" }, { "name": "Peter Cambor" }, { "name": "Bailee Madison" }, { "name": "Lewis Pullman" }, { "name": "Emma Bellomy" }, { "name": "Damian Maffei" }, { "name": "Trương Ngải Gia" }, { "name": "Karl Maka" }, { "name": "Sam Hui (Hứa Quán Kiệt)" }, { "name": "Emily Ratajkowski" }, { "name": "Anthony Hayes" }, { "name": "Susie Porter" }, { "name": "Tak Sakaguchi" }, { "name": "Yura Kondo" }, { "name": "Takumi Saitoh" }, { "name": "Vincent D'Onofrio" }, { "name": "Elisabeth Shue" }, { "name": "Camila Morrone" }, { "name": "Robert Downey Jr" }, { "name": "Ryoo Seung Ryong" }, { "name": "Ko Gyung Pyo" }, { "name": "Song Sae Byeok" }, { "name": "Billy Magnussen" }, { "name": "Scott Shepherd" }, { "name": "Ava Cooper" }, { "name": "Stella Cooper" }, { "name": "David Midthunder" }, { "name": "Nhạc Vân Bằng" }, { "name": "Jeremy Strong" }, { "name": "Dominic Power" }, { "name": "Aaron McCusker" }, { "name": "Alaa Safi" }, { "name": "Arkie Reece" }, { "name": "Gou Ayano" }, { "name": "Yuu Shirota" }, { "name": "Tetsuji Tamayama" }, { "name": "Yudai Chiba" }, { "name": "Takeru Satoh" }, { "name": "Rina Kawaei" }, { "name": "Zaira Wasim" }, { "name": "Meher Vij" }, { "name": "Raj Arjun" }, { "name": "Billy Brown" }, { "name": "Vanessa Williams" }, { "name": "Seung ryong Ryu" }, { "name": "Jung min Park" }, { "name": "Finn Scicluna O'Prey" }, { "name": "Emm Wiseman" }, { "name": "Jamie Lee Money" }, { "name": "Kim Kang Woo" }, { "name": "Jo Jae Hyun" }, { "name": "Park Shi Yeon" }, { "name": "Lee Won Jong" }, { "name": "Jang Hye Jin" }, { "name": "Afiya Bennett" }, { "name": "Morgan Allen" }, { "name": "Jeffrey Men" }, { "name": "James Tam" }, { "name": "Fayssal Bazzi" }, { "name": "Colin Moody" }, { "name": "Lý Tuấn Vĩ" }, { "name": "Triệu Tân" }, { "name": "Triệu Văn Kỳ" }, { "name": "Han Ji An" }, { "name": "Lee Ji Hoon" }, { "name": "Seo Hyun Woo" }, { "name": "Eloise Mumford" }, { "name": "Eric Johnson" }, { "name": "Rita Ora" }, { "name": "Diêm Lộc Dương" }, { "name": "Lý Quả" }, { "name": "Trang Sâm" }, { "name": "Jung Ryeo Won" }, { "name": "Lee Moon Sik" }, { "name": "Im Chang Jung" }, { "name": "Kim Do Hoon" }, { "name": "Alexis Knapp" }, { "name": "Kai Wang" }, { "name": "Darren Wang" }, { "name": "So Jin Sub" }, { "name": "Noah Jupe" }, { "name": "Park Ki woong" }, { "name": "Park Hae Jin" }, { "name": "Oh Yeon Seo" }, { "name": "Yu In Young" }, { "name": "Sandara Park" }, { "name": "Oh Jong Hyuk" }, { "name": "Moon Ji Yoon" }, { "name": "Kim Hyun Jin" }, { "name": "Rie Kugimiya" }, { "name": "Wataru Takagi" }, { "name": "O'Shea Jackson Jr." }, { "name": "Alexander Siddig" }, { "name": "Jannik Schümann" }, { "name": "Reda Kateb" }, { "name": "Cole Hauser" }, { "name": "Shawn Ashmore" }, { "name": "Trần Dịch Tấn" }, { "name": "Lý Nhất Đồng" }, { "name": "Lý Vinh Hạo" }, { "name": "Maggie Grace" }, { "name": "Toby Kebbell" }, { "name": "Ben Cross" }, { "name": "Kiele Sanchez" }, { "name": "Darby Camp" }, { "name": "Gralen Bryant Banks" }, { "name": "Will Rothhaar" }, { "name": "Hugh Grant" }, { "name": "Ben Whishaw" }, { "name": "Michael Gambon" }, { "name": "Olivia Chenery" }, { "name": "Ruby Bustamante" }, { "name": "Jason Maza" }, { "name": "David Gyasi" }, { "name": "Sonoya Mizuno" }, { "name": "John Schwab" }, { "name": "Charlie Day" }, { "name": "Tian Jing" }, { "name": "Levi Meaden" }, { "name": "Kim Eui sung" }, { "name": "Jung woo Sung" }, { "name": "kwak do won" }, { "name": "Park Eun Hye" }, { "name": "Ahn Mi Na" }, { "name": "Trần Hạo Dân" }, { "name": "Lâm Tử Thông" }, { "name": "Phạm Mộng" }, { "name": "Elsa Pataky" }, { "name": "Taylor Sheridan" }, { "name": "Thich Nhát Hanh" }, { "name": "Brother Pháp De" }, { "name": "Lee Min Ki" }, { "name": "Oh Dal su" }, { "name": "Kim Bum" }, { "name": "Kim Jung Hwa" }, { "name": "Hong Chau" }, { "name": "Rolf Lassgård" }, { "name": "Gabriel Byrne" }, { "name": "Mark Addy" }, { "name": "Sibylla Deen" }, { "name": "Lupita Nyong'o" }, { "name": "Daniel Kaluuya" }, { "name": "Angela Bassett" }, { "name": "Danai Gurira" }, { "name": "Giancarlo Esposito" }, { "name": "Ki Hong Lee" }, { "name": "Katherine McNamara" }, { "name": "Barry Pepper" }, { "name": "Lý Tương" }, { "name": "Phan Nguyễn" }, { "name": "Lý Tử" }, { "name": "Bill Milner" }, { "name": "David Bradley" }, { "name": "Charlotte Vega" }, { "name": "Eugene Simon" }, { "name": "Leigh Whannell" }, { "name": "Vương Thụy Xương" }, { "name": "Vu Nghị" }, { "name": "Hà Hoa" }, { "name": "Dong xue Li" }, { "name": "Janicke Askevold" }, { "name": "Eriq Ebouaney" }, { "name": "Triệu Đông Trạch" }, { "name": "Ngưu Hiểu Lâm" }, { "name": "Trương Dương" }, { "name": "Dominic West" }, { "name": "Kristin Scott Thomas" }, { "name": "Hannah John Kamen" }, { "name": "Satomi Ishihara" }, { "name": "Satoshi Ohno" }, { "name": "Yuri Chinen" }, { "name": "Trùng Thiệu Phong" }, { "name": "Sophon Sakdaphisit" }, { "name": "Numthip Jongrachatawiboon" }, { "name": "Apichaya Thongkham" }, { "name": "Panisara Rikulsurakan" }, { "name": "Huy Xán" }, { "name": "Hà Ất Hiên" }, { "name": "Lưu Hán Triệu" }, { "name": "Alex Pettyfer" }, { "name": "Emily Althaus" }, { "name": "Gene Jones" }, { "name": "Lý Băng Băng" }, { "name": "Yasmin Kassim" }, { "name": "Leslie Bibb" }, { "name": "Stephen McHattie" }, { "name": "Nicholas Campbell" }, { "name": "Matt Craven" }, { "name": "Vicky Krieps" }, { "name": "Lesley Manville" }, { "name": "Daniel Day Lewis" }, { "name": "Sophie Cookson" }, { "name": "Corneliu Ulici" }, { "name": "Ada Lupu" }, { "name": "Catalin Babliuc" }, { "name": "Arsher Ali" }, { "name": "Robert James Collier" }, { "name": "La Trọng Khiêm" }, { "name": "Triệu Lệ Dĩnh" }, { "name": "Jeff Fahey" }, { "name": "Marc McKevitt Ewins" }, { "name": "Olatunde Osunmi" }, { "name": "Cas APaul Birchardtelli" }, { "name": "Mario MaurerJoross Gamboa" }, { "name": "Zhao Yihuan" }, { "name": "Chaney Qiu" }, { "name": "Wen Zhuo" }, { "name": "Liu Huipu" }, { "name": "Vency Wen" }, { "name": "Billy Crystal" }, { "name": "Casper Van Dien" }, { "name": "Sarah Lieving" }, { "name": "Aditya Roy Kapoor" }, { "name": "Shaad Randhawa" }, { "name": "Carsten BjørnlundMarina Bouras" }, { "name": "Barry Sloane" }, { "name": "Shiloh Fernandez" }, { "name": "Jessica Lucas" }, { "name": "Lou Taylor Pucci" }, { "name": "Đông Phi" }, { "name": "Hà Văn Phi" }, { "name": "Lương Liệt Duy" }, { "name": "Thẩm Chấn Thiên" }, { "name": "Nattapong Chartpong" }, { "name": "Sean Elliot" }, { "name": "Rose Sirna" }, { "name": "Puttipong Pormsaka Na SakoWasin Pokpong" }, { "name": "Jane Lynch" }, { "name": "Pamela Adlon" }, { "name": "Senem Temiz" }, { "name": "Vicky McClure" }, { "name": "Gemma ArtertonJustin Timberlake" }, { "name": "Văn Chương" }, { "name": "Lưu Thi Thi" }, { "name": "Trần Nghiên Hy" }, { "name": "Angel LocsiDingdong Dantes" }, { "name": "Spike Jonze" }, { "name": "José Garcia" }, { "name": "Michaël Youn" }, { "name": "Isabelle Funaro" }, { "name": "Daniella Kertesz" }, { "name": "Gareth John Bale" }, { "name": "Ian Dicks" }, { "name": "Nick Renaud" }, { "name": "Henry Monfries" }, { "name": "Gemmenne de la Peña" }, { "name": "Karoline Herfurth" }, { "name": "Harriet MacMasters Green" }, { "name": "Sabrina Jolie Perez" }, { "name": "Jarreth J. Merz" }, { "name": "Cherrie Ying" }, { "name": "Zhang Duo" }, { "name": "Wang Zizi" }, { "name": "Shôta Matsuda" }, { "name": "Nozomi Sasaki" }, { "name": "Sei Ando" }, { "name": "Julie Delpy" }, { "name": "Seamus Davey Fitzpatrick" }, { "name": "Ashley Scott" }, { "name": "Bailey Chas" }, { "name": "Danica McKellar" }, { "name": "Kenneth Mitchell" }, { "name": "AKen Jeong" }, { "name": "Emmanuelle Vaugier" }, { "name": "Evert McQueen" }, { "name": "Kenny Kwann Zhang" }, { "name": "Jason Griffith" }, { "name": "Rica Matsumoto" }, { "name": "Đồng Đại Vy" }, { "name": "Tư Cầm Cao Oa" }, { "name": "Kelsy AbbottFachry Albar" }, { "name": "Adrián Suar" }, { "name": "Carla Peterson" }, { "name": "Julieta Díaz" }, { "name": "Maria Ehrich" }, { "name": "Jannis Niewöhner" }, { "name": "Daniel Giménez Cacho" }, { "name": "Ebon Moss Bachrach" }, { "name": "Vinessa Shaw" }, { "name": "Huỳnh Nhật Hoa" }, { "name": "Lữ Lương Vỹ" }, { "name": "Mạc Thiếu Thông" }, { "name": "Anne Curtisnn" }, { "name": "Adelaide Clemens" }, { "name": "Derek Magyar" }, { "name": "Jaideep Ahlawat" }, { "name": "Dimple Bagrey" }, { "name": "Sukhwinder Chahal" }, { "name": "Kan Iyer" }, { "name": "David Duchovny" }, { "name": "Joe Estevez" }, { "name": "Dan Haggerty" }, { "name": "Thomas Downey" }, { "name": "Danielle Harris" }, { "name": "Zach Galligan" }, { "name": "Elisabeth Harnois" }, { "name": "Val Kilmer" }, { "name": "Diora Baird" }, { "name": "Michelle Trachtenberg" }, { "name": "Mason Cook" }, { "name": "Ileana" }, { "name": "Rajendraprasad" }, { "name": "Steve Bacic" }, { "name": "Christian SlaterAmy Matysio" }, { "name": "Tomoyuki Morikawa" }, { "name": "Chie Nakamura" }, { "name": "Junko Takeuchi" }, { "name": "Ratklao Amaradit" }, { "name": "Savika Chaiyadej" }, { "name": "Eva Mendes" }, { "name": "Anthony Pizza" }, { "name": "Graham Phillips" }, { "name": "Jaden Smith" }, { "name": "Takayuki Yamada" }, { "name": "Ruth Sundell" }, { "name": "Daniel Genalo" }, { "name": "Ivan Trojan" }, { "name": "Sebastian Koch" }, { "name": "Sona Norisová" }, { "name": "Wei LeeQuan Ren" }, { "name": "Quách Kinh Phi" }, { "name": "Tề Khê" }, { "name": "Toda Erika" }, { "name": "Kase Ryo" }, { "name": "Yahya Gaier" }, { "name": "Mimoun Ouled Radi" }, { "name": "Sergio Hasselbaink" }, { "name": "Marty Adams" }, { "name": "Shaun Benson" }, { "name": "Meghan Heffern" }, { "name": "Zach Galifianakis" }, { "name": "Trịnh Thiếu Thu" }, { "name": "Phó Tân Bác" }, { "name": "Huỳnh Tông Trạch" }, { "name": "Đạng Lệ Hân" }, { "name": "Jason Momo" }, { "name": "Ye Liu" }, { "name": "Hanyu Zhang" }, { "name": "Bo Huang" }, { "name": "Chie Tanaka" }, { "name": "Katie Aselton" }, { "name": "Penelope Ann Miller" }, { "name": "David Eigenberg" }, { "name": "Kenneth Adams" }, { "name": "Joshua Michael Allen" }, { "name": "Sada Alpat" }, { "name": "Cindy Busby" }, { "name": "Raj Babbar" }, { "name": "Mahie Gill" }, { "name": "Mugdha Godse" }, { "name": "Beyoncé Knowles" }, { "name": "Dương Thừa Lâm" }, { "name": "Luke Kirby" }, { "name": "Ruth Negga" }, { "name": "Peter Falk" }, { "name": "Wai Man Chan" }, { "name": "Patrick Tam" }, { "name": "Kwok Cheung Tsang" }, { "name": "Christopher Lloyd" }, { "name": "Martha MacIsaac" }, { "name": "Tôn Hồng Lôi" }, { "name": "Huỳnh Dịch" }, { "name": "Tia Bajpai" }, { "name": "Vidya Malvade" }, { "name": "Aftab Shivdasan" }, { "name": "Jira Maligool" }, { "name": "rapper Ludacris" }, { "name": "Kamal Hassan" }, { "name": "Rahul Bose" }, { "name": "Pooja Kumar" }, { "name": "Vương Tử Văn" }, { "name": "Sergey Puskepalis" }, { "name": "Anatoliy Belyy" }, { "name": "Svetlana Khodchenkova" }, { "name": "Hyeon sang Kwon" }, { "name": "Bo ra Nam" }, { "name": "Yoo Oh Seong" }, { "name": "Yoo Seon" }, { "name": "Nicolás Martínez" }, { "name": "Eli Roth" }, { "name": "Spencer Treat Clark" }, { "name": "Nick Eversman" }, { "name": "Alan Drake" }, { "name": "Kiran Shah" }, { "name": "Sheri Moon Zombie" }, { "name": "Bruce Davison" }, { "name": "Jeff Daniel Phillips" }, { "name": "Tómas Lemarquis" }, { "name": "MohaHarsh Chhaya" }, { "name": "Vibha Chhibber" }, { "name": "Jon Bernthal" }, { "name": "Susan Sarandon" }, { "name": "Paresh Rawal" }, { "name": "Rajeev Khandelwal" }, { "name": "Tena Desae" }, { "name": "Dakota Fanning" }, { "name": "Amrita Puri" }, { "name": "Sushant Singh Rajput" }, { "name": "Amit Sadh" }, { "name": "Christopher Walken Kilcher" }, { "name": "John Henshaw" }, { "name": "Gary Maitland" }, { "name": "Chapman To" }, { "name": "Simon Lui" }, { "name": "Shiou Yun Chang" }, { "name": "Akira Chen" }, { "name": "Lawrence Ko" }, { "name": "Shahid KapoorPrachi Desai" }, { "name": "Eileen Davies" }, { "name": "Steve Oram" }, { "name": "BreRob Corddry" }, { "name": "Richard Gere" }, { "name": "Anthony LaPaglia" }, { "name": "Chris Colfer" }, { "name": "Luca Argentero" }, { "name": "Laura Chiatti" }, { "name": "Julianne Hough" }, { "name": "Imran KhaPaj Kapur" }, { "name": "Caleb Landry Jones" }, { "name": "Lisa Berry" }, { "name": "Samantha Mathis" }, { "name": "Jason Beghe" }, { "name": "Esai Morales" }, { "name": "Erin Karpluk" }, { "name": "Edward Furlong" }, { "name": "Mitsu Dakihiro Mayama" }, { "name": "Takuma Hiraoka" }, { "name": "Brittany Snow" }, { "name": "Jeffrey Combs" }, { "name": "Jonny Coyne" }, { "name": "Bill Murra" }, { "name": "Muku Michael Dewil" }, { "name": "Alex Carter" }, { "name": "Monica Keena" }, { "name": "Alex Arleo" }, { "name": "Mao Thuấn Quân" }, { "name": "Alex Hafnerntonio de la Torre" }, { "name": "Brian Geraghty" }, { "name": "Catherine Keener" }, { "name": "Christopher Stadulis" }, { "name": "Stephen Dorff" }, { "name": "JR Bourne" }, { "name": "Bernard Alane" }, { "name": "Isabelle Spade" }, { "name": "Kacey Mottet Klein" }, { "name": "Ario Bayundre" }, { "name": "Janice Man" }, { "name": "Bill Pullman" }, { "name": "Chang Jung Lim" }, { "name": "Ji won Ha" }, { "name": "Seong guk Choi" }, { "name": "Prabhu Deva" }, { "name": "Ganesh Acharya" }, { "name": "Kay Kay Menon" }, { "name": "Ajith Kumar" }, { "name": "Parvathy Omanakuttan" }, { "name": "Bruna Abdullah" }, { "name": "Hae il Park" }, { "name": "Kim Go Eun" }, { "name": "Harish Shar" }, { "name": "Belén Rueda" }, { "name": "Hugo Silva" }, { "name": "Tom Frederic" }, { "name": "Gil Kolirin" }, { "name": "Christian Contreras" }, { "name": "America Olivo" }, { "name": "Nora Arnezeder" }, { "name": "Kelly Carlson" }, { "name": "Robert Patrick" }, { "name": "David Lyons" }, { "name": "Sra Noithai" }, { "name": "Matt Bellefleur" }, { "name": "George Canyon" }, { "name": "Gabriel Carter" }, { "name": "Marianne Farley" }, { "name": "Quinn Lord" }, { "name": "Francis X. McCarthy" }, { "name": "Phương Lực Thân" }, { "name": "Lưu Vũ Kỳ" }, { "name": "Sara Loren" }, { "name": "Lee Bum Soo" }, { "name": "Yoon Jung Hee" }, { "name": "Trey Songz" }, { "name": "Erica Leerhsen" }, { "name": "Henry Rollins" }, { "name": "Daniella Alonso" }, { "name": "Steve Braun" }, { "name": "Ewen Bremner" }, { "name": "Jonny Lee Miller" }, { "name": "Juliette Binoche Kulig" }, { "name": "Cha Tae hyeon" }, { "name": "Kang Ye won" }, { "name": "Lee Moon soo" }, { "name": "Jang Young nam and Cheon Bo geun" }, { "name": "John Noble" }, { "name": "Megumi Hayashibara Kitaohgi" }, { "name": "Jeremy Sisto" }, { "name": "Eliza Dushku" }, { "name": "Desmond Harrington" }, { "name": "Kim Hyeon Jeong" }, { "name": "Lee Je yong" }, { "name": "Kim Dae wu" }, { "name": "Hayley Atwell" }, { "name": "Damian Lewis" }, { "name": "Trần Ý Hàm" }, { "name": "Trịnh Nguyên Sướng" }, { "name": "Petchtai Wongkamlao" }, { "name": "Jacqueline Apitananon" }, { "name": "Manoj Bajpayee" }, { "name": "Richa Chadda" }, { "name": "Blake Freeman" }, { "name": "Jason Mewes" }, { "name": "Mindy Sterling" }, { "name": "Lauren Holly" }, { "name": "Samuel l. jackson" }, { "name": "Ice cube" }, { "name": "Willem dafoe" }, { "name": "Nick Nolte" }, { "name": "Silje Reinåmo" }, { "name": "Erlend Nervold" }, { "name": "Jon Sigve Skard" }, { "name": "Barbra Streisand" }, { "name": "Julene Renee Preciado" }, { "name": "Jared Gilman" }, { "name": "MaliJohn Cusack" }, { "name": "Liam Cunningham" }, { "name": "Ông Hồng" }, { "name": "Tống Mạnh Chung" }, { "name": "Lương Tư Hạo" }, { "name": "Hal Holbrook" }, { "name": "Lincoln Burrows Wentworth Miller" }, { "name": "Michael Scofield Amaury Nolasco" }, { "name": "Fernando Sucre" }, { "name": "Hà Siêu Nghi" }, { "name": "Diego Boneta" }, { "name": "Robert Amstler" }, { "name": "Nadia Lanfranconi" }, { "name": "John J. Welsh" }, { "name": "Won yeong Choi" }, { "name": "Bren Maher" }, { "name": "Trần Nghiên Hi" }, { "name": "Kha Chấn Đông" }, { "name": "Ngạo Khuyển" }, { "name": "Hác Thiệu Văn" }, { "name": "Abbas Alibhai Burmawallalibhai Burmawalla" }, { "name": "Ah jung Kim" }, { "name": "Yong geon Kim" }, { "name": "Sa rang Kim" }, { "name": "Jun Gyu Park" }, { "name": "Hyeok jae Lee" }, { "name": "Ha Neul Kim" }, { "name": "Ji Hwan Kang" }, { "name": "Seung yong Ryoo" }, { "name": "Jonny Weston" }, { "name": "Peter Holden" }, { "name": "Jang Mi In Nae" }, { "name": "Kwon Min" }, { "name": "Marlon Wayans" }, { "name": "Essence Atkins" }, { "name": "Marlene Forte" }, { "name": "Seann William Scott" }, { "name": "Marit ThoreseDaniel Wu" }, { "name": "Tsutomu Tatsumi" }, { "name": "Ayano Shiraishi" }, { "name": "Yoshiko Shinohara" }, { "name": "Holt McCallany" }, { "name": "Lucas Till" }, { "name": "Robin Wright" }, { "name": "Mickey Rooney" }, { "name": "Pearl Bailey" }, { "name": "Reba McEntire" }, { "name": "Patrick Swayze" }, { "name": "Michael Pena" }, { "name": "and Emma Stone" }, { "name": "Jon Voight" }, { "name": "Iain Glen" }, { "name": "Monica Bellucci" }, { "name": "Ciarán Hinds" }, { "name": "Kaori Momoi" }, { "name": "Erika Sawajiri" }, { "name": "Vijay" }, { "name": "Sathyan" }, { "name": "Ram Charan" }, { "name": "Amala Paul" }, { "name": "BeOlga Kurylenko" }, { "name": "ANeil Patrick Harris" }, { "name": "Hank Azaria" }, { "name": "Jayma Mays" }, { "name": "Blair Brown" }, { "name": "The Dalai Lama" }, { "name": "David Schwimmer" }, { "name": "Jada Pinkett Smith" }, { "name": "Danny Jacobs" }, { "name": "Cedric the Entertainer" }, { "name": "Hayato Ichihara" }, { "name": "Erika Toda" }, { "name": "Shinnosuke Abe" }, { "name": "Đặng Gia Giai" }, { "name": "Trần Chí Bằng" }, { "name": "Hilary Duff" }, { "name": "Chad Michael Murray" }, { "name": "Jennifer Coolidge" }, { "name": "Ray Liotta" }, { "name": "Michael Chiklis" }, { "name": "Sean Faris" }, { "name": "Al Pacinolarkin" }, { "name": "Trần Y Hàm" }, { "name": "Trần Bách Lâm" }, { "name": "Quách Tuyết Phù" }, { "name": "Irene MoDerek de Lint" }, { "name": "Isidora Simijonovic Mikitisin" }, { "name": "Christy Chung" }, { "name": "Jue Huang" }, { "name": "Aaron Kwok" }, { "name": "Choi Daniel" }, { "name": "Jo Yoon Hee" }, { "name": "Keri RussellJosh Hamilton" }, { "name": "Mira Nair" }, { "name": "Helena Kriel" }, { "name": "Eric F. Adams" }, { "name": "Marcelle Baer" }, { "name": "Edrick Browne" }, { "name": "Clive OweGillianderson" }, { "name": "Helena BoRalph Fiennes" }, { "name": "Robbie Coltrane" }, { "name": "Craig Robinson" }, { "name": "và Martin Star." }, { "name": "Ryu Seung Bum" }, { "name": "Kim Ok Bin" }, { "name": "Jamie FoxxJames Woods" }, { "name": "Jake Weber" }, { "name": "Lance Reddick" }, { "name": "Tao Okamoto" }, { "name": "Hoàng Tông Trạch" }, { "name": "Hà Vận Thi" }, { "name": "Phùng Tôi Phàm" }, { "name": "Hạ Như Chi" }, { "name": "Lâm Tông Nhâ" }, { "name": "Devon Werkheiser" }, { "name": "Nicole Forester" }, { "name": "Justin Deeley" }, { "name": "Caitlin Carmichael" }, { "name": "David Kross" }, { "name": "Florian David Fitz" }, { "name": "Karl Markovics" }, { "name": "Isabel Christine Andreasen" }, { "name": "Ingrid Bolsø Berdal" }, { "name": "Kristian Espedal" }, { "name": "Mike Möller" }, { "name": "Volkram Zschiesche" }, { "name": "Oliver Juhrs" }, { "name": "Stephen Cloud" }, { "name": "Trương Vũ Ỷ" }, { "name": "Asia Argento" }, { "name": "Kim Sung Kyun" }, { "name": "Kim Yunjin" }, { "name": "Joko Ar" }, { "name": "Katharine Isabelle" }, { "name": "Antonio Cupo" }, { "name": "Tristan Risk" }, { "name": "Uhm Tae Woong" }, { "name": "Jung Ryu Won" }, { "name": "Jessica Biel" }, { "name": "Jodelle Ferland" }, { "name": "William B. Davis" }, { "name": "Seol Kyeong gu" }, { "name": "Son Ye jin" }, { "name": "Kim Sang kyeong" }, { "name": "Yamada Ryosuke" }, { "name": "Haruna Kawaguchi" }, { "name": "Arioka Daiki" }, { "name": "Từ Nhược Tuyên" }, { "name": "Paul Schneider" }, { "name": "Kevin Heffernan" }, { "name": "Viên Vịnh Nghi" }, { "name": "Vương Tổ Lam" }, { "name": "Paoli Dam" }, { "name": "Nikhil Dwivedi" }, { "name": "Gulshan Devaiah" }, { "name": "Joshua Jackson" }, { "name": "Hideaki Itô" }, { "name": "Ai Katô" }, { "name": "Ryûta Satô" }, { "name": "Cecilia Cheung" }, { "name": "Siu Fai Cheung" }, { "name": "Lưu Đức Hoà" }, { "name": "Dreama Walker" }, { "name": "Pat Healy" }, { "name": "Lauren Graham" }, { "name": "Johnny Simmons" }, { "name": "Fatima Ptacek" }, { "name": "Shawn Christensen" }, { "name": "Kim Allen" }, { "name": "Jackie Channd Jim Broadbent" }, { "name": "Billy Campbell" }, { "name": "Jesse Johnson" }, { "name": "Geraldine Hughes" }, { "name": "Tobias Zilliacus" }, { "name": "Mikael Persbrandt" }, { "name": "Lena Olin" }, { "name": "Juno TempleAlexis Bledel" }, { "name": "Alan Rickman" }, { "name": "Abigail Spencer" }, { "name": "Steve Austin" }, { "name": "Eric Keenleyside" }, { "name": "Ajay DevgnSonakshi Si" }, { "name": "Kristen ConnollyJane McNeill" }, { "name": "Kesarin Chaichalermpol" }, { "name": "Lưu Ngân Ngân" }, { "name": "Thị Tuyên Như" }, { "name": "Cha Tae Hyun" }, { "name": "Do Kyung soo D.O EXO" }, { "name": "Kim Yong Hwa" }, { "name": "Jacqueline McKenzie" }, { "name": "Hayley McElhinney" }, { "name": "Myles Pollard" }, { "name": "Justin Timberlake" }, { "name": "Woody Allen" }, { "name": "Diêm Ni" }, { "name": "Phan Bâng Long" }, { "name": "Dương Hựu Ninh" }, { "name": "Vương Cảnh Xuân" }, { "name": "Đoàn Dịch" }, { "name": "Hoành" }, { "name": "Greg Kinnear" }, { "name": "Djimon Hounsou" }, { "name": "Joe Wright" }, { "name": "Ngô Vũ Sâm" }, { "name": "Shelley Hennig" }, { "name": "James Arnold Taylor" }, { "name": "Kate Micucci" }, { "name": "Kevin Michael Richardson" }, { "name": "Sajjad Delafrooz" }, { "name": "Lưu Địch" }, { "name": "Uông Tình" }, { "name": "Vệ Diên Khản" }, { "name": "Tsubasa Honda" }, { "name": "Kar Yan Lam" }, { "name": "Ethan Juan" }, { "name": "Shi Shi Liu" }, { "name": "Jingfei Guo" }, { "name": "Miêu Kiều Vỹ" }, { "name": "Tang Bình" }, { "name": "Viên Gia Mẫn" }, { "name": "Trương Thiên Dương" }, { "name": "Hà Hoằng San" }, { "name": "Vạn Thương" }, { "name": "Josh O'Connor" }, { "name": "Harry Lister Smith" }, { "name": "Ian Hart" }, { "name": "Alec Secareanu" }, { "name": "Thư Nhã" }, { "name": "Tề Siêu" }, { "name": "Trương Phong" }, { "name": "Stephen Chbosky" }, { "name": "Izabela Vidovic" }, { "name": "Takumi Saito" }, { "name": "Takahiro" }, { "name": "Hiroomi Tosaka" }, { "name": "Noémie Nakai" }, { "name": "Christina Cox" }, { "name": "David Forseth" }, { "name": "Svetlana Ivanova" }, { "name": "Meg Foster" }, { "name": "Victor Salva" }, { "name": "Stan Shaw" }, { "name": "Brandon Smith" }, { "name": "Ái Phỉ Nhi" }, { "name": "Cát Tranh" }, { "name": "Yoo Ji Tae" }, { "name": "An Se‑Ha" }, { "name": "Hứa Minh Hổ" }, { "name": "Phiền Nhị" }, { "name": "Trương Thiên Kỳ" }, { "name": "Kaitlyn Boyé" }, { "name": "Damien Garvey" }, { "name": "Olga Miller" }, { "name": "Kim Gyngell" }, { "name": "Óscar Barberán" }, { "name": "Luis Posada" }, { "name": "Miguel Ángel Jenner" }, { "name": "José Corbacho" }, { "name": "Kim Hye Soo" }, { "name": "Piercey Dalton" }, { "name": "Patricia Bethune" }, { "name": "Lâm Tử Hoành" }, { "name": "Đường Chấn Cương" }, { "name": "Blanca Portillo" }, { "name": "Antonio Dechent" }, { "name": "Vicente Romero" }, { "name": "Marc Domènech" }, { "name": "Nausicaa Bonnín" }, { "name": "Andrés Herrera" }, { "name": "Ứng Hạo Minh" }, { "name": "Tu Kiệt Khải" }, { "name": "Nam Sanh" }, { "name": "Ngô Dạng" }, { "name": "Lý Vỹ" }, { "name": "Yuki Kaji" }, { "name": "Mamoru Miyano" }, { "name": "Bạch Tử Hiên" }, { "name": "Lý Ba Nhi" }, { "name": "Đỗ Ngọc Minh" }, { "name": "Garret Dillahunt" }, { "name": "Jill Wagner" }, { "name": "Từ Cẩm Giang" }, { "name": "Cố Vũ Phong" }, { "name": "Túng Hân Hân" }, { "name": "Quách Vỹ" }, { "name": "Lý Trị Đình" }, { "name": "Chu Đông Vũ" }, { "name": "Ngũ Bách" }, { "name": "Ngụy Lộ" }, { "name": "Trương Nghệ Kiển" }, { "name": "Christopher Lambert" }, { "name": "Seo Young Hwa" }, { "name": "Do Kyung soo" }, { "name": "Kim Dong Young" }, { "name": "Park Soo Young" }, { "name": "Lucy Punch" }, { "name": "Sarah Parish" }, { "name": "Faye Marsay" }, { "name": "David Warner" }, { "name": "Tobin Bell" }, { "name": "Matt Passmore" }, { "name": "Callum Keith Rennie" }, { "name": "Tưởng Mộng Tiệp" }, { "name": "Shuhei Nomura" }, { "name": "Kentaro" }, { "name": "Yuina Kuroshima" }, { "name": "Tina Tamashiro" }, { "name": "Yuna Taira" }, { "name": "Yuri Tsunematsu" }, { "name": "Nhiệt Ny Trát" }, { "name": "Triệu Bổn Sơn" }, { "name": "Trần Lâm" }, { "name": "Khưu Hạo Kỳ" }, { "name": "Văn Kỳ" }, { "name": "Ngũ Doãn Long" }, { "name": "Trương Cẩm Tình" }, { "name": "Từ Đông Đông" }, { "name": "James Urbaniak" }, { "name": "Damian Young" }, { "name": "Douglas Booth" }, { "name": "Jerome Flynn" }, { "name": "Robert Gulaczyk" }, { "name": "Lương Tịnh Kháng" }, { "name": "Nghiêm Mễ Lạp" }, { "name": "Trương Lâm Nghệ" }, { "name": "Harry Dean Stanton" }, { "name": "David Lynch" }, { "name": "Ed Begley Jr." }, { "name": "Tom Skerritt" }, { "name": "Beth Grant" }, { "name": "Algee Smith" }, { "name": "Carter Roy" }, { "name": "Alena von Stroheim" }, { "name": "Chris O'Brien" }, { "name": "Hứa Vĩ Ninh" }, { "name": "Cao Tuệ Quân" }, { "name": "Hoàng Hà" }, { "name": "Chiêm Uyển Nho" }, { "name": "Ngô Niệm Hiên" }, { "name": "Kim Quang Minh" }, { "name": "Lưu Lị Nhân" }, { "name": "Trần Viên" }, { "name": "Wei ning Hsu" }, { "name": "Kaiser Chuang" }, { "name": "Chia Yen Ko" }, { "name": "Christopher Ming Shun Lee" }, { "name": "Mason Lee" }, { "name": "Phương Trung Tín" }, { "name": "Lâm Thân" }, { "name": "Hứa Kinh Xuyên" }, { "name": "Lương Tuấn Nhất" }, { "name": "Maria Canals Barrera" }, { "name": "Pat Boone" }, { "name": "Robin Givens" }, { "name": "Melissa Joan Hart" }, { "name": "Brad Heller" }, { "name": "Mark Hamill" }, { "name": "Carrie Fisher" }, { "name": "Kelly Marie Tran" }, { "name": "Missi Pyle" }, { "name": "Nhậm Tố Tịch" }, { "name": "Cao Hiệp" }, { "name": "Trần Tỉ Húc" }, { "name": "Dịch Dương" }, { "name": "Dương Chính" }, { "name": "Thẩm Phương Hi" }, { "name": "Bridget Regan" }, { "name": "Trương Quốc Trụ" }, { "name": "Hoàng Tử Thao" }, { "name": "Lý Mộng" }, { "name": "Dương Thái Ngọc" }, { "name": "Emilio Rivera" }, { "name": "Luke Grimes" }, { "name": "Dax Shepard" }, { "name": "Kurtwood Smith" }, { "name": "Kimberly Quinn" }, { "name": "Hầu Dũng" }, { "name": "Kim Thần" }, { "name": "Đại Trương Vỹ" }, { "name": "Bobby Cannavale" }, { "name": "Boris Kodjoe" }, { "name": "Takafumi Hatano" }, { "name": "Hajime Hashimoto" }, { "name": "Văn Trác" }, { "name": "Lâu Giai Duyệt" }, { "name": "Trương Khánh Khánh" }, { "name": "Ngô Việt" }, { "name": "Diego Luna" }, { "name": "Kiersey Clemons" }, { "name": "Morakot Liu" }, { "name": "Eisaya Hosuwan" }, { "name": "Nutthasit Kotimanuswanich" }, { "name": "Ploy Sornarin" }, { "name": "Peem Jaiyen" }, { "name": "La Gia Anh" }, { "name": "Tạ Y Lâm" }, { "name": "Giả Chính Vũ" }, { "name": "Tống Tinh Nghiên" }, { "name": "Trịnh Húc Đông" }, { "name": "Trâu Dương" }, { "name": "Tào Hi Nguyệt" }, { "name": "Tom Holland" }, { "name": "Diana Rigg" }, { "name": "Camilla Rutherford" }, { "name": "Olivia Williams" }, { "name": "Ali Fazal" }, { "name": "Trương Hàn" }, { "name": "Chu Nhất Long" }, { "name": "Liễu Ni Na" }, { "name": "Rachelle Lefevre" }, { "name": "Sarah Dugdale" }, { "name": "Jared Abrahamson" }, { "name": "Lucy Boynton" }, { "name": "Jamie Clayton" }, { "name": "Shin Eun Jung" }, { "name": "Minho" }, { "name": "Hà Hân Tử" }, { "name": "Trần Ngọc Dũng" }, { "name": "Timothée Chalamet" }, { "name": "Michael Stuhlbarg" }, { "name": "Eric Balfour" }, { "name": "Donald Faison" }, { "name": "Scottie Thompson" }, { "name": "Chiara Aurelia" }, { "name": "Masataka Kubota" }, { "name": "Aoi Yu" }, { "name": "Fumika Shimizu" }, { "name": "Yo Oizumi" }, { "name": "An Hổ" }, { "name": "Cù Cúc Huy" }, { "name": "Vương Nguy" }, { "name": "Raffey Cassidy" }, { "name": "Alicia Silverstone" }, { "name": "Sarah Natochenny" }, { "name": "Sarah Lind" }, { "name": "Jakob Davies" }, { "name": "Hugh Dillon" }, { "name": "Vicellous Shannon" }, { "name": "Kurt Max Runte" }, { "name": "Masaki Okada" }, { "name": "Masaki Suda" }, { "name": "Shun Oguri" }, { "name": "Hà Khiết Văn" }, { "name": "Supriya Pilgaonkar" }, { "name": "Đồ Lê Mạn" }, { "name": "Ezra Miller" }, { "name": "Diane Lane" }, { "name": "Ray Fisher" }, { "name": "Phó Bác Văn" }, { "name": "Quỷ Quan Lâm" }, { "name": "Trần Bội Tư" }, { "name": "Tân Kiều" }, { "name": "Katie Holmes" }, { "name": "Thái Trác Nghiên" }, { "name": "Lan Law" }, { "name": "Hàn Chí Thạc" }, { "name": "Thái Điệp" }, { "name": "Triệu Uy Lâm" }, { "name": "Park Ha Sun" }, { "name": "Hà Vân Vĩ" }, { "name": "Trương Nhất Long" }, { "name": "Tony jaa" }, { "name": "Jack Ma" }, { "name": "Trình Tiểu Đông" }, { "name": "Trình Hạo Phong" }, { "name": "Hoa Thiếu" }, { "name": "Trịnh Quốc Lâm" }, { "name": "Charles Aitken" }, { "name": "Rachel Matthews" }, { "name": "Jason Bayle" }, { "name": "Takuya Kimura" }, { "name": "Kristin Chenoweth" }, { "name": "Chanon Santinatornkul" }, { "name": "Teeradon Supapunpinyo" }, { "name": "Bing He" }, { "name": "Jet Chao" }, { "name": "Ray Wang" }, { "name": "Rose McIver" }, { "name": "Alice Krige" }, { "name": "Ben Lamb" }, { "name": "Maika Yamamoto" }, { "name": "Mei Nagano" }, { "name": "Shohei Miura" }, { "name": "Alan Shirahama" }, { "name": "Ryuta Sato" }, { "name": "Naomi Nishida" }, { "name": "Dominik Kowalczyk" }, { "name": "Ewa Blaszczyk" }, { "name": "Magdalena Niec" }, { "name": "Marcos A. Ferraez" }, { "name": "Benjamin A. Hoyt" }, { "name": "Alison Fernandez" }, { "name": "Mai Kadowaki" }, { "name": "Tống Hiểu Phong" }, { "name": "Đường Na" }, { "name": "Trương Gia Hào" }, { "name": "Josh Grelle" }, { "name": "Hoàng Hoành" }, { "name": "Lưu Hướng Kinh" }, { "name": "Vương Hải Yến" }, { "name": "Nhạc Đông Phong" }, { "name": "Vương Hồng Thiên" }, { "name": "Paul Anderson" }, { "name": "Nathalie Boltt" }, { "name": "Kazuya Kamenashi" }, { "name": "Mahiro Takasugi" }, { "name": "Tao Tsuchiya" }, { "name": "Daigo Nishihata" }, { "name": "Kim Rae Won" }, { "name": "Baek Bong Ki" }, { "name": "Lily Sullivan" }, { "name": "Greg McLean" }, { "name": "Mizuki Yamamoto" }, { "name": "Maeda Makkenyu" }, { "name": "Đại Bằng" }, { "name": "Kiều Sam" }, { "name": "Phạm Vĩ" }, { "name": "Lưu Vũ Kì" }, { "name": "Hải Đông" }, { "name": "Thẩm Trì" }, { "name": "Lee Je Hoon" }, { "name": "Na Mun hee" }, { "name": "Văn Vịnh San" }, { "name": "Hứa Chí An" }, { "name": "Minh Tuấn Thần" }, { "name": "Quách Nhược Hàn" }, { "name": "Y Na" }, { "name": "Luc Besson" }, { "name": "Taecyeon" }, { "name": "Lưu Dương" }, { "name": "Hầu Phất Minh" }, { "name": "Lý Khai Minh" }, { "name": "Trường Hoành Bác" }, { "name": "Diego Klattenhoff" }, { "name": "Charlotte Sullivan" }, { "name": "Robert Borges" }, { "name": "Andrea del Campo" }, { "name": "Nazariy Demkowicz" }, { "name": "Brett Donahue" }, { "name": "Tom Kenny" }, { "name": "Se ha Ahn" }, { "name": "Yo han Byeon" }, { "name": "Seo jin Chae" }, { "name": "Carter Jenkins" }, { "name": "Michael Grant" }, { "name": "Matt Shively" }, { "name": "Nick Marini" }, { "name": "Taryn Manning" }, { "name": "Francesca Eastwood" }, { "name": "Trần Hán Điển" }, { "name": "Kim Thế Giai" }, { "name": "Lý Tử Phong" }, { "name": "Phạm Điềm Điềm" }, { "name": "Từ Hy Đệ" }, { "name": "Hứa Quân Thông" }, { "name": "Trương Kinh Vĩ" }, { "name": "Trương Quân Hàm" }, { "name": "Kim Seolhyun" }, { "name": "Kyoung gu Sul" }, { "name": "Xiao Lian Sha" }, { "name": "Tu Te Ha Meng" }, { "name": "Shih Chieh King" }, { "name": "Teri Hatcher" }, { "name": "Sean Marquette" }, { "name": "Silverio Palacios" }, { "name": "Jordi Mollà" }, { "name": "Đường Vũ Triết" }, { "name": "Trương Ngữ Cách" }, { "name": "Thanh Ngọc Văn" }, { "name": "Đặng Lệ Hân" }, { "name": "Trương Địch" }, { "name": "Đoạn Trác Văn" }, { "name": "Cristina Serafini" }, { "name": "Atanas Srebrev" }, { "name": "Philip Ng" }, { "name": "Teresa Navarro" }, { "name": "Terry Chen" }, { "name": "Nigel O'Neill" }, { "name": "Susan Lynch" }, { "name": "Diana Prince" }, { "name": "Marshal Hilton" }, { "name": "Bradley Bundlie" }, { "name": "Boriana Williams" }, { "name": "Olivia Stiefel" }, { "name": "Debby Gerber" }, { "name": "Mộc Lam" }, { "name": "Trương Giác" }, { "name": "José Coronado" }, { "name": "Bárbara Lennie" }, { "name": "Ana Wagener" }, { "name": "Trần Hổ" }, { "name": "Lý Quán Lâm" }, { "name": "Nguyên Trạch Vũ" }, { "name": "Thạc Lỗi" }, { "name": "Cinda Adams" }, { "name": "Bob Barlen" }, { "name": "Cal Brunker" }, { "name": "Joey Camen" }, { "name": "David Epstein" }, { "name": "Pappy Faulkner" }, { "name": "Sam Strike" }, { "name": "Vanessa Grasse" }, { "name": "Sam Coleman" }, { "name": "Alba Galocha" }, { "name": "Itziar Atienza" }, { "name": "Florin Opritescu" }, { "name": "Jang Hyuk" }, { "name": "Jo Bo Ah" }, { "name": "Sunwoo Sun" }, { "name": "Shûgo Oshinari" }, { "name": "Pedro Pascal" }, { "name": "Han Chae Ah" }, { "name": "Gang Ye Won" }, { "name": "Kim Min Kyo" }, { "name": "Kim Sung Eun" }, { "name": "Mã Thiên Vũ" }, { "name": "Lý Thạnh" }, { "name": "Diêu Tinh Đồng" }, { "name": "Châu Vi Đồng" }, { "name": "Song Kang‑Ho" }, { "name": "Neal McDonough" }, { "name": "Molly Parker" }, { "name": "Dylan Schmid" }, { "name": "Kaitlyn Bernard" }, { "name": "Tanya Champoux" }, { "name": "Kim Ah Joong" }, { "name": "Seong oh Kim" }, { "name": "Krissada Sukosol Clapp" }, { "name": "Achita Sikamana" }, { "name": "Sarunyu Wongkrachang" }, { "name": "Arisara Tongborisuth" }, { "name": "Soranut Yupanun" }, { "name": "Sucharat Manaying" }, { "name": "Quách Hiểu Đông" }, { "name": "Victoria Justice" }, { "name": "Johnny Knoxville" }, { "name": "Chelsea Handler" }, { "name": "Josh Radnor" }, { "name": "Goo Ja Hyeong" }, { "name": "Lee Hyung Suk" }, { "name": "Sin Yong woo" }, { "name": "Kristopher Turner" }, { "name": "Crystal Lowe" }, { "name": "Phan Tử" }, { "name": "Mie Sonozaki" }, { "name": "Masaki Terasoma" }, { "name": "Atsushi Abe" }, { "name": "Masumi Asano" }, { "name": "Keiji Fujiwara" }, { "name": "Calvin Reederrd" }, { "name": "Park Han Byul" }, { "name": "Kim Ji Seok" }, { "name": "Park Jin Joo" }, { "name": "Gérard Depardieu" }, { "name": "Frank Langella" }, { "name": "Aneurin Barnard" }, { "name": "Wunmi Mosaku" }, { "name": "Yōichi Masukawa" }, { "name": "Kazuhiko Inoue" }, { "name": "Shotaro Morikubo" }, { "name": "Akira Ishida" }, { "name": "Yasuyuki Kase" }, { "name": "Sally Field" }, { "name": "Chandler Canterbury" }, { "name": "Mike Vogel" }, { "name": "Yu Shaoqun" }, { "name": "Bai Jing" }, { "name": "Huang Younan" }, { "name": "Hui Tianci" }, { "name": "Yuan Qiu" }, { "name": "Yuan Hua" }, { "name": "Zou Zhaolong" }, { "name": "Hui Yinghong" }, { "name": "Sheridan Smith" }, { "name": "Joel Mathews" }, { "name": "Dwayne JohnsoJohnny Knoxville" }, { "name": "Raúl Arévalo" }, { "name": "Alexandra Jiménez" }, { "name": "Javier Bódalo" }, { "name": "Mirai Kataoka" }, { "name": "Takuma Negishi" }, { "name": "Ami Taniguchi" }, { "name": "Ashley BellMichael Eklund" }, { "name": "Nicole LaLiberte" }, { "name": "Liam Aiken" }, { "name": "Chase Williamson" }, { "name": "Kekin" }, { "name": "Ken Watanabe" }, { "name": "Billy Connolly" }, { "name": "Luke Pasqualino" }, { "name": "Lili Bordán" }, { "name": "Ty Olsson" }, { "name": "Ryan Phillippe" }, { "name": "Joseph Cross" }, { "name": "Kekindrew Marton" }, { "name": "Martin Balsam" }, { "name": "Sou Yamamura" }, { "name": "Ai Kobayashi" }, { "name": "Yûji Kishi" }, { "name": "BeJoseph Fiennes" }, { "name": "Mary McDonnell" }, { "name": "Graham Greene" }, { "name": "John Leguizamo" }, { "name": "Adam O'BriaCathy Dresbach" }, { "name": "Annie Liu" }, { "name": "Matthew Broderick" }, { "name": "Fedor Borchuk" }, { "name": "SimoVirginie Ledoyen" }, { "name": "Robinson Stévenin" }, { "name": "Chunthawit Thanasewi" }, { "name": "Nuengthida Sophon" }, { "name": "Gregory Peck" }, { "name": "Anthony Quinn" }, { "name": "George C. Scott" }, { "name": "Katharine Towne" }, { "name": "Steve McQueen" }, { "name": "James Garner" }, { "name": "Richard Attenborough" }, { "name": "Emma Fitzpatrick" }, { "name": "Sharon Stone" }, { "name": "Promise LaMarco" }, { "name": "Lee Marvin" }, { "name": "Ernest Borgnine" }, { "name": "Charles Bronson" }, { "name": "Eddie Baroo" }, { "name": "Justin Batchelor" }, { "name": "Nicholas Bell" }, { "name": "William HoldeJack Hawkins" }, { "name": "Ekin Cheng" }, { "name": "Joyce Cheng" }, { "name": "Charlene Choi" }, { "name": "Quvenzhané Wallis" }, { "name": "Dwight Henry" }, { "name": "Levy Easterly" }, { "name": "Isabel Lucas" }, { "name": "Rasmus Hardiker" }, { "name": "Harry Treadaway" }, { "name": "Michelle Ryan" }, { "name": "Jang Dong gun" }, { "name": "Won Bin và Lee Eun joo" }, { "name": "Go Soo" }, { "name": "Jude Law và Aaron Taylor Johnson" }, { "name": "Joong ki Song" }, { "name": "Bo yeong Park and Young nam Jang" }, { "name": "Ross Noble" }, { "name": "Gemma Leah Devereux" }, { "name": "Tommy Knight" }, { "name": "Marc Singer" }, { "name": "Art LaFleur" }, { "name": "Hayley DuMond" }, { "name": "Thor Kristjansson" }, { "name": "Damon Younger" }, { "name": "Triệu Bản Sơn" }, { "name": "Trần Tư Thành" }, { "name": "Lưu Đức Khải" }, { "name": "Lưu Hiểu Khánh" }, { "name": "Bria Miller" }, { "name": "Darren ShahlaviKandyse McClure" }, { "name": "Henry Winkler" }, { "name": "Miley Cyrus" }, { "name": "Katrina Bowden" }, { "name": "Randy Wayne" }, { "name": "Erin Marie Hogan" }, { "name": "Trương Quốc Lập" }, { "name": "Chad Michael Collins" }, { "name": "Han Hyo joo" }, { "name": "Seung Ryong Ryu" }, { "name": "Megan Charpentier" }, { "name": "Nadine Velazquez" }, { "name": "Don Cheadle" }, { "name": "Juliet Rylance" }, { "name": "Bette Midler và Marisa Tomei" }, { "name": "Jeong hwa Eom" }, { "name": "Priscilla Faia" }, { "name": "Adrian Holmes" }, { "name": "Jesse Hutch" }, { "name": "Peter Weller" }, { "name": "Ariel Winter" }, { "name": "Michael Emerson" }, { "name": "Kim Thành Vũ" }, { "name": "Huệ Anh Hồng" }, { "name": "Petar Bachvarov" }, { "name": "Zahary Baharov" }, { "name": "Katie Featherston" }, { "name": "Kathryn Newton" }, { "name": "Mark Steger" }, { "name": "KIM Hyeon soo" }, { "name": "NOH Kang min" }, { "name": "Tiêu Huân" }, { "name": "Lưu Tích Minh" }, { "name": "Juan Diego Botto" }, { "name": "Mágica Pérez" }, { "name": "Kôji Seto" }, { "name": "Tsutomu Takahashi" }, { "name": "Jamel Debbouze" }, { "name": "Alain Chabat" }, { "name": "Fred Testot" }, { "name": "Amaia SalamaMaxi Iglesias" }, { "name": "Lucho Fernández" }, { "name": "Scott Peat" }, { "name": "Marissa Merrill" }, { "name": "Johnny Hallyday" }, { "name": "Anthony Wong" }, { "name": "Lam Ka Tung" }, { "name": "Sylvie Testud" }, { "name": "Natasha Calis" }, { "name": "Rachelle Dimarialex Bell" }, { "name": "Noel Clarke Campbell Hughes" }, { "name": "Kirati Nakinon" }, { "name": "Joel KiFares Fares" }, { "name": "Matias Varela" }, { "name": "Juantonio Bayona" }, { "name": "Hugh JackmanRichard Roxburgh" }, { "name": "Xander Berkeley" }, { "name": "ChaPreechaya Pongthananikorn" }, { "name": "Kim Kang woo" }, { "name": "Kim Hyo jin" }, { "name": "Baek Yoon sik" }, { "name": "Yoon Yeo jeong" }, { "name": "Bug Hall" }, { "name": "Donnie Jeffcoat" }, { "name": "Sean McGowan" }, { "name": "Aubrey Plaza" }, { "name": "Eamon Farren" }, { "name": "Evan Bird" }, { "name": "Deborah Kara Unger" }, { "name": "Kimble Rell" }, { "name": "Jody Thompson" }, { "name": "Conner Dwelly" }, { "name": "Ryan Grantham" }, { "name": "Dong gun Jang" }, { "name": "Steve Zahn" }, { "name": "Burn GormanRon Perlman" }, { "name": "Max Baker" }, { "name": "Morris Rong" }, { "name": "Yvonne Yao" }, { "name": "Sona Eyambe" }, { "name": "Danny DeVito" }, { "name": "Pat Carroll Adams" }, { "name": "Donnelly Rhodes" }, { "name": "Ben BarnesGeorgie Henley" }, { "name": "Georgie Henley" }, { "name": "William Moseley" }, { "name": "Robert De Niro and Cillian Murphy" }, { "name": "Thom Hoffman" }, { "name": "Emmy Rossum" }, { "name": "Joan Chen" }, { "name": "Shaofeng Feng" }, { "name": "Valheim Hagenders Baasmo Christiansen" }, { "name": "Tiền Gia Lạc" }, { "name": "Doãn Tử Duy" }, { "name": "Milla Jovovich Guillory and Michelle Rodriguez" }, { "name": "Dennis Alexio" }, { "name": "Dennis Chan" }, { "name": "Max Thieriot" }, { "name": "Bill Goldberg" }, { "name": "Heidi Schanz" }, { "name": "ABrittany Snow" }, { "name": "Tae woong Eom" }, { "name": "Ga in Han" }, { "name": "Rae Dawn Chong" }, { "name": "Clint Eastwood" }, { "name": "Kevin T. Collins" }, { "name": "Marc Diraison" }, { "name": "Doug Erholtz" }, { "name": "Sudeep" }, { "name": "Nani" }, { "name": "Bryan Trương Thư Hào" }, { "name": "Zoe Bell" }, { "name": "Paul Wesley" }, { "name": "Tom Wilkinsonnd Helena Bom Carter" }, { "name": "Oseph Gordon LevittJamie Chungshley Carter" }, { "name": "Yulia Snigir" }, { "name": "Amaury Nolasco" }, { "name": "Megalyn Echikunwoke" }, { "name": "Anne Vyalitsyna" }, { "name": "và Mary Elizabeth Winstead" }, { "name": "Donal Logue" }, { "name": "Tyne Daly" }, { "name": "Harry Guardino" }, { "name": "Ella" }, { "name": "Hạ Quân Tường" }, { "name": "Phương Chí Hữu" }, { "name": "Đại Nguyên" }, { "name": "Ranbir KapoorHaradhan Bannerjee" }, { "name": "Seon gyun Lee" }, { "name": "Sung min Lee" }, { "name": "Zachary Gordon" }, { "name": "Eric Banam" }, { "name": "Mayumi Tanaka" }, { "name": "Kazuya Nakai" }, { "name": "Akemi Okamura" }, { "name": "Anora Lyn" }, { "name": "Jeong Man Sik" }, { "name": "Tyler Perry" }, { "name": "Antje Traue" }, { "name": "Russell Crowe star" }, { "name": "D.J. Cotrona" }, { "name": "Adrianne Palicki" }, { "name": "Ray Park" }, { "name": "Jonathan Pryce" }, { "name": "Channing Tatum cùng Bruce Willis" }, { "name": "Alex Arleon" }, { "name": "Angelina" }, { "name": "Connie" }, { "name": "Monnie" }, { "name": "Gwendoline Yeo" }, { "name": "Don Swayze" }, { "name": "Sin Se Kyung" }, { "name": "Yoo Joon Sang" }, { "name": "Kim Sung Soo" }, { "name": "Lee Ha Na" }, { "name": "Lee Jong Suk" }, { "name": "Guy Pearce and Gwyneth Paltrow" }, { "name": "Dragan Bakema" }, { "name": "Alison Carroll and Jappe Claes" }, { "name": "Sophie Marceau" }, { "name": "Andrea Di Stefano" }, { "name": "Bronson Webb" }, { "name": "Agyness Deyn" }, { "name": "Mark Andrews Chapman" }, { "name": "Andy McPhee" }, { "name": "Nam Kyeong Eup" }, { "name": "Oh Ji Ho" }, { "name": "Kate Ashfield" }, { "name": "Nicky Bell" }, { "name": "Alan Brent" }, { "name": "Randy Couture" }, { "name": "Joseph Gordon Levitt và Gary Oldman" }, { "name": "Jesse McCartney" }, { "name": "Jonathan Sadowski" }, { "name": "Olivia Dudley" }, { "name": "Doug Bradley" }, { "name": "Camilla Arfwedson" }, { "name": "Simon Ginty" }, { "name": "Michael Paré" }, { "name": "Michael Fassbeder" }, { "name": "Audrey Tautou" }, { "name": "Alfred Molina" }, { "name": "Sir Ian McKellen" }, { "name": "Kim Seung woo" }, { "name": "Oh Ji ho" }, { "name": "Kim Min jeong" }, { "name": "Choi Soo young" }, { "name": "Choi Yoon so" }, { "name": "Josh Lucas" }, { "name": "Louis Moru" }, { "name": "Anthony Wong Chau Sang" }, { "name": "Xiaodong Guo" }, { "name": "Barbie Hsu" }, { "name": "Josie Ho" }, { "name": "Michelle Ye" }, { "name": "Jo Yeo Jung" }, { "name": "Kim Min Joon" }, { "name": "Park Ji young" }, { "name": "Jo Eun ji" }, { "name": "Jung Chan" }, { "name": "Nathan Fillion" }, { "name": "Michael Rooker" }, { "name": "Leraldo ALuci Christian" }, { "name": "Melissa Davis" }, { "name": "Won Joo" }, { "name": "Byeol Kang" }, { "name": "Elika Portnoy" }, { "name": "Taylor Schilling" }, { "name": "Blythe Danner." }, { "name": "Saffron Burrows" }, { "name": "Stephen Campbell Moore" }, { "name": "Brooklyn Decker" }, { "name": "Til Schweiger" }, { "name": "Rosamund Kwan" }, { "name": "David Wu" }, { "name": "Miriam Yeung Chin Wah" }, { "name": "Singh Hartihan Bitto" }, { "name": "Yat Ning Chan" }, { "name": "Luke Wilson" }, { "name": "Bành Vu YếChu Vũ Thần" }, { "name": "Châu Dương" }, { "name": "Hà Khiết" }, { "name": "Jon Barton" }, { "name": "Elena Beuca" }, { "name": "Sui man Chim" }, { "name": "Koni Lui" }, { "name": "Dong Kun Jang" }, { "name": "Chae young Han" }, { "name": "Du shim Ko" }, { "name": "Ray Romano" }, { "name": "Denis Leary" }, { "name": "Chris Diamantopoulos" }, { "name": "Will Sasso" }, { "name": "Rhett Giles" }, { "name": "Victor Parascos" }, { "name": "Vanessa Gray" }, { "name": "Filip AntonioPetra Hrebícková" }, { "name": "Václav Jílek" }, { "name": "Vica Kerekes" }, { "name": "Ester Kocicková" }, { "name": "Berenika Kohoutová" }, { "name": "Eliska Krenková" }, { "name": "Lukás Langmajer" }, { "name": "Jirí Machácek" }, { "name": "Sean BeaCharlotte Rampling" }, { "name": "Giả Hiểu Thần" }, { "name": "Dun Jones" }, { "name": "Colleen Clinkenbeard" }, { "name": "Pam Dougherty" }, { "name": "Josephine Siao" }, { "name": "Michelle Reis" }, { "name": "Chan Chung Yung" }, { "name": "Zhao Wen Zhou" }, { "name": "KeviLouise Fletcher" }, { "name": "Lucius Baston" }, { "name": "Eamonn Walker" }, { "name": "Emma Stone và Rhys Ifans" }, { "name": "Candy Yu" }, { "name": "Maksim Matveev" }, { "name": "Egor Beroev" }, { "name": "Mario Van Peebles Watts" }, { "name": "Amber Heardble" }, { "name": "Seba Mubarak" }, { "name": "Pernilla August" }, { "name": "Catherine Chan" }, { "name": "Chris Sarandon" }, { "name": "Charles S" }, { "name": "Nathalie Baye và Sami Bouajila" }, { "name": "Takashi Hirajô" }, { "name": "Minami Ichikawa" }, { "name": "Toshiaki" }, { "name": "Nakazawa" }, { "name": "Tôichirô Shiraishi" }, { "name": "Jeremy" }, { "name": "Thomas" }, { "name": "Michihiko" }, { "name": "Yanagisawa" }, { "name": "Denzel WashingtonSam Shepard" }, { "name": "Rubén Blades" }, { "name": "Kim Yeong Ho" }, { "name": "Kim Hye Seon" }, { "name": "Yoon Chae Yi" }, { "name": "Kim San Ho" }, { "name": "Hiro Hayama" }, { "name": "Leni Lan Crazybarby" }, { "name": "Miyavi Matsunoi" }, { "name": "Quách Phẩm Siêu" }, { "name": "Josh Hutcherson Dwayne Johnson" }, { "name": "Andrew Seeley" }, { "name": "Cyril Raffaelli" }, { "name": "Philippe Torreton" }, { "name": "Daniel Duval" }, { "name": "David Alan Basche" }, { "name": "James DuMont" }, { "name": "Yul Vazquez" }, { "name": "Daniel Franzese" }, { "name": "Tae gyu BongDal su OhSu min Lee" }, { "name": "Mi ju Ryu" }, { "name": "Bruce WillisWill Patton" }, { "name": "Jessica Steen" }, { "name": "Kagiso Kuypers" }, { "name": "Arnold Vosloo" }, { "name": "Antony Coleman" }, { "name": "Benu Mabhena" }, { "name": "Anointing Lukola" }, { "name": "David Harewood" }, { "name": "Basil Wallace" }, { "name": "Jimi Mistry" }, { "name": "Maria Ozawa" }, { "name": "Minami Marika" }, { "name": "Mizuse Manami" }, { "name": "Namiko" }, { "name": "Kobayashi Kazunori" }, { "name": "Kouno Tomonori" }, { "name": "Oosako Shigeo" }, { "name": "Akikawa Yuri" }, { "name": "Philip Bartlett" }, { "name": "Ikue Ootani" }, { "name": "Robert Downey" }, { "name": "Jr." }, { "name": "Terence Chang" }, { "name": "Jimmy Huang" }, { "name": "John Woo" }, { "name": "Selma Blair" }, { "name": "Amy Smart and Jason Lee" }, { "name": "Nimród Al" }, { "name": "Carmen Electra" }, { "name": "Charlie O'Connell" }, { "name": "Brooke Hogan" }, { "name": "Jake GylleGemma Arterton" }, { "name": "Jay Chou" }, { "name": "Gang Wang" }, { "name": "Hugo Arana" }, { "name": "Antonella Costa" }, { "name": "Monica Galán" }, { "name": "Leandro Stivelman" }, { "name": "Natasha Henstridge" }, { "name": "Marg Helgenberger" }, { "name": "Ann Mitchell" }, { "name": "Jolyon Coy" }, { "name": "Karl Johnson" }, { "name": "Simon Russell Beale" }, { "name": "Harry Hadden Paton" }, { "name": "Sarah Kants" }, { "name": "Oliver Ford Davies" }, { "name": "Barbara Jefford" }, { "name": "Mark Tandy" }, { "name": "Scott Martin" }, { "name": "Clint Glenn" }, { "name": "Tony Pauletto" }, { "name": "Zach Cregger" }, { "name": "Eugene Bell" }, { "name": "Trevor Moore" }, { "name": "Tucker Cleigh" }, { "name": "Raque" }, { "name": "Lynn Collins" }, { "name": "Sasha Grey" }, { "name": "Brian Koppelman" }, { "name": "David Levien" }, { "name": "Tony Leung Chiu Wai" }, { "name": "Wei Tang" }, { "name": "Chung Hua Tou" }, { "name": "Chih ying Chu" }, { "name": "Ying hsien Kao" }, { "name": "Johnson Yuen" }, { "name": "Yan Su" }, { "name": "Dustin Nguyễn" }, { "name": "Đỗ Hải Yến" }, { "name": "Tăng Thanh Hà" }, { "name": "Josh Holloway" }, { "name": "Anil Kapoor" }, { "name": "Lee Seong jae" }, { "name": "Yeon woo Hyeon jin" }, { "name": "Lucy May Barker" }, { "name": "Alexander Gould" }, { "name": "Erica Beck" }, { "name": "Shailene Woodley and Amara Miller" }, { "name": "Déborah Révy" }, { "name": "Helene Zimmer" }, { "name": "Gowan Didi" }, { "name": "Bruce Boxleitner" }, { "name": "James Frain" }, { "name": "Ewa Fröling" }, { "name": "Tatsuya Nakadaichi Nezu" }, { "name": "François Truffaut Marcel Moussy François Truffaut Marcel Moussy" }, { "name": "Sam Peckih" }, { "name": "Evey Hammond Hugo Weaving" }, { "name": "V Stephen Rea" }, { "name": "Inspector Finch Stephen Fry" }, { "name": "Jack McGee" }, { "name": "Armin Mueller Stahl" }, { "name": "Oliver Reed" }, { "name": "Richard Harris" }, { "name": "Derek Jacobi" }, { "name": "David Schofield" }, { "name": "John Shrapnel" }, { "name": "Tomas Arana" }, { "name": "Ralf Moeller" }, { "name": "Tom Berenger" }, { "name": "Matt LongNicolas Cage" }, { "name": "Tony Ghosthawk" }, { "name": "Hugh Sexton" }, { "name": "Marcus Jones" }, { "name": "Matt Norman" }, { "name": "Kenneth Ransom" }, { "name": "Philippe NoiretAntonella Attili" }, { "name": "Humphrey Bogart" }, { "name": "Walter Huston" }, { "name": "Tim Holt" }, { "name": "Anne Bancroft" }, { "name": "John Gielgud" }, { "name": "Wendy Hiller" }, { "name": "Bruno Ganz" }, { "name": "Alexandra Maria Lara" }, { "name": "Ulrich Matthes" }, { "name": "Toshirô Mifune" }, { "name": "Tatsuya Nakadai" }, { "name": "Yôko Tsukasa" }, { "name": "Isuzu Yamada" }, { "name": "Cathy Moriarty" }, { "name": "Frank Vincent" }, { "name": "Audrey Hepburn" }, { "name": "Eddie Albert" }, { "name": "Paul Newman" }, { "name": "George Kennedy" }, { "name": "Strother Martin" }, { "name": "Emmanuelle Seigner" }, { "name": "Marie Josée Croze" }, { "name": "Lamberto Maggiorani" }, { "name": "Enzo Staiola" }, { "name": "Lianella Carell" }, { "name": "Harvey Keitel" }, { "name": "Ryan O'Marisa Berenson" }, { "name": "Patrick Magee" }, { "name": "Jason Flemyng" }, { "name": "Nick Moran" }, { "name": "BreOded Fehr" }, { "name": "Patricia Velasquez" }, { "name": "Freddie Boath" }, { "name": "The Rock" }, { "name": "Adewal" }, { "name": "Charles Chaplin" }, { "name": "Charlton Heston" }, { "name": "John Cazale" }, { "name": "Ricardo Darín" }, { "name": "Soledad Villamil and Pablo Rago" }, { "name": "Robbie Sheehan" }, { "name": "Ulrich Thomsen" }, { "name": "Stephen Graham" }, { "name": "Javier Bardem" }, { "name": "Don Cheadle Sophie Okonedo Joaquin Phoenix Nick Nolte Jean Reno" }, { "name": "Xavier Dolan" }, { "name": "Tom Hulce" }, { "name": "Elizabeth Berridge" }, { "name": "Simon Callow" }, { "name": "Jeffrey Jones" }, { "name": "Mifune Toshirō" }, { "name": "Shimura Takashi" }, { "name": "Mori Masayuki" }, { "name": "Chiaki Minoru" }, { "name": "Robert Mitchum; Shelley Winters; Lillian Gish; Billy Chapin; Sally Jane Bruce" }, { "name": "Shosuke Tanihara" }, { "name": "Hikaru Yamamoto" }, { "name": "Mitsuki Oishi" }, { "name": "Saki Kagami" }, { "name": "Meagan Good" }, { "name": "Odette Yustman" }, { "name": "Suh Jung" }, { "name": "Shim Ji Ho" }, { "name": "Oh Yoon Hong" }, { "name": "Sun Ok Hyun" }, { "name": "Naomie HarriRick Yune" }, { "name": "Rain" }, { "name": "Martina Gedeck" }, { "name": "Ulrich Mühe" }, { "name": "Ulrich Tukur" }, { "name": "Thomas Thieme" }, { "name": "Hans Uwe Bauer" }, { "name": "Peter Sellers" }, { "name": "Sterling Hayden" }, { "name": "Slim Pickens" }, { "name": "Peter Bull" }, { "name": "Keenan Wynn" }, { "name": "James Earl Jones" }, { "name": "Audrey Tatou" }, { "name": "Mathieu Kassovitz" }, { "name": "Rufus" }, { "name": "Rovella Cravota" }, { "name": "Paulette Goddard" }, { "name": "Henry Bergman" }, { "name": "Tiny Sandford" }, { "name": "Kirk Douglas" }, { "name": "Ralph Meeker" }, { "name": "Shelley Duvall" }, { "name": "Scatman Crothers" }, { "name": "Danny Lloyd" }, { "name": "Fairuza Balk" }, { "name": "Minako Komukai" }, { "name": "Shôhei Hino and Mari Komatsuzaki" }, { "name": "Jodie Fosternthony Heald" }, { "name": "Annette Bening" }, { "name": "Thora Birch" }, { "name": "Anthony Perkins" }, { "name": "Vera Miles" }, { "name": "John Gavin" }, { "name": "Janet Leigh" }, { "name": "James Stewart" }, { "name": "Grace Kelly" }, { "name": "Robin Wright Penn" }, { "name": "Gary Sinise" }, { "name": "Jo In sung" }, { "name": "Ju Jin mo" }, { "name": "Song Ji hyo" }, { "name": "Shim Ji ho" }, { "name": "Billy Dee Williams" }, { "name": "Anthony Daniels" }, { "name": "Harrison FordPaul Freeman" }, { "name": "Ronald Lacey" }, { "name": "Takashi Shimura" }, { "name": "Keiko Tsushima" }, { "name": "Frank Oz" }, { "name": "Christopher Lee" }, { "name": "Ingrid Berman" }, { "name": "James StewartLionel Barrymore" }, { "name": "Henry Travers" }, { "name": "Alec Guinness" }, { "name": "Peter Cushing" }, { "name": "Alain Cuny" }, { "name": "Sylvia Kristel" }, { "name": "Marika Green" }, { "name": "Daniel Sarky" }, { "name": "Jake Lloyd" }, { "name": "Lorraine Bracco" }, { "name": "Nhập Đạt Hoa" }, { "name": "Tằng Chí Vĩ" }, { "name": "Vương Bách Kiệt" }, { "name": "BreLý Liên Kiệt" }, { "name": "Lương Lạc Thi" }, { "name": "AmaMarcia DeBonis" }, { "name": "Gael García Bernal" }, { "name": "Giordano Formenti" }, { "name": "Bruce Lee" }, { "name": "Lý Tử Long" }, { "name": "Matt DamonBrian CoxMarton Csokas" }, { "name": "Tom Gallop" }, { "name": "Christina Hendricks Cardellini and Matthew Gray Gubler" }, { "name": "Danny Boylen" }, { "name": "Matt DamonChris Cooper" }, { "name": "Judy Parfitt" }, { "name": "Gabriel Mann" }, { "name": "Jackie ChaBilly Ray Cyrus" }, { "name": "Ekin Cheng Yee Kin" }, { "name": "Charlene Choi Cheuk Yin" }, { "name": "Bernice Jan Liu" }, { "name": "Tang Kin Wan" }, { "name": "Ronald Cheng Chung Kei" }, { "name": "Trần Vỹ" }, { "name": "Rumi Hiiragi" }, { "name": "Miyu Irino" }, { "name": "Mari Natsuki" }, { "name": "Takashi Naitō" }, { "name": "Yasuko Sawaguchi" }, { "name": "Daveigh Chase" }, { "name": "Jason Marsden" }, { "name": "Suzanne Pleshette" }, { "name": "David Ogden Stiers" }, { "name": "Susan Egan" }, { "name": "Bob Bergen" }, { "name": "Tara Strong" }, { "name": "RowaJohn Malkovich and Natalie Imbruglia" }, { "name": "Ben Browder Tapping và Christopher Judge" }, { "name": "Katie Featherstonnd Mark Fredrichs" }, { "name": "Vương Lực Hoành" }, { "name": "Từ Đông Mai" }, { "name": "Cynthia Khan Lai Ching (Dương Lệ Thanh)" }, { "name": "Michael Wong Man Tak (Vương Mẫn Đức)" }, { "name": "Donnie Yen Chi Tan" }, { "name": "Yuen Yat Chor" }, { "name": "Liu Kai Chi (Liêu Khải Trí)" }, { "name": "Lisa Chiao Chiao (Tiêu Giao)" }, { "name": "Yuen Shun Yee" }, { "name": "Song Ji Hyo" }, { "name": "Shin Yi" }, { "name": "Choi Sung Kook" }, { "name": "Channing TatumAdam Sevani" }, { "name": "Edison Cheng" }, { "name": "Amber Tamblyn" }, { "name": "Sarah Michelle Gellar" }, { "name": "Arielle Kebbel" }, { "name": "Marques Houston" }, { "name": "Omari Grandberry" }, { "name": "Jarell Houston" }, { "name": "DeMario Thornton" }, { "name": "Dreux Frederic" }, { "name": "Jennifer Freeman" }, { "name": "Lil' Kim" }, { "name": "Okina Megumi" }, { "name": "Ito Misaki" }, { "name": "Uehara Misa" }, { "name": "Ichikawa Yui" }, { "name": "Mekhi Phifer" }, { "name": "Lil' Romeo" }, { "name": "Missy Elliott" }, { "name": "Channing TatumDamaine Radcliff" }, { "name": "Olivia Thirlby" }, { "name": "Max Minghella" }, { "name": "Tony D'Amario" }, { "name": "Sam Shepard" }, { "name": "Briana Evigan" }, { "name": "Robert Hoffman" }, { "name": "Cassie Ventura" }, { "name": "Adam G. Sevani" }, { "name": "Telisha Shaw" }, { "name": "Heath Ledger" }, { "name": "Ed Asner" }, { "name": "Christopher Plummer" }, { "name": "Steve CarellMargo Dana Gaier" }, { "name": "Edith Elsie Fisher" }, { "name": "Agnes" }, { "name": "Tonny Jaa" }, { "name": "Prachya Piew" }, { "name": "Pete Postlethwaite" }, { "name": "Arliss Howard" }, { "name": "Laura Dern" }, { "name": "Trương Phong Nghị" }, { "name": "Ted Dibiaseble Wanamakok" }, { "name": "Téa Leoni" }, { "name": "Seong HyuCho Dong Hyuk" }, { "name": "Lee Chang Yong" }, { "name": "Tae hyun Cha" }, { "name": "Seok hyeon Wang" }, { "name": "Đồng Đại Vỹ" }, { "name": "Hà Gia Kính" }, { "name": "Phan Sương Sương" }, { "name": "Osric Chau" }, { "name": "Daming Chen" }, { "name": "Li Gong" }, { "name": "Kim Jae Won" }, { "name": "JoaRichard Gere" }, { "name": "Nat Chan" }, { "name": "Sharla Cheung" }, { "name": "Sandra Ng" }, { "name": "Sandra" }, { "name": "Quách Phú Thành (vai Bộ Kinh Vân) Trịnh Y Kiện (vai Nhiếp Phong)" }, { "name": "Ngô Mẫn Đạt" }, { "name": "Ray Lui" }, { "name": "Charles Heung" }, { "name": "Cheung Man" }, { "name": "Tan Lap Man" }, { "name": "Dougray Scott" }, { "name": "Thandie Newton" }, { "name": "Norman Tsui" }, { "name": "Lin Wei" }, { "name": "Celina Jade and Kara Hui" }, { "name": "Thích Ngọc Võ" }, { "name": "Khương Văn" }, { "name": "Jung Woon Taek" }, { "name": "Kim Sang Jung" }, { "name": "Tyrese" }, { "name": "Paddy Considine Aidan Gillen" }, { "name": "Trần Hàm Dư" }, { "name": "Trần Tiểu Sinh" }, { "name": "Phùng Thiệu Phong và An Chí Kiệt" }, { "name": "Phùng Tổ Minh" }, { "name": "Ryan Merriman" }, { "name": "Kris Lemche" }, { "name": "Jeremy Renner và Paula Patton" }, { "name": "Kimberly Corman" }, { "name": "Thomas Burker" }, { "name": "Krista Allennten" }, { "name": "Damien Marzette" }, { "name": "Trula M. Marcus" }, { "name": "Zachery Ty Bryan" }, { "name": "Kerr Smith" }, { "name": "Henry FoLee J Cobb" }, { "name": "EG Marshall" }, { "name": "Jack Klugman" }, { "name": "Eric Stoltz" }, { "name": "Từ Hy Viên" }, { "name": "Ngô Bội Từ" }, { "name": "Lâm Hy Lôi" }, { "name": "Nicholas D'Agosto" }, { "name": "Emma Bell" }, { "name": "David Koechner" }, { "name": "Nikolaj coster waldau" }, { "name": "Julie r." }, { "name": "Lgaard" }, { "name": "Aksel hennie" }, { "name": "Louise Fletcher" }, { "name": "Bob Gunton" }, { "name": "William Sadler" }, { "name": "Gil Bellows" }, { "name": "James Babson" }, { "name": "Laura Baranik" }, { "name": "Geoff Bell" }, { "name": "Matthew Blood Smyth" }, { "name": "Brian Caspe" }, { "name": "John Comer" }, { "name": "Mackenzie Crook" }, { "name": "Christian Dunckley Clark" }, { "name": "Patrick Hurd Wood" }, { "name": "Rachel Hurd Wood" }, { "name": "Park Hae Il" }, { "name": "Ryoo Seung Yong" }, { "name": "Kim Moo Yeol" }, { "name": "Park Ki Woong" }, { "name": "Otani Ryohei" }, { "name": "Katy Perry" }, { "name": "Jonathan Winters" }, { "name": "DeaBlane Cypurda and Tenika Davis" }, { "name": "Lí Liên Kiệt" }, { "name": "Quế Luân Mĩ" }, { "name": "Hoàng Thánh Y" }, { "name": "Khương Vũ" }, { "name": "Quách Thiện Ni" }, { "name": "Michelle Rodriguez and Bridget Moynahan" }, { "name": "Viva BiaPeter Docker" }, { "name": "Katie Findlay" }, { "name": "Jennifer Dale" }, { "name": "Alex Ozerov" }, { "name": "Lý Manh Manh" }, { "name": "Tống Ninh" }, { "name": "Chu Sở Sở" }, { "name": "Tôn Y Hàm" }, { "name": "Patrick Warburton" }, { "name": "Virginia Madsen" }, { "name": "Olivia DeJonge" }, { "name": "Ed Oxenbould" }, { "name": "Aleks Mikic" }, { "name": "Orla Brady" }, { "name": "Charlie Murphy" }, { "name": "Michael McElhatton" }, { "name": "Patrick Huard" }, { "name": "Colm Feore" }, { "name": "Erik Knudsen" }, { "name": "Sarah Jeanne Labrosse" }, { "name": "Lucie Laurier" }, { "name": "Hỏa Tịnh Nam" }, { "name": "Phan Gia Tuấn" }, { "name": "Vương Uy" }, { "name": "Cameron Monaghan" }, { "name": "Sairi Itoh" }, { "name": "Âu Hào" }, { "name": "Âu Dương Na Na" }, { "name": "Trần Phi Vũ" }, { "name": "Âu Thành Hàng" }, { "name": "Trâu Nguyên Thanh" }, { "name": "Anthony Chau Sang Wong" }, { "name": "Pakho Chow" }, { "name": "Thượng Tư Kỳ" }, { "name": "Vinh Khuê" }, { "name": "Frank Whaley" }, { "name": "Tommy Wiseau" }, { "name": "Candy Clark" }, { "name": "Lý Thuần" }, { "name": "Vạn Tây" }, { "name": "April Billingsley" }, { "name": "Juan Gaspard" }, { "name": "Từ Lộ" }, { "name": "Bành Dục Sướng" }, { "name": "Lưu Vịnh Hi" }, { "name": "Lý Nặc" }, { "name": "Bill Skarsgård" }, { "name": "Suki Waterhouse" }, { "name": "Jayda Fink" }, { "name": "Catherine Tate" }, { "name": "Ethan Rouse" }, { "name": "Felipe Calero" }, { "name": "Juan Sebastián Calero" }, { "name": "Evan Rachel Wood" }, { "name": "Elijah Kelley" }, { "name": "Tằng Mộng Tuyết" }, { "name": "Thần Diệc Nho" }, { "name": "Freddie Thorp" }, { "name": "Mary" }, { "name": "Lưu Sở Điềm" }, { "name": "Tê Tê Lợi" }, { "name": "Kari Matchett" }, { "name": "Hồng Sĩ Nhã" }, { "name": "Ma Nguyệt" }, { "name": "Suzu Hirose" }, { "name": "Hirona Yamazaki" }, { "name": "Haruka Fukuhara" }, { "name": "Mackenyu" }, { "name": "Miu Tomita" }, { "name": "Ayami Nakajo" }, { "name": "Anna Faris" }, { "name": "Martin Shaw" }, { "name": "Ben Turner" }, { "name": "Châu Tử Long" }, { "name": "Hà Văn Huy" }, { "name": "Taishi Nakagawa" }, { "name": "Yuzo Asahara" }, { "name": "Ye Sung" }, { "name": "Elisabeth Röhm" }, { "name": "Sherilyn Fenn" }, { "name": "Tô Đồng" }, { "name": "Bì Dật Gia" }, { "name": "Lý Lạc" }, { "name": "Viktor Andrienko" }, { "name": "Kate Bristol" }, { "name": "Allen Enlow" }, { "name": "Dominic Sherwood" }, { "name": "Drea de Matteo" }, { "name": "Cary Elwes" }, { "name": "Alex Rocco" }, { "name": "Jill Hennessy" }, { "name": "Andrew Caldwell" }, { "name": "Jennifer Tilly" }, { "name": "Brad Dourif" }, { "name": "Christine Elise" }, { "name": "Fiona Dourif" }, { "name": "Alex Vincent" }, { "name": "Summer H. Howell" }, { "name": "Song Joong Ki" }, { "name": "Finn Wolfhard" }, { "name": "Nicholas Hamilton" }, { "name": "Margie Rasri Balenciaga" }, { "name": "Toni Rakkaen" }, { "name": "Maythinee Booranasiri" }, { "name": "Bawriboon Chanreuang" }, { "name": "Rodrigo De la Serna" }, { "name": "Ben Cura" }, { "name": "Claire Holt" }, { "name": "Phoeung Kompheak" }, { "name": "Sareum Srey Moch" }, { "name": "Sveng Socheata" }, { "name": "Amy Louise Wilson" }, { "name": "Bérénice Marlohe" }, { "name": "Mew Nittha Jirayungyurn" }, { "name": "Naphat Siangsomboon" }, { "name": "Ter Chantavit" }, { "name": "Abbey Lee" }, { "name": "Ronnie Alonte" }, { "name": "Janella Salvador" }, { "name": "Elmo Magalona" }, { "name": "Sofia Andres" }, { "name": "Diego Loyzaga" }, { "name": "Charlotte Rampling" }, { "name": "Harriet Walter" }, { "name": "Seung heon Song" }, { "name": "David Roberts" }, { "name": "Joanne Samuel" }, { "name": "Rowland Holmes" }, { "name": "Jordan Dulieu" }, { "name": "Teo Briones" }, { "name": "Eric Lange" }, { "name": "Kelsey Asbille" }, { "name": "Martin Donovan" }, { "name": "Jordana Largy" }, { "name": "Matt Ellis" }, { "name": "Evelyne Brochu" }, { "name": "Henry Ian Cusick" }, { "name": "Holliday Grainger" }, { "name": "David Hasselhoff" }, { "name": "Rhys Darby" }, { "name": "Rebecca Olejniczak" }, { "name": "Melanie Brown" }, { "name": "James Landry Hébert" }, { "name": "Scout Taylor Compton" }, { "name": "Mark Boone Junior" }, { "name": "Russell Geoffrey Banks" }, { "name": "Elana Krausz" }, { "name": "Trương Thiên Ái" }, { "name": "Matthew Mercer" }, { "name": "Eiza González" }, { "name": "Hồng Thiên Minh" }, { "name": "Tự Vạn Xuyến" }, { "name": "Allison Tolman" }, { "name": "Bobby Moynihan" }, { "name": "Hannah Simone" }, { "name": "Taran Killam" }, { "name": "Marwan Kenzari" }, { "name": "Tomiwa Edun" }, { "name": "Sae Okazaki" }, { "name": "Colton Haynes" }, { "name": "Jillian Bell" }, { "name": "Dana Gourrier" }, { "name": "Sage Correa" }, { "name": "Malea Rose" }, { "name": "Saxon Sharbino" }, { "name": "Bonnie Morgan" }, { "name": "Alexis G. Zall" }, { "name": "Brandon Soo Hoo" }, { "name": "Jordan Essoe" }, { "name": "Burlee Vang" }, { "name": "Aya Hirano" }, { "name": "Mai Nakahara" }, { "name": "Yûichi Nakamura" }, { "name": "Wataru Hatano" }, { "name": "Yui Horie" }, { "name": "Lưu Đào" }, { "name": "Qianyuan Wang" }, { "name": "Thomas Middleditch" }, { "name": "Christopher Abbott" }, { "name": "Elodie Yung" }, { "name": "Nathan Brewer" }, { "name": "Jay Hieron" }, { "name": "Florence Pugh" }, { "name": "Cosmo Jarvis" }, { "name": "Paul Hilton" }, { "name": "Seo Hyun Ahn" }, { "name": "SEO KYEONG SOOK" }, { "name": "PARK CHUL SOO" }, { "name": "Terry Notary" }, { "name": "Karin Konoval" }, { "name": "Amiah Miller" }, { "name": "Lakeith Stanfield" }, { "name": "Ville Virtanen" }, { "name": "Antti Holma" }, { "name": "Mikko Neuvonen" }, { "name": "Malin Buska" }, { "name": "Outi Mäenpää" }, { "name": "Cung Le" }, { "name": "Chad Lindberg" }, { "name": "Liam McIntyre" }, { "name": "Trịnh Sảng" }, { "name": "Tanaka Mayumi" }, { "name": "Yamaguchi Kappei" }, { "name": "Hiroaki Hirata" }, { "name": "Shūichi Ikeda" }, { "name": "DeRay Davis" }, { "name": "CLAUDIA KIM" }, { "name": "Sulli" }, { "name": "Kang Han Na" }, { "name": "Choi Ri" }, { "name": "Son Sook" }, { "name": "Seo Mi Ji" }, { "name": "Sung Joon" }, { "name": "Kim Seo Hyung" }, { "name": "Đàm Húc" }, { "name": "Chiêm Mục" }, { "name": "Radha Mitchell" }, { "name": "David Mazouz" }, { "name": "Riley Wang" }, { "name": "Artemis" }, { "name": "Ramón Rodríguez" }, { "name": "Celina Jade" }, { "name": "Oleg Prudius" }, { "name": "Trương Gia Nghê" }, { "name": "Thái Nghi Đạt" }, { "name": "Lý Tịnh Dương" }, { "name": "Mã Linh" }, { "name": "Jacob Latimore" }, { "name": "Dulé Hill" }, { "name": "Storm Reid" }, { "name": "Trey Parker" }, { "name": "Jessica McNamee" }, { "name": "Tracy Morgan" }, { "name": "Diệp Chân" }, { "name": "Trần Trạch Vũ" }, { "name": "Hồ Dục Hâm" }, { "name": "Trịch Dật Tường" }, { "name": "Tần Vũ Ca" }, { "name": "Hàn Nghệ Hinh" }, { "name": "SAM JAEGER" }, { "name": "Kyra Zagorsky" }, { "name": "Ty Shelton" }, { "name": "Maeve Dermody" }, { "name": "Sam Reid" }, { "name": "Peter Cullen" }, { "name": "Patton Oswalt" }, { "name": "Dương Tử San" }, { "name": "Hứa Vỹ Ninh" }, { "name": "Cynthia Gibb" }, { "name": "Alexis Lariviere" }, { "name": "Lim Jung Eun" }, { "name": "Jung Han Yong" }, { "name": "Jung Ae Ri" }, { "name": "Ngô Đông Ni" }, { "name": "Vương Dã" }, { "name": "Diane Farr" }, { "name": "Nora Jane Noone" }, { "name": "Gwyneth Paltrow" }, { "name": "Jacob Batalon" }, { "name": "Gillian Chung" }, { "name": "Jiong He" }, { "name": "Elena Anaya" }, { "name": "Saïd Taghmaoui" }, { "name": "Jace Norman" }, { "name": "Ngô Trác Hy" }, { "name": "Alan Arkin" }, { "name": "Matt Dillon" }, { "name": "Ann Margret" }, { "name": "Gina Gershon" }, { "name": "Nicky Whelan" }, { "name": "Darin De Paul" }, { "name": "Erin Cahill" }, { "name": "Orion Acaba" }, { "name": "Mario Espitia" }, { "name": "Valene Kane" }, { "name": "Marcela Mar" }, { "name": "Sha Xuezhou" }, { "name": "Zheng Shuang" }, { "name": "Robbie Daymond" }, { "name": "Ryan Bartley" }, { "name": "Yu Aoi" }, { "name": "Shido Nakamura" }, { "name": "Takashi Sorimachi" }, { "name": "Trương Ngọc Ánh" }, { "name": "Quốc Khánh" }, { "name": "Nguyễn Thu Trang" }, { "name": "Trần Thiên Tú" }, { "name": "Đỗ Thu Hằng" }, { "name": "Garance Marillier" }, { "name": "Ella Rumpf" }, { "name": "Rabah Nait Oufella" }, { "name": "Adah Sharma" }, { "name": "Esha Gupta" }, { "name": "Takahiro Sakurai" }, { "name": "Mahesh Jadu" }, { "name": "Jai Courtney" }, { "name": "Loïs van Wijk" }, { "name": "Karin Leclercq" }, { "name": "Anton Lesser" }, { "name": "Suet Lam" }, { "name": "Jing Li" }, { "name": "Yunjin Cao" }, { "name": "Blayne Weaver" }, { "name": "Lyndie Greenwood" }, { "name": "Billy Crudup" }, { "name": "Elijah Wolf" }, { "name": "Logan Gillies" }, { "name": "Ben Skelton" }, { "name": "Aiden Haggarty" }, { "name": "Lu Xin" }, { "name": "Daniel Boileau" }, { "name": "Martin Cummins" }, { "name": "Phan Bân Long" }, { "name": "Mr Bean" }, { "name": "Diệp Tiểu Khai" }, { "name": "Chu Lệ Lam" }, { "name": "Trương Nghệ Tuyên" }, { "name": "Tề Lân" }, { "name": "Tim Griffin" }, { "name": "Eion Bailey" }, { "name": "Bethany Joy Lenz" }, { "name": "Barkhad Abdi" }, { "name": "Hoàng Hiên" }, { "name": "Hiroaki Iwanaga" }, { "name": "Takahiro Fujiwara" }, { "name": "Christian Gaul" }, { "name": "Nicolette Krebitz" }, { "name": "Tilman Dobler" }, { "name": "Maria Conchita Alonso" }, { "name": "John Magaro" }, { "name": "Carrie Keranen" }, { "name": "Denise Richards" }, { "name": "Jonathan Lipnicki" }, { "name": "Gaspard Schlatter" }, { "name": "Sixtine Murat" }, { "name": "Paulin Jaccoud" }, { "name": "Michel Vuillermoz" }, { "name": "Raul Ribera" }, { "name": "Max Riemelt" }, { "name": "Cem Tuncay" }, { "name": "Lucie Aron" }, { "name": "Matthias Habich" }, { "name": "Marine Vacth" }, { "name": "Géraldine Pailhas" }, { "name": "Frédéric Pierrot" }, { "name": "Fantin Ravat" }, { "name": "Martin Compston" }, { "name": "Amariah Olson" }, { "name": "Jonathan Rhys Meyers" }, { "name": "Obin Olson" }, { "name": "Liu Naping" }, { "name": "Nelson Li" }, { "name": "Waise Lee" }, { "name": "Halston Sage" }, { "name": "Elena Kampouris" }, { "name": "Tony Shalhoub" }, { "name": "Shannon Elizabeth" }, { "name": "Embeth Davidtz" }, { "name": "Jung Man sik" }, { "name": "Hyo jin Kong" }, { "name": "Ji won Uhm" }, { "name": "Joon Go" }, { "name": "Giả Nãi Lượng" }, { "name": "Lý Tiểu Lộ" }, { "name": "Vương Tấn" }, { "name": "Patrick Baladi" }, { "name": "Ben Batt" }, { "name": "Charlotte Beaumont" }, { "name": "Nacho Vigalondo" }, { "name": "Larry Fessenden" }, { "name": "James Le Gros" }, { "name": "John Speredakos" }, { "name": "Phùng Văn Quyên" }, { "name": "Eddie Izzard" }, { "name": "Mckenna Grace" }, { "name": "Lindsay Duncan" }, { "name": "Spencer Grammer" }, { "name": "Louane Emera" }, { "name": "Vincent Lacoste" }, { "name": "Ramzy Bedia" }, { "name": "Trịnh Tháp Cương" }, { "name": "Lại Nhã Nghiên" }, { "name": "Hoàng Viễn" }, { "name": "Teri Reeves" }, { "name": "Sherri Eakin" }, { "name": "Aiden Longworth" }, { "name": "Grace Van Patten" }, { "name": "Michal Vondel" }, { "name": "Alina Babak" }, { "name": "Valeriya Dmitrieva" }, { "name": "Jeong Seo yoon" }, { "name": "Jeon Hyeon soo" }, { "name": "Julian Barratt" }, { "name": "Marko Zaror" }, { "name": "Juju Chan" }, { "name": "Kirsty Averton" }, { "name": "Nicky Henson" }, { "name": "Emma Davies" }, { "name": "Glen Powell" }, { "name": "Kanta Sato" }, { "name": "Reina Visa" }, { "name": "Takanori Jinnai" }, { "name": "Hidehiko Ishizuka" }, { "name": "Hikari Ishida" }, { "name": "Shimon Okura" }, { "name": "Nonoka Yamaguchi" }, { "name": "Atsuki Tomori" }, { "name": "Trình Dục" }, { "name": "Nguyên Thu" }, { "name": "Vyacheslav Chepurchenko" }, { "name": "Aleksandra Rebenok" }, { "name": "Aaron Poole" }, { "name": "Kenneth Welsh" }, { "name": "Đường Yên" }, { "name": "Bạch Băng" }, { "name": "Jung Yong Hwa" }, { "name": "Cát Ưu" }, { "name": "Will Dalton" }, { "name": "Phượng Tiểu Nhạc" }, { "name": "Lưu Bội Kỳ" }, { "name": "Ha Joo Hee" }, { "name": "Hong Seok Cheon" }, { "name": "Sonakshi Sinha" }, { "name": "Tahir Raj Bhasin" }, { "name": "Kim Hong Fa" }, { "name": "Callan McAuliffe" }, { "name": "Lý Xán Sâm" }, { "name": "Trần Dĩ Mạn" }, { "name": "Jordan Alex" }, { "name": "James Tyler Brown" }, { "name": "Martin Byrne" }, { "name": "Jared Colson" }, { "name": "Yoon So Yi" }, { "name": "Kim Hyuk" }, { "name": "Nick Swardson" }, { "name": "Jennifer Hudson" }, { "name": "Colin Quinn" }, { "name": "Jackie Sandler" }, { "name": "David Denman" }, { "name": "Naomi Scott" }, { "name": "Bradley Whitford" }, { "name": "Allison Williams" }, { "name": "Ken'ichi Matsuyama" }, { "name": "Kitu Gidwani" }, { "name": "Jasmeet Singh Bhatia" }, { "name": "Allegra Masters" }, { "name": "Aimee McKay" }, { "name": "Ashley Key" }, { "name": "Autumn Federici" }, { "name": "Bill Lewis" }, { "name": "TaoTsuchiya" }, { "name": "RyumaTakeuchi" }, { "name": "ShonoHayama" }, { "name": "MiraiShida" }, { "name": "ArataHorii" }, { "name": "FujikoKojima" }, { "name": "AiriMatsui" }, { "name": "YunaTaira" }, { "name": "YukiYamada" }, { "name": "JuriUeno" }, { "name": "EriIkeda" }, { "name": "Cổ Lực Na Trát" }, { "name": "Clara" }, { "name": "Yan Ni" }, { "name": "Joe Cheng" }, { "name": "Kyoko Yoshine" }, { "name": "Teruyuki Kagawa" }, { "name": "Kenichi Endo" }, { "name": "Hitori Gekidan" }, { "name": "Toshiaki Karasawa" }, { "name": "Montage Live Action" }, { "name": "Hổ Hổ" }, { "name": "Mã Mộng Kiều" }, { "name": "Nhan Đan" }, { "name": "Oguri Shun" }, { "name": "Nomura Shuhei" }, { "name": "Ono Machiko" }, { "name": "Maruyama Tomomi" }, { "name": "Nick Offerman" }, { "name": "John Carroll Lynch" }, { "name": "Peter O'toole" }, { "name": "Armand Assante" }, { "name": "Olivier Gruner" }, { "name": "Samantha Barks" }, { "name": "Maddie Ziegler" }, { "name": "Gemma Chan" }, { "name": "Wren Walker" }, { "name": "Caz Odin Darko" }, { "name": "Madison J. Loos" }, { "name": "Dan Green" }, { "name": "Rina Endo" }, { "name": "Kenjirô Tsuda" }, { "name": "Peyton Meyer" }, { "name": "Crystal the Monkey" }, { "name": "Cửu Khổng" }, { "name": "Hoàng Nhất Lâm" }, { "name": "Don Johnson" }, { "name": "Anna Hutchison" }, { "name": "Talitha Bateman" }, { "name": "Lữ Vũ" }, { "name": "Hàn Giai Lam" }, { "name": "Gong Hyo Jin" }, { "name": "Sohee" }, { "name": "Charles Shaughnessy" }, { "name": "Damon Dayoub" }, { "name": "Adrian Schiller" }, { "name": "Lục Tiểu Linh Đồng" }, { "name": "Vikramjeet Virk" }, { "name": "Tatiana Maslany" }, { "name": "Tom Cullen" }, { "name": "Henry Czerny" }, { "name": "Diana Bentley" }, { "name": "Mark Rendall" }, { "name": "Aaron Costa Ganis" }, { "name": "Monica West" }, { "name": "Christopher Redman" }, { "name": "Jenny Sterlin" }, { "name": "Michael Benyaer" }, { "name": "Paulino Partida" }, { "name": "Ji Chang Wook" }, { "name": "Ahn Jae Hong" }, { "name": "Dương Dương" }, { "name": "Vernon Wells" }, { "name": "Matthew Willig" }, { "name": "Costas Mandylor" }, { "name": "Peter DaCunha" }, { "name": "Natalie Brown" }, { "name": "Jonathan Watton" }, { "name": "Peyton Kennedy" }, { "name": "Amy Johnston" }, { "name": "Muriel Hofmann" }, { "name": "Jenny Wu" }, { "name": "Kristina Klebe" }, { "name": "Elissa Dowling" }, { "name": "Erika Kaar" }, { "name": "Saurabh Shukla" }, { "name": "Anna Dawson" }, { "name": "Michaela Longden" }, { "name": "Daniel Thrace" }, { "name": "Gregg Sulkin" }, { "name": "Garrett Clayton" }, { "name": "Bella Dayne" }, { "name": "Jack Brett Anderson" }, { "name": "Dominic Monaghan" }, { "name": "Jennette McCurdy" }, { "name": "Ksenia Solo" }, { "name": "Da'Vone McDonald" }, { "name": "Nathan Parsons" }, { "name": "IRINA STARSHENBAUM" }, { "name": "ALEXANDER PETROV" }, { "name": "RINAL MUKHAMETOV" }, { "name": "OLEG MENSHIKOV" }, { "name": "COLONEL LEBEDEV" }, { "name": "SERGEY GARMASH" }, { "name": "VICE PRIME MINISTER" }, { "name": "NIKITA KUKUSHKIN" }, { "name": "Will Townsend" }, { "name": "Melissa Sturm" }, { "name": "Trevor Devall" }, { "name": "Lee Jun Ki" }, { "name": "Caitlin Gerard" }, { "name": "Yoona" }, { "name": "Kim Joo hyuk" }, { "name": "Yoo Hae jin" }, { "name": "Haylie Duff" }, { "name": "Norm MacDonald" }, { "name": "Gang Dong Won" }, { "name": "Shin Eun Soo" }, { "name": "Ivan Yankovskiy" }, { "name": "Leonid Yarmolnik" }, { "name": "Lyubov Aksyonova" }, { "name": "Stephen Merchant" }, { "name": "Dafne Keen" }, { "name": "Elizabeth Rodriguez" }, { "name": "Lois Robbins" }, { "name": "Vương Thủy Lâm" }, { "name": "Clint Dyer" }, { "name": "Kasumi Arimura" }, { "name": "Kaoru Kobayashi" }, { "name": "Asuka Kudo" }, { "name": "Ken Mitsuishi" }, { "name": "Melanie Lynskey" }, { "name": "Chris Doubek" }, { "name": "Marilyn Faith Hickey" }, { "name": "Jared Roylance" }, { "name": "Rachael Taylor" }, { "name": "Robbie Amell" }, { "name": "Amy Ryan" }, { "name": "Rob Lowe" }, { "name": "Miranda Richardson" }, { "name": "Rory Kinnear" }, { "name": "Shariff Earp" }, { "name": "Duan Sanderson" }, { "name": "Angelique Rivera" }, { "name": "Cameron Jebo" }, { "name": "Kenny Johnson" }, { "name": "Chris Sullivan" }, { "name": "Guillermo Romero" }, { "name": "José Mota" }, { "name": "Kaiwi Lyman Mersereau" }, { "name": "Leo Staar" }, { "name": "Shaun Dingwall" }, { "name": "Brian Austin Green" }, { "name": "Sunny Pawar" }, { "name": "Abhishek Bharate" }, { "name": "Priyanka Bose" }, { "name": "Tannishtha Chatterjee" }, { "name": "Vương Khải" }, { "name": "Garik Kharlamov" }, { "name": "Ivan Okhlobystin" }, { "name": "Chun Jung Myung" }, { "name": "Yoon So Hee" }, { "name": "Chen Bolin" }, { "name": "Song Min Jung" }, { "name": "Jung Hae Kyun" }, { "name": "Matt Ryan" }, { "name": "Ray Chase" }, { "name": "Roger Cross" }, { "name": "Chris Jai Alex" }, { "name": "Saori Hayami" }, { "name": "Vương Tuấn Khải" }, { "name": "Lộc Hàm" }, { "name": "Jung Jin Young" }, { "name": "Maksim Abrosimov" }, { "name": "Sergey Agafonov" }, { "name": "Maksim Belborodov" }, { "name": "Aishwarya Rai Bachchan" }, { "name": "Aimee Teegarden" }, { "name": "Laura Wiggins" }, { "name": "Johnny Galecki" }, { "name": "Lê Diệu Tường" }, { "name": "Trương Triệu Huy" }, { "name": "Byun Yo Han" }, { "name": "Kim Hyun Seok" }, { "name": "Kim Yoo Jung" }, { "name": "Melissa Benoist" }, { "name": "Rachel Brosnahan" }, { "name": "Dư An An" }, { "name": "Thái Hạn Ức" }, { "name": "Zhi Hui Chen" }, { "name": "Hao Ran Sun" }, { "name": "Mou Li" }, { "name": "Joo Ji Hoon" }, { "name": "Lim Ji Yeon" }, { "name": "Cheo Ho Jin" }, { "name": "Alan Tudyk" }, { "name": "Jerry Lewis" }, { "name": "Kara Tointon" }, { "name": "Elizabeth Morris" }, { "name": "Uriah Shelton" }, { "name": "Dakota Daulby" }, { "name": "Byron Gibson" }, { "name": "Joel Adrian" }, { "name": "Svitlana Zavialova" }, { "name": "Henry Mah" }, { "name": "Lydia Hull" }, { "name": "Jo Jung seok" }, { "name": "Jade Tailor" }, { "name": "Tommy Flanagan" }, { "name": "Glenn Close" }, { "name": "Dominique Tipper" }, { "name": "Hoài Linh" }, { "name": "Hoài Lâm" }, { "name": "Việt Hương" }, { "name": "Ngô Kiến Huy" }, { "name": "Ái Phương" }, { "name": "Yu Dương" }, { "name": "Khả Như" }, { "name": "Cát Tường" }, { "name": "ca sĩ Lâm Chấn Khang" }, { "name": "nghệ sĩ hải ngoại Bảo Chung" }, { "name": "nghệ sĩ hài Hứa Minh Đạt" }, { "name": "nghệ sĩ hài Tấn Bo Tấn Bin" }, { "name": "diễn viên điện ảnh / ca sĩ Kim Jun See" }, { "name": "diễn viên điện ảnh Kiều Tuấn" }, { "name": "nghệ sĩ Hoa Trần" }, { "name": "Duy Khánh Zhou Zhou" }, { "name": "Trần Xuân Tiến" }, { "name": "Dũng Minhon" }, { "name": "Ngọc Tâm Anh" }, { "name": "Nguyên Đạt" }, { "name": "Oris Phạm" }, { "name": "Sally Trần" }, { "name": "bé Bích Châu" }, { "name": "Nguyễn Tiến" }, { "name": "Kim Nguyễn" }, { "name": "cùng tập thể anh em Khang Mã Địa" }, { "name": "Manu Bennett" }, { "name": "Mạch Trường Thanh" }, { "name": "Sầm Lệ Hương" }, { "name": "Dương Tư Kỳ" }, { "name": "Trịnh Hân Nghi" }, { "name": "Aaron Behr" }, { "name": "John Colella" }, { "name": "Jun Cao" }, { "name": "Mei Ying Wang" }, { "name": "Tôn kiên" }, { "name": "Yousef Erakat" }, { "name": "Lele Pons" }, { "name": "Justin Dobies" }, { "name": "Anton Vinogradov" }, { "name": "Vadim Bochanov" }, { "name": "Sergey Mardar" }, { "name": "Griffin Gluck" }, { "name": "Thomas Barbusca" }, { "name": "Tạ Đình Đình" }, { "name": "Vương Phi" }, { "name": "Zijian Dong" }, { "name": "Cherry Ngan" }, { "name": "Stacy Martin" }, { "name": "Violleta Getmanskaya" }, { "name": "Vadim Tsallati" }, { "name": "Andrey Chadov" }, { "name": "Rila Fukushima" }, { "name": "Michael Pitt" }, { "name": "Parkinson" }, { "name": "George Takei" }, { "name": "Lulu Wilson" }, { "name": "Lisa Kudrow" }, { "name": "Edgar Ramírez" }, { "name": "Usher Raymond" }, { "name": "Osamu Adachi" }, { "name": "Hirofumi Arai" }, { "name": "Narushi Ikeda" }, { "name": "Steve Lantz" }, { "name": "Lisa Eichhorn" }, { "name": "Angela Dixon" }, { "name": "Nigel Whitmey" }, { "name": "Gil Birmingham" }, { "name": "Thái Thiếu Phân" }, { "name": "Robert LaSardo" }, { "name": "Sara Fabel" }, { "name": "Jordan James Smith" }, { "name": "Arak Amornsupasiri" }, { "name": "Pachrapa Chaichua" }, { "name": "Auli’i Cravalho" }, { "name": "Alondra Hidalgo" }, { "name": "Alistair Abell" }, { "name": "Iris Apatow" }, { "name": "Sugar Lyn Beard" }, { "name": "Ian James Corlett" }, { "name": "Michael Daingerfield" }, { "name": "Brian Dobson" }, { "name": "Evan Jonigkeit" }, { "name": "Richard Kind" }, { "name": "David Zayas" }, { "name": "Stef Dawson" }, { "name": "Ashlie Atkinson" }, { "name": "Amy Landecker" }, { "name": "Virginia Gardner" }, { "name": "Tracy Letts" }, { "name": "Penelope Wilton" }, { "name": "Ruby Barnhill" }];

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
/* eslint-disable prettier/prettier */
exports.default = [{ name: 'Afghanistan', code: 'AF' }, { name: 'Åland Islands', code: 'AX' }, { name: 'Albania', code: 'AL' }, { name: 'Algeria', code: 'DZ' }, { name: 'American Samoa', code: 'AS' }, { name: 'AndorrA', code: 'AD' }, { name: 'Angola', code: 'AO' }, { name: 'Anguilla', code: 'AI' }, { name: 'Antarctica', code: 'AQ' }, { name: 'Antigua and Barbuda', code: 'AG' }, { name: 'Argentina', code: 'AR' }, { name: 'Armenia', code: 'AM' }, { name: 'Aruba', code: 'AW' }, { name: 'Australia', code: 'AU' }, { name: 'Austria', code: 'AT' }, { name: 'Azerbaijan', code: 'AZ' }, { name: 'Bahamas', code: 'BS' }, { name: 'Bahrain', code: 'BH' }, { name: 'Bangladesh', code: 'BD' }, { name: 'Barbados', code: 'BB' }, { name: 'Belarus', code: 'BY' }, { name: 'Belgium', code: 'BE' }, { name: 'Belize', code: 'BZ' }, { name: 'Benin', code: 'BJ' }, { name: 'Bermuda', code: 'BM' }, { name: 'Bhutan', code: 'BT' }, { name: 'Bolivia', code: 'BO' }, { name: 'Bosnia and Herzegovina', code: 'BA' }, { name: 'Botswana', code: 'BW' }, { name: 'Bouvet Island', code: 'BV' }, { name: 'Brazil', code: 'BR' }, { name: 'British Indian Ocean Territory', code: 'IO' }, { name: 'Brunei Darussalam', code: 'BN' }, { name: 'Bulgaria', code: 'BG' }, { name: 'Burkina Faso', code: 'BF' }, { name: 'Burundi', code: 'BI' }, { name: 'Cambodia', code: 'KH' }, { name: 'Cameroon', code: 'CM' }, { name: 'Canada', code: 'CA' }, { name: 'Cape Verde', code: 'CV' }, { name: 'Cayman Islands', code: 'KY' }, { name: 'Central African Republic', code: 'CF' }, { name: 'Chad', code: 'TD' }, { name: 'Chile', code: 'CL' }, { name: 'China', code: 'CN' }, { name: 'Christmas Island', code: 'CX' }, { name: 'Cocos (Keeling) Islands', code: 'CC' }, { name: 'Colombia', code: 'CO' }, { name: 'Comoros', code: 'KM' }, { name: 'Congo', code: 'CG' }, { name: 'Congo, The Democratic Republic of the', code: 'CD' }, { name: 'Cook Islands', code: 'CK' }, { name: 'Costa Rica', code: 'CR' }, { name: 'Cote D\'Ivoire', code: 'CI' }, { name: 'Croatia', code: 'HR' }, { name: 'Cuba', code: 'CU' }, { name: 'Cyprus', code: 'CY' }, { name: 'Czech Republic', code: 'CZ' }, { name: 'Denmark', code: 'DK' }, { name: 'Djibouti', code: 'DJ' }, { name: 'Dominica', code: 'DM' }, { name: 'Dominican Republic', code: 'DO' }, { name: 'Ecuador', code: 'EC' }, { name: 'Egypt', code: 'EG' }, { name: 'El Salvador', code: 'SV' }, { name: 'Equatorial Guinea', code: 'GQ' }, { name: 'Eritrea', code: 'ER' }, { name: 'Estonia', code: 'EE' }, { name: 'Ethiopia', code: 'ET' }, { name: 'Falkland Islands (Malvinas)', code: 'FK' }, { name: 'Faroe Islands', code: 'FO' }, { name: 'Fiji', code: 'FJ' }, { name: 'Finland', code: 'FI' }, { name: 'France', code: 'FR' }, { name: 'French Guiana', code: 'GF' }, { name: 'French Polynesia', code: 'PF' }, { name: 'French Southern Territories', code: 'TF' }, { name: 'Gabon', code: 'GA' }, { name: 'Gambia', code: 'GM' }, { name: 'Georgia', code: 'GE' }, { name: 'Germany', code: 'DE' }, { name: 'Ghana', code: 'GH' }, { name: 'Gibraltar', code: 'GI' }, { name: 'Greece', code: 'GR' }, { name: 'Greenland', code: 'GL' }, { name: 'Grenada', code: 'GD' }, { name: 'Guadeloupe', code: 'GP' }, { name: 'Guam', code: 'GU' }, { name: 'Guatemala', code: 'GT' }, { name: 'Guernsey', code: 'GG' }, { name: 'Guinea', code: 'GN' }, { name: 'Guinea-Bissau', code: 'GW' }, { name: 'Guyana', code: 'GY' }, { name: 'Haiti', code: 'HT' }, { name: 'Heard Island and Mcdonald Islands', code: 'HM' }, { name: 'Holy See (Vatican City State)', code: 'VA' }, { name: 'Honduras', code: 'HN' }, { name: 'Hong Kong', code: 'HK' }, { name: 'Hungary', code: 'HU' }, { name: 'Iceland', code: 'IS' }, { name: 'India', code: 'IN' }, { name: 'Indonesia', code: 'ID' }, { name: 'Iran, Islamic Republic Of', code: 'IR' }, { name: 'Iraq', code: 'IQ' }, { name: 'Ireland', code: 'IE' }, { name: 'Isle of Man', code: 'IM' }, { name: 'Israel', code: 'IL' }, { name: 'Italy', code: 'IT' }, { name: 'Jamaica', code: 'JM' }, { name: 'Japan', code: 'JP' }, { name: 'Jersey', code: 'JE' }, { name: 'Jordan', code: 'JO' }, { name: 'Kazakhstan', code: 'KZ' }, { name: 'Kenya', code: 'KE' }, { name: 'Kiribati', code: 'KI' }, { name: 'Korea, Democratic People\'S Republic of', code: 'KP' }, { name: 'Korea, Republic of', code: 'KR' }, { name: 'Kuwait', code: 'KW' }, { name: 'Kyrgyzstan', code: 'KG' }, { name: 'Lao People\'S Democratic Republic', code: 'LA' }, { name: 'Latvia', code: 'LV' }, { name: 'Lebanon', code: 'LB' }, { name: 'Lesotho', code: 'LS' }, { name: 'Liberia', code: 'LR' }, { name: 'Libyan Arab Jamahiriya', code: 'LY' }, { name: 'Liechtenstein', code: 'LI' }, { name: 'Lithuania', code: 'LT' }, { name: 'Luxembourg', code: 'LU' }, { name: 'Macao', code: 'MO' }, { name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK' }, { name: 'Madagascar', code: 'MG' }, { name: 'Malawi', code: 'MW' }, { name: 'Malaysia', code: 'MY' }, { name: 'Maldives', code: 'MV' }, { name: 'Mali', code: 'ML' }, { name: 'Malta', code: 'MT' }, { name: 'Marshall Islands', code: 'MH' }, { name: 'Martinique', code: 'MQ' }, { name: 'Mauritania', code: 'MR' }, { name: 'Mauritius', code: 'MU' }, { name: 'Mayotte', code: 'YT' }, { name: 'Mexico', code: 'MX' }, { name: 'Micronesia, Federated States of', code: 'FM' }, { name: 'Moldova, Republic of', code: 'MD' }, { name: 'Monaco', code: 'MC' }, { name: 'Mongolia', code: 'MN' }, { name: 'Montserrat', code: 'MS' }, { name: 'Morocco', code: 'MA' }, { name: 'Mozambique', code: 'MZ' }, { name: 'Myanmar', code: 'MM' }, { name: 'Namibia', code: 'NA' }, { name: 'Nauru', code: 'NR' }, { name: 'Nepal', code: 'NP' }, { name: 'Netherlands', code: 'NL' }, { name: 'Netherlands Antilles', code: 'AN' }, { name: 'New Caledonia', code: 'NC' }, { name: 'New Zealand', code: 'NZ' }, { name: 'Nicaragua', code: 'NI' }, { name: 'Niger', code: 'NE' }, { name: 'Nigeria', code: 'NG' }, { name: 'Niue', code: 'NU' }, { name: 'Norfolk Island', code: 'NF' }, { name: 'Northern Mariana Islands', code: 'MP' }, { name: 'Norway', code: 'NO' }, { name: 'Oman', code: 'OM' }, { name: 'Pakistan', code: 'PK' }, { name: 'Palau', code: 'PW' }, { name: 'Palestinian Territory, Occupied', code: 'PS' }, { name: 'Panama', code: 'PA' }, { name: 'Papua New Guinea', code: 'PG' }, { name: 'Paraguay', code: 'PY' }, { name: 'Peru', code: 'PE' }, { name: 'Philippines', code: 'PH' }, { name: 'Pitcairn', code: 'PN' }, { name: 'Poland', code: 'PL' }, { name: 'Portugal', code: 'PT' }, { name: 'Puerto Rico', code: 'PR' }, { name: 'Qatar', code: 'QA' }, { name: 'Reunion', code: 'RE' }, { name: 'Romania', code: 'RO' }, { name: 'Russian Federation', code: 'RU' }, { name: 'RWANDA', code: 'RW' }, { name: 'Saint Helena', code: 'SH' }, { name: 'Saint Kitts and Nevis', code: 'KN' }, { name: 'Saint Lucia', code: 'LC' }, { name: 'Saint Pierre and Miquelon', code: 'PM' }, { name: 'Saint Vincent and the Grenadines', code: 'VC' }, { name: 'Samoa', code: 'WS' }, { name: 'San Marino', code: 'SM' }, { name: 'Sao Tome and Principe', code: 'ST' }, { name: 'Saudi Arabia', code: 'SA' }, { name: 'Senegal', code: 'SN' }, { name: 'Serbia and Montenegro', code: 'CS' }, { name: 'Seychelles', code: 'SC' }, { name: 'Sierra Leone', code: 'SL' }, { name: 'Singapore', code: 'SG' }, { name: 'Slovakia', code: 'SK' }, { name: 'Slovenia', code: 'SI' }, { name: 'Solomon Islands', code: 'SB' }, { name: 'Somalia', code: 'SO' }, { name: 'South Africa', code: 'ZA' }, { name: 'South Georgia and the South Sandwich Islands', code: 'GS' }, { name: 'Spain', code: 'ES' }, { name: 'Sri Lanka', code: 'LK' }, { name: 'Sudan', code: 'SD' }, { name: 'Suriname', code: 'SR' }, { name: 'Svalbard and Jan Mayen', code: 'SJ' }, { name: 'Swaziland', code: 'SZ' }, { name: 'Sweden', code: 'SE' }, { name: 'Switzerland', code: 'CH' }, { name: 'Syrian Arab Republic', code: 'SY' }, { name: 'Taiwan, Province of China', code: 'TW' }, { name: 'Tajikistan', code: 'TJ' }, { name: 'Tanzania, United Republic of', code: 'TZ' }, { name: 'Thailand', code: 'TH' }, { name: 'Timor-Leste', code: 'TL' }, { name: 'Togo', code: 'TG' }, { name: 'Tokelau', code: 'TK' }, { name: 'Tonga', code: 'TO' }, { name: 'Trinidad and Tobago', code: 'TT' }, { name: 'Tunisia', code: 'TN' }, { name: 'Turkey', code: 'TR' }, { name: 'Turkmenistan', code: 'TM' }, { name: 'Turks and Caicos Islands', code: 'TC' }, { name: 'Tuvalu', code: 'TV' }, { name: 'Uganda', code: 'UG' }, { name: 'Ukraine', code: 'UA' }, { name: 'United Arab Emirates', code: 'AE' }, { name: 'United Kingdom', code: 'GB' }, { name: 'United States', code: 'US' }, { name: 'United States Minor Outlying Islands', code: 'UM' }, { name: 'Uruguay', code: 'UY' }, { name: 'Uzbekistan', code: 'UZ' }, { name: 'Vanuatu', code: 'VU' }, { name: 'Venezuela', code: 'VE' }, { name: 'Viet Nam', code: 'VN' }, { name: 'Virgin Islands, British', code: 'VG' }, { name: 'Virgin Islands, U.S.', code: 'VI' }, { name: 'Wallis and Futuna', code: 'WF' }, { name: 'Western Sahara', code: 'EH' }, { name: 'Yemen', code: 'YE' }, { name: 'Zambia', code: 'ZM' }, { name: 'Zimbabwe', code: 'ZW' }];

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = [{ name: 'Hài Hước' }, { name: 'Viễn Tưởng' }, { name: 'Hành Động' }, { name: 'Phiêu Lưu' }, { name: 'Tâm Lý' }, { name: 'Hình Sự' }, { name: 'Kinh Dị' }, { name: 'Điện Ảnh' }, { name: 'Âm Nhạc' }, { name: 'Khoa học Tài liệu' }, { name: 'Võ Thuật' }, { name: 'Chiến Tranh' }, { name: 'Hoạt Hình' }, { name: 'Thần Thoại' }, { name: 'Cổ Trang' }, { name: 'Thuyết Minh' }, { name: 'Thiếu nhi' }, { name: 'Hài Việt' }, { name: 'TV Show' }];

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getUser = getUser;

var _constants = __webpack_require__(11);

var _constants2 = _interopRequireDefault(_constants);

var _jsonwebtoken = __webpack_require__(39);

var _jsonwebtoken2 = _interopRequireDefault(_jsonwebtoken);

var _userModel = __webpack_require__(24);

var _userModel2 = _interopRequireDefault(_userModel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

async function getUser(req, res, next) {
	req.user = {};
	await _jsonwebtoken2.default.verify(extractToken(req.headers.authorization), _constants2.default.JWT_SECRET, async function (err, decoded) {
		if (err) {
			req.user = {
				role: 'viewer'
			};
			next();
		} else {
			const user = await _userModel2.default.findById(decoded._id);
			req.user = user;
			req.token = req.headers.authorization;
			next();
		}
	});
}

function extractToken(authorization = '') {
	return authorization.split(' ')[1];
}

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.parseForm = parseForm;

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _helper = __webpack_require__(1);

var _multiparty = __webpack_require__(25);

var _multiparty2 = _interopRequireDefault(_multiparty);

var _constants = __webpack_require__(11);

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

async function parseForm(req, res, next) {
	try {
		var form = new _multiparty2.default.Form();

		form.parse(req, function () {});

		form.on('file', function (name, file) {
			req.file = file;
			req.params.size = file.size;
			next();
		});
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}
// import Movie from '../modules/movie/movieModel'

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getActorsStats = getActorsStats;
exports.getActors = getActors;
exports.getActorById = getActorById;
exports.createActor = createActor;
exports.updateActor = updateActor;
exports.deleteActor = deleteActor;

var _actorModel = __webpack_require__(53);

var _actorModel2 = _interopRequireDefault(_actorModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _actorUtil = __webpack_require__(55);

var util = _interopRequireWildcard(_actorUtil);

var _actors = __webpack_require__(47);

var _actors2 = _interopRequireDefault(_actors);

var _helper = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


/**
 * @group actors - Operations about actors
 *
 */

exports.default = async function initActors(req, res, next) {
	try {
		await _actorModel2.default.deleteMany();
		await _actorModel2.default.insertMany(_actors2.default);
		res.actors = _actors2.default;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
};

async function getActorsStats(req, res, next) {
	try {
		res.actorsStats = {
			count: await _actorModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getActors(req, res, next) {
	try {
		let _ref = await _actorModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.actors = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getActorById(req, res, next) {
	try {
		res.actor = await _actorModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createActor(req, res, next) {
	try {
		res.actor = await _actorModel2.default.create(req.body);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateActor(req, res, next) {
	try {
		let actor = await _actorModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			actor[key] = req.body[key];
		});
		await actor.save();
		res.actor = actor;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteActor(req, res, next) {
	try {
		const actor = await _actorModel2.default.findById(req.params.id);

		await actor.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

var _actorValidation = __webpack_require__(28);

var myValid = _interopRequireWildcard(_actorValidation);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;

let actorSchema = new _mongoose.Schema({
	name: {
		type: String,
		required: [true, 'Actor name is required!'],
		trim: true
	},
	slug: {
		type: String,
		required: [true, 'Actor slug is required!'],
		trim: true
	},
	url: {
		type: String,
		required: [true, 'Actor url is required!'],
		trim: true,
		unique: true
	},
	info: {
		type: String,
		trim: true
	},
	avatarUrl: {
		type: String,
		default: 'https://png.pngtree.com/svg/20161212/f93e57629c.svg',
		trim: true
	}
}, {
	timestamps: true
});

actorSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
actorSchema.plugin(_mongoosePaginate2.default);
actorSchema.plugin(_mongooseAutopopulate2.default);
actorSchema.plugin(pluginService.logPost, { schemaName: 'Actor' });
actorSchema.plugin(pluginService.setSlugUrl, { schemaName: 'Actor' });

exports.default = _mongoose2.default.model('Actor', actorSchema);

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _actorController = __webpack_require__(52);

var actorController = _interopRequireWildcard(_actorController);

var _actorValidation = __webpack_require__(28);

var _actorValidation2 = _interopRequireDefault(_actorValidation);

var _authService = __webpack_require__(15);

var authService = _interopRequireWildcard(_authService);

var _paramService = __webpack_require__(16);

var paramService = _interopRequireWildcard(_paramService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = new _express.Router();

/**
 * GET /items/stats => getActorsStats
 * GET /items => getActors
 * GET /items/:id => getActorById
 * POST /items/ => createActor
 * PATCH/PUT /items/:id => updateActor
 * DELETE /items/:id => deleteActor
 */

// More router
/* eslint-disable no-unused-vars */
router.get('/init', authService.authJwt, actorController.default, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.actors
	});
});

// Default Rest router
router.get('/stats', (0, _expressValidation2.default)(_actorValidation2.default.stats), actorController.getActorsStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.actorsStats
	});
}).get('/', paramService.parseParam, (0, _expressValidation2.default)(_actorValidation2.default.index), actorController.getActors, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.actors,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_actorValidation2.default.show), actorController.getActorById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.actor
	});
}).post('/', (0, _expressValidation2.default)(_actorValidation2.default.create), actorController.createActor, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.actor
	});
}).put('/:id', (0, _expressValidation2.default)(_actorValidation2.default.update), actorController.updateActor, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.actor
	});
}).delete('/:id', (0, _expressValidation2.default)(_actorValidation2.default.delete), actorController.deleteActor, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.initCountries = initCountries;
exports.getCountriesStats = getCountriesStats;
exports.getCountries = getCountries;
exports.getCountryById = getCountryById;
exports.createCountry = createCountry;
exports.updateCountry = updateCountry;
exports.deleteCountry = deleteCountry;

var _countryModel = __webpack_require__(57);

var _countryModel2 = _interopRequireDefault(_countryModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _countryUtil = __webpack_require__(59);

var util = _interopRequireWildcard(_countryUtil);

var _countries = __webpack_require__(48);

var _countries2 = _interopRequireDefault(_countries);

var _helper = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


/**
 * @group countries - Operations about countries
 *
 */

async function initCountries(req, res, next) {
	try {
		await _countryModel2.default.deleteMany();
		await _countryModel2.default.insertMany(_countries2.default);
		res.countries = _countries2.default;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getCountriesStats(req, res, next) {
	try {
		res.countriesStats = {
			count: await _countryModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getCountries(req, res, next) {
	try {
		let _ref = await _countryModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.countries = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getCountryById(req, res, next) {
	try {
		res.country = await _countryModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createCountry(req, res, next) {
	try {
		res.country = await _countryModel2.default.create(req.body);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateCountry(req, res, next) {
	try {
		let country = await _countryModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			country[key] = req.body[key];
		});
		await country.save();
		res.country = country;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteCountry(req, res, next) {
	try {
		const country = await _countryModel2.default.findById(req.params.id);

		await country.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _slugify = __webpack_require__(14);

var _slugify2 = _interopRequireDefault(_slugify);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

var _regex = __webpack_require__(27);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;


let countrySchema = new _mongoose.Schema({
	name: {
		type: String,
		required: [true, 'Country name is required!'],
		trim: true
	},
	code: {
		type: String,
		required: [true, 'Country code is required!'],
		uppercase: true,
		minlength: [2, 'Country code must be two characters!'],
		maxlength: [2, 'Country code must be two characters!'],
		unique: true,
		trim: true
	},
	url: {
		type: String,
		required: [true, 'Country url is required!'],
		trim: true,
		unique: true
	}
});

countrySchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
countrySchema.plugin(_mongoosePaginate2.default);
countrySchema.plugin(_mongooseAutopopulate2.default);
countrySchema.plugin(pluginService.logPost, { schemaName: 'Country' });
countrySchema.plugin(pluginService.setSlugUrl, { schemaName: 'Country' });

exports.default = _mongoose2.default.model('Country', countrySchema);

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _countryController = __webpack_require__(56);

var countryController = _interopRequireWildcard(_countryController);

var _countryValidation = __webpack_require__(60);

var _countryValidation2 = _interopRequireDefault(_countryValidation);

var _authService = __webpack_require__(15);

var authService = _interopRequireWildcard(_authService);

var _paramService = __webpack_require__(16);

var paramService = _interopRequireWildcard(_paramService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = new _express.Router();

/**
 * GET /items/stats => getCountriesStats
 * GET /items => getCountries
 * GET /items/:id => getCountryById
 * POST /items/ => createCountry
 * PATCH/PUT /items/:id => updateCountry
 * DELETE /items/:id => deleteCountry
 */

// More router
/* eslint-disable no-unused-vars */
router.get('/init', authService.authJwt, countryController.initCountries, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.countries
	});
});

// Default Rest router
router.get('/stats', (0, _expressValidation2.default)(_countryValidation2.default.stats), countryController.getCountriesStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.countriesStats
	});
}).get('/', paramService.parseParam, (0, _expressValidation2.default)(_countryValidation2.default.index), countryController.getCountries, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.countries,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_countryValidation2.default.show), countryController.getCountryById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.country
	});
}).post('/', authService.authJwt, (0, _expressValidation2.default)(_countryValidation2.default.create), countryController.createCountry, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.country
	});
}).put('/:id', (0, _expressValidation2.default)(_countryValidation2.default.update), countryController.updateCountry, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.country
	});
}).delete('/:id', (0, _expressValidation2.default)(_countryValidation2.default.delete), countryController.deleteCountry, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.initDirectors = initDirectors;
exports.getDirectorsStats = getDirectorsStats;
exports.getDirectors = getDirectors;
exports.getDirectorById = getDirectorById;
exports.createDirector = createDirector;
exports.updateDirector = updateDirector;
exports.deleteDirector = deleteDirector;

var _directorModel = __webpack_require__(62);

var _directorModel2 = _interopRequireDefault(_directorModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _directorUtil = __webpack_require__(64);

var util = _interopRequireWildcard(_directorUtil);

var _directors = __webpack_require__(116);

var _directors2 = _interopRequireDefault(_directors);

var _helper = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


/**
 * @group directors - Operations about directors
 *
 */

async function initDirectors(req, res, next) {
	try {
		await _directorModel2.default.deleteMany();
		await _directorModel2.default.insertMany(_directors2.default);
		res.directors = _directors2.default;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getDirectorsStats(req, res, next) {
	try {
		res.directorsStats = {
			count: await _directorModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getDirectors(req, res, next) {
	try {
		let _ref = await _directorModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.directors = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getDirectorById(req, res, next) {
	try {
		res.director = await _directorModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createDirector(req, res, next) {
	try {
		res.director = await _directorModel2.default.create(req.body);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateDirector(req, res, next) {
	try {
		let director = await _directorModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			director[key] = req.body[key];
		});
		await director.save();
		res.director = director;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteDirector(req, res, next) {
	try {
		const director = await _directorModel2.default.findById(req.params.id);

		await director.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _slugify = __webpack_require__(14);

var _slugify2 = _interopRequireDefault(_slugify);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;


let directorSchema = new _mongoose.Schema({
	name: {
		type: String,
		required: [true, 'Director name is required!'],
		trim: true
	},
	slug: {
		type: String,
		required: [true, 'Director slug is required!'],
		trim: true
	},
	url: {
		type: String,
		required: [true, 'Director url is required!'],
		trim: true,
		unique: true
	},
	info: {
		type: String,
		trim: true
	},
	avatarUrl: {
		type: String,
		default: 'https://png.pngtree.com/svg/20161212/f93e57629c.svg',
		trim: true
	}
}, {
	timestamps: true
});

directorSchema.statics = {};

directorSchema.pre('save', function (next) {
	return next();
});

directorSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
directorSchema.plugin(_mongoosePaginate2.default);
directorSchema.plugin(_mongooseAutopopulate2.default);
directorSchema.plugin(pluginService.logPost, { schemaName: 'Director' });
directorSchema.plugin(pluginService.setSlugUrl, { schemaName: 'Director' });

exports.default = _mongoose2.default.model('Director', directorSchema);

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _directorController = __webpack_require__(61);

var directorController = _interopRequireWildcard(_directorController);

var _directorValidation = __webpack_require__(65);

var _directorValidation2 = _interopRequireDefault(_directorValidation);

var _authService = __webpack_require__(15);

var authService = _interopRequireWildcard(_authService);

var _paramService = __webpack_require__(16);

var paramService = _interopRequireWildcard(_paramService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = new _express.Router();

/**
 * GET /items/stats => getDirectorsStats
 * GET /items => getDirectors
 * GET /items/:id => getDirectorById
 * POST /items/ => createDirector
 * PATCH/PUT /items/:id => updateDirector
 * DELETE /items/:id => deleteDirector
 */

// More router
/* eslint-disable no-unused-vars */
router.get('/init', authService.authJwt, directorController.initDirectors, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.directors
	});
});

// Default Rest router
router.get('/stats', (0, _expressValidation2.default)(_directorValidation2.default.stats), directorController.getDirectorsStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.directorsStats
	});
}).get('/', paramService.parseParam, (0, _expressValidation2.default)(_directorValidation2.default.index), directorController.getDirectors, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.directors,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_directorValidation2.default.show), directorController.getDirectorById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.director
	});
}).post('/', authService.authJwt, (0, _expressValidation2.default)(_directorValidation2.default.create), directorController.createDirector, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.director
	});
}).put('/:id', (0, _expressValidation2.default)(_directorValidation2.default.update), directorController.updateDirector, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.director
	});
}).delete('/:id', (0, _expressValidation2.default)(_directorValidation2.default.delete), directorController.deleteDirector, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getFollowing = getFollowing;
exports.getFollowers = getFollowers;
exports.getFollowMoviesStats = getFollowMoviesStats;
exports.getFollowMovies = getFollowMovies;
exports.getFollowMovieById = getFollowMovieById;
exports.createFollowMovie = createFollowMovie;
exports.updateFollowMovie = updateFollowMovie;
exports.deleteFollowMovie = deleteFollowMovie;

var _followMovieModel = __webpack_require__(20);

var _followMovieModel2 = _interopRequireDefault(_followMovieModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _followMovieUtil = __webpack_require__(68);

var util = _interopRequireWildcard(_followMovieUtil);

var _helper = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


/**
 * @group followMovies - Operations about followMovies
 *
 */

async function getFollowing(req, res, next) {
	try {
		let _ref = await _followMovieModel2.default.paginate({ user: req.params.id }, Object.assign({}, req.parsedParams, {
			populate: [{
				path: 'movie',
				model: 'Movie'
			}]
		})),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.following = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getFollowers(req, res, next) {
	try {
		let _ref2 = await _followMovieModel2.default.paginate({ movie: req.params.id }, Object.assign({}, req.parsedParams, {
			populate: [{
				path: 'user',
				model: 'User'
			}]
		})),
		    { docs } = _ref2,
		    pagination = _objectWithoutProperties(_ref2, ['docs']);

		res.followers = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getFollowMoviesStats(req, res, next) {
	try {
		res.followMoviesStats = {
			count: await _followMovieModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getFollowMovies(req, res, next) {
	try {
		let _ref3 = await _followMovieModel2.default.paginate({}, Object.assign({}, req.parsedParams, {
			populate: [{
				path: 'user',
				model: 'User'
			}, {
				path: 'movie',
				model: 'Movie'
			}]
		})),
		    { docs } = _ref3,
		    pagination = _objectWithoutProperties(_ref3, ['docs']);

		res.followMovies = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getFollowMovieById(req, res, next) {
	try {
		res.followMovie = await _followMovieModel2.default.findById(req.params.id).populate([{
			path: 'user',
			model: 'User'
		}, {
			path: 'movie',
			model: 'Movie'
		}]);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createFollowMovie(req, res, next) {
	try {
		res.followMovie = await _followMovieModel2.default.create(Object.assign({}, req.body, {
			user: req.user
		}));

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateFollowMovie(req, res, next) {
	try {
		let followMovie = await _followMovieModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			followMovie[key] = req.body[key];
		});
		await followMovie.save();
		res.followMovie = followMovie;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteFollowMovie(req, res, next) {
	try {
		const followMovie = await _followMovieModel2.default.findById(req.params.id);

		await followMovie.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _followMovieController = __webpack_require__(66);

var followMovieController = _interopRequireWildcard(_followMovieController);

var _followMovieValidation = __webpack_require__(69);

var _followMovieValidation2 = _interopRequireDefault(_followMovieValidation);

var _paramMiddleware = __webpack_require__(13);

var paramMiddleware = _interopRequireWildcard(_paramMiddleware);

var _roleMiddleware = __webpack_require__(12);

var _existMiddleware = __webpack_require__(18);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const router = new _express.Router();

/**
 * GET /items/stats => getFollowMoviesStats
 * GET /items => getFollowMovies
 * GET /items/:id => getFollowMovieById
 * POST /items/ => createFollowMovie
 * PATCH/PUT /items/:id => updateFollowMovie
 * DELETE /items/:id => deleteFollowMovie
 */

// More router
router.get('/following/:id', (0, _expressValidation2.default)(_followMovieValidation2.default.following), paramMiddleware.parseParamList, followMovieController.getFollowing, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.following,
		pagination: res.pagination
	});
}).get('/followers/:id', (0, _expressValidation2.default)(_followMovieValidation2.default.followers), paramMiddleware.parseParamList, followMovieController.getFollowers, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.followers,
		pagination: res.pagination
	});
});

// Default Rest router
router.get('/stats', (0, _expressValidation2.default)(_followMovieValidation2.default.stats), followMovieController.getFollowMoviesStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		followMoviesStats: res.followMoviesStats
	});
}).get('/', (0, _roleMiddleware.accessControl)('readAny', 'followMovie'), paramMiddleware.parseParamList, (0, _expressValidation2.default)(_followMovieValidation2.default.index), followMovieController.getFollowMovies, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		followMovies: res.followMovies,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_followMovieValidation2.default.show), followMovieController.getFollowMovieById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.followMovie
	});
}).post('/', (0, _roleMiddleware.accessControl)('createOwn', 'followMovie'), (0, _expressValidation2.default)(_followMovieValidation2.default.create), _existMiddleware.existFollowMovie, followMovieController.createFollowMovie, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.followMovie
	});
})
// .put(
// 	'/:id',
// 	accessControl('updateOwn', 'followMovie'),
// 	validate(followMovieValidation.update),
// 	followMovieController.updateFollowMovie,
// 	function(req, res, next) {
// 		return res.status(HTTPStatus.OK).json({
// 			data: res.followMovie
// 		})
// 	}
// )
.delete('/:id', (0, _roleMiddleware.accessControl)('deleteOwn', 'followMovie'), (0, _expressValidation2.default)(_followMovieValidation2.default.delete), followMovieController.deleteFollowMovie, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	following: {
		params: {
			id: _joi2.default.string().required()
		}
	},
	followers: {
		params: {
			id: _joi2.default.string().required()
		}
	},
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getFollowing = getFollowing;
exports.getFollowers = getFollowers;
exports.getFollowUsersStats = getFollowUsersStats;
exports.getFollowUsers = getFollowUsers;
exports.getFollowUserById = getFollowUserById;
exports.createFollowUser = createFollowUser;
exports.updateFollowUser = updateFollowUser;
exports.deleteFollowUser = deleteFollowUser;

var _followUserModel = __webpack_require__(29);

var _followUserModel2 = _interopRequireDefault(_followUserModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _followUserUtil = __webpack_require__(72);

var util = _interopRequireWildcard(_followUserUtil);

var _helper = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


/**
 * @group followUsers - Operations about followUsers
 *
 */

async function getFollowing(req, res, next) {
	try {
		let _ref = await _followUserModel2.default.paginate({ user: req.params.id }, Object.assign({}, req.parsedParams, {
			populate: [{
				path: 'follow',
				model: 'User'
			}]
		})),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.following = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getFollowers(req, res, next) {
	try {
		let _ref2 = await _followUserModel2.default.paginate({ follow: req.params.id }, Object.assign({}, req.parsedParams, {
			populate: [{
				path: 'user',
				model: 'User'
			}]
		})),
		    { docs } = _ref2,
		    pagination = _objectWithoutProperties(_ref2, ['docs']);

		res.followers = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getFollowUsersStats(req, res, next) {
	try {
		res.followUsersStats = {
			count: await _followUserModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getFollowUsers(req, res, next) {
	try {
		let _ref3 = await _followUserModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref3,
		    pagination = _objectWithoutProperties(_ref3, ['docs']);

		res.followUsers = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getFollowUserById(req, res, next) {
	try {
		res.followUser = await _followUserModel2.default.findById(req.params.id).populate([{
			path: 'user',
			model: 'User'
		}, {
			path: 'follow',
			model: 'User'
		}]);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createFollowUser(req, res, next) {
	try {
		res.followUser = await _followUserModel2.default.create(Object.assign({}, req.body, {
			user: req.user
		}));

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateFollowUser(req, res, next) {
	try {
		let followUser = await _followUserModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			followUser[key] = req.body[key];
		});
		await followUser.save();
		res.followUser = followUser;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteFollowUser(req, res, next) {
	try {
		const followUser = await _followUserModel2.default.findById(req.params.id);

		await followUser.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _followUserController = __webpack_require__(70);

var followUserController = _interopRequireWildcard(_followUserController);

var _followUserValidation = __webpack_require__(73);

var _followUserValidation2 = _interopRequireDefault(_followUserValidation);

var _paramMiddleware = __webpack_require__(13);

var paramMiddleware = _interopRequireWildcard(_paramMiddleware);

var _roleMiddleware = __webpack_require__(12);

var _existMiddleware = __webpack_require__(18);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const router = new _express.Router();

/**
 * GET /items/stats => getFollowUsersStats
 * GET /items => getFollowUsers
 * GET /items/:id => getFollowUserById
 * POST /items/ => createFollowUser
 * PATCH/PUT /items/:id => updateFollowUser
 * DELETE /items/:id => deleteFollowUser
 */

// More router
router.get('/following/:id', (0, _expressValidation2.default)(_followUserValidation2.default.following), paramMiddleware.parseParamList, followUserController.getFollowing, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.following,
		pagination: res.pagination
	});
}).get('/followers/:id', (0, _expressValidation2.default)(_followUserValidation2.default.followers), paramMiddleware.parseParamList, followUserController.getFollowers, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.followers,
		pagination: res.pagination
	});
});

// Default Rest router
router.get('/stats', (0, _expressValidation2.default)(_followUserValidation2.default.stats), followUserController.getFollowUsersStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		followUsersStats: res.followUsersStats
	});
}).get('/', (0, _roleMiddleware.accessControl)('readAny', 'movie'), paramMiddleware.parseParamList, (0, _expressValidation2.default)(_followUserValidation2.default.index), followUserController.getFollowUsers, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		followUsers: res.followUsers,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_followUserValidation2.default.show), followUserController.getFollowUserById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.followUser
	});
}).post('/', (0, _roleMiddleware.accessControl)('createOwn', 'movie'), (0, _expressValidation2.default)(_followUserValidation2.default.create), _existMiddleware.existFollowUser, followUserController.createFollowUser, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.followUser
	});
})
// .put(
// 	'/:id',
// 	accessControl('updateOwn', 'movie'),
// 	validate(followUserValidation.update),
// 	followUserController.updateFollowUser,
// 	function(req, res, next) {
// 		return res.status(HTTPStatus.OK).json({
// 			data: res.followUser
// 		})
// 	}
// )
.delete('/:id', (0, _roleMiddleware.accessControl)('deleteOwn', 'movie'), (0, _expressValidation2.default)(_followUserValidation2.default.delete), followUserController.deleteFollowUser, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	following: {
		params: {
			id: _joi2.default.string().required()
		}
	},
	followers: {
		params: {
			id: _joi2.default.string().required()
		}
	},
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.initGenres = initGenres;
exports.getGenresStats = getGenresStats;
exports.getGenres = getGenres;
exports.getGenreById = getGenreById;
exports.createGenre = createGenre;
exports.updateGenre = updateGenre;
exports.deleteGenre = deleteGenre;

var _genreModel = __webpack_require__(75);

var _genreModel2 = _interopRequireDefault(_genreModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _genreUtil = __webpack_require__(77);

var util = _interopRequireWildcard(_genreUtil);

var _helper = __webpack_require__(1);

var _genres = __webpack_require__(49);

var _genres2 = _interopRequireDefault(_genres);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


/**
 * @group genres - Operations about genres
 *
 */

async function initGenres(req, res, next) {
	try {
		await _genreModel2.default.deleteMany();
		await _genreModel2.default.insertMany(_genres2.default);
		res.genres = _genres2.default;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getGenresStats(req, res, next) {
	try {
		res.genresStats = {
			count: await _genreModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getGenres(req, res, next) {
	try {
		let _ref = await _genreModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.genres = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getGenreById(req, res, next) {
	try {
		res.genre = await _genreModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createGenre(req, res, next) {
	try {
		res.genre = await _genreModel2.default.create(req.body);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateGenre(req, res, next) {
	try {
		let genre = await _genreModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			genre[key] = req.body[key];
		});
		await genre.save();
		res.genre = genre;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteGenre(req, res, next) {
	try {
		const genre = await _genreModel2.default.findById(req.params.id);

		await genre.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

var _genreValidation = __webpack_require__(30);

var myValid = _interopRequireWildcard(_genreValidation);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;


let genreSchema = new _mongoose.Schema({
	name: {
		type: String,
		required: [true, 'Genre name is required!'],
		trim: true,
		unique: true
	},
	slug: {
		type: String,
		required: [true, 'Genre slug is required!'],
		trim: true,
		unique: true
	},
	url: {
		type: String,
		required: [true, 'Genre url is required!'],
		trim: true,
		unique: true
	}
}, {
	timestamps: true
});

genreSchema.pre('save', function (next) {
	return next();
});

genreSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
genreSchema.plugin(_mongoosePaginate2.default);
genreSchema.plugin(_mongooseAutopopulate2.default);
genreSchema.plugin(pluginService.logPost, { schemaName: 'Genre' });
genreSchema.plugin(pluginService.setSlugUrl, { schemaName: 'Genre' });

exports.default = _mongoose2.default.model('Genre', genreSchema);

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _genreController = __webpack_require__(74);

var genreController = _interopRequireWildcard(_genreController);

var _genreValidation = __webpack_require__(30);

var _genreValidation2 = _interopRequireDefault(_genreValidation);

var _authService = __webpack_require__(15);

var authService = _interopRequireWildcard(_authService);

var _paramMiddleware = __webpack_require__(13);

var paramMiddleware = _interopRequireWildcard(_paramMiddleware);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = new _express.Router();

/**
 * GET /items/stats => getGenresStats
 * GET /items => getGenres
 * GET /items/:id => getGenreById
 * POST /items/ => createGenre
 * PATCH/PUT /items/:id => updateGenre
 * DELETE /items/:id => deleteGenre
 */

// More router
/* eslint-disable no-unused-vars */
router.get('/init', authService.authJwt, genreController.initGenres, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.genres
	});
});

// Default Rest router
router.get('/stats', (0, _expressValidation2.default)(_genreValidation2.default.stats), genreController.getGenresStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		genresStats: res.genresStats
	});
}).get('/', (0, _expressValidation2.default)(_genreValidation2.default.index), paramMiddleware.parseParamList, genreController.getGenres, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.genres,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_genreValidation2.default.show), genreController.getGenreById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.genre
	});
}).post('/', (0, _expressValidation2.default)(_genreValidation2.default.create), genreController.createGenre, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.genre
	});
}).put('/:id', (0, _expressValidation2.default)(_genreValidation2.default.update), genreController.updateGenre, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.genre
	});
}).delete('/:id', (0, _expressValidation2.default)(_genreValidation2.default.delete), genreController.deleteGenre, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.searchGroups = searchGroups;
exports.getSuggestGroups = getSuggestGroups;
exports.getGroupsStats = getGroupsStats;
exports.getGroups = getGroups;
exports.getGroupById = getGroupById;
exports.createGroup = createGroup;
exports.updateGroup = updateGroup;
exports.deleteGroup = deleteGroup;

var _groupModel = __webpack_require__(31);

var _groupModel2 = _interopRequireDefault(_groupModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _groupUtil = __webpack_require__(80);

var util = _interopRequireWildcard(_groupUtil);

var _helper = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


/**
 * @group groups - Operations about groups
 *
 */

async function searchGroups(req, res, next) {
	try {
		_groupModel2.default.find({ $text: { $search: 'p' } }).limit(10).exec(function (err, docs) {
			if (err) {
				res.json(err);
			} else {
				res.groups = docs;
				next();
			}
		});
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getSuggestGroups(req, res, next) {
	try {
		let suggests = [{ membersCount: 'desc' }, { requestsCount: 'desc' }, { createdAt: 'desc' }];
		let sort = suggests[Math.floor(Math.random() * suggests.length)];

		let _ref = await _groupModel2.default.paginate({}, Object.assign({}, req.parsedParams, { sort: sort })),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.groups = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getGroupsStats(req, res, next) {
	try {
		res.groupsStats = {
			count: await _groupModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getGroups(req, res, next) {
	try {
		let _ref2 = await _groupModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref2,
		    pagination = _objectWithoutProperties(_ref2, ['docs']);

		res.groups = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getGroupById(req, res, next) {
	try {
		res.group = await _groupModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createGroup(req, res, next) {
	try {
		res.group = await _groupModel2.default.create(Object.assign({}, req.body, {
			creator: req.user
		}));

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateGroup(req, res, next) {
	try {
		let group = await _groupModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			group[key] = req.body[key];
		});
		await group.save();
		res.group = group;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteGroup(req, res, next) {
	try {
		const group = await _groupModel2.default.findById(req.params.id);

		await group.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _groupController = __webpack_require__(78);

var groupController = _interopRequireWildcard(_groupController);

var _groupValidation = __webpack_require__(81);

var _groupValidation2 = _interopRequireDefault(_groupValidation);

var _paramMiddleware = __webpack_require__(13);

var paramMiddleware = _interopRequireWildcard(_paramMiddleware);

var _ownMiddleware = __webpack_require__(19);

var ownMiddleware = _interopRequireWildcard(_ownMiddleware);

var _roleMiddleware = __webpack_require__(12);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const router = new _express.Router();

/**
 * GET /items/stats => getGroupsStats
 * GET /items => getGroups
 * GET /items/:id => getGroupById
 * POST /items/ => createGroup
 * PATCH/PUT /items/:id => updateGroup
 * DELETE /items/:id => deleteGroup
 */

// More router
router.get('/suggest', (0, _roleMiddleware.accessControl)('readAny', 'group'), (0, _expressValidation2.default)(_groupValidation2.default.index), paramMiddleware.parseParamList, groupController.getSuggestGroups, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.groups,
		pagination: res.pagination
	});
});

// Default Rest router
router.get('/stats', (0, _expressValidation2.default)(_groupValidation2.default.stats), groupController.getGroupsStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		groupsStats: res.groupsStats
	});
}).get('/search', (0, _roleMiddleware.accessControl)('readAny', 'movie'), groupController.searchGroups, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.groups
	});
}).get('/', (0, _roleMiddleware.accessControl)('readAny', 'group'), (0, _expressValidation2.default)(_groupValidation2.default.index), paramMiddleware.parseParamList, groupController.getGroups, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.groups,
		pagination: res.pagination
	});
}).get('/:id', (0, _roleMiddleware.accessControl)('readOwn', 'group'), (0, _expressValidation2.default)(_groupValidation2.default.show), groupController.getGroupById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.group
	});
}).post('/', (0, _roleMiddleware.accessControl)('createOwn', 'group'), (0, _expressValidation2.default)(_groupValidation2.default.create), groupController.createGroup, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.group
	});
}).put('/:id', (0, _roleMiddleware.accessControl)('deleteOwn', 'group'), (0, _expressValidation2.default)(_groupValidation2.default.update), groupController.updateGroup, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.group
	});
}).delete('/:id', (0, _roleMiddleware.accessControl)('updateOwn', 'group'), (0, _expressValidation2.default)(_groupValidation2.default.delete), groupController.deleteGroup, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getLikesStats = getLikesStats;
exports.getLikes = getLikes;
exports.getLikeById = getLikeById;
exports.createLike = createLike;
exports.updateLike = updateLike;
exports.deleteLike = deleteLike;

var _likeModel = __webpack_require__(22);

var _likeModel2 = _interopRequireDefault(_likeModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _likeUtil = __webpack_require__(84);

var util = _interopRequireWildcard(_likeUtil);

var _helper = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


/**
 * @group likes - Operations about likes
 *
 */

async function getLikesStats(req, res, next) {
	try {
		res.likesStats = {
			count: await _likeModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getLikes(req, res, next) {
	try {
		let _ref = await _likeModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.likes = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getLikeById(req, res, next) {
	try {
		res.like = await _likeModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createLike(req, res, next) {
	try {
		res.like = await _likeModel2.default.create(Object.assign({}, req.body, {
			user: req.user
		}));

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateLike(req, res, next) {
	try {
		let like = await _likeModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			like[key] = req.body[key];
		});
		await like.save();
		res.like = like;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteLike(req, res, next) {
	try {
		const like = await _likeModel2.default.findById(req.params.id);

		await like.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _likeController = __webpack_require__(82);

var likeController = _interopRequireWildcard(_likeController);

var _likeValidation = __webpack_require__(85);

var _likeValidation2 = _interopRequireDefault(_likeValidation);

var _paramMiddleware = __webpack_require__(13);

var paramMiddleware = _interopRequireWildcard(_paramMiddleware);

var _roleMiddleware = __webpack_require__(12);

var _existMiddleware = __webpack_require__(18);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const router = new _express.Router();

/**
 * GET /items/stats => getLikesStats
 * GET /items => getLikes
 * GET /items/:id => getLikeById
 * POST /items/ => createLike
 * PATCH/PUT /items/:id => updateLike
 * DELETE /items/:id => deleteLike
 */

// More router

// Default Rest router
router.get('/stats', (0, _expressValidation2.default)(_likeValidation2.default.stats), likeController.getLikesStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		likesStats: res.likesStats
	});
}).get('/', (0, _expressValidation2.default)(_likeValidation2.default.index), paramMiddleware.parseParamList, likeController.getLikes, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.likes,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_likeValidation2.default.show), likeController.getLikeById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.like
	});
}).post('/', (0, _roleMiddleware.accessControl)('createOwn', 'like'), (0, _expressValidation2.default)(_likeValidation2.default.create), _existMiddleware.existLike, likeController.createLike, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.like
	});
}).put('/:id', (0, _expressValidation2.default)(_likeValidation2.default.update), likeController.updateLike, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.like
	});
}).delete('/:id', (0, _expressValidation2.default)(_likeValidation2.default.delete), likeController.deleteLike, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getMembersStats = getMembersStats;
exports.getMembers = getMembers;
exports.getMemberById = getMemberById;
exports.createMember = createMember;
exports.updateMember = updateMember;
exports.deleteMember = deleteMember;

var _memberModel = __webpack_require__(23);

var _memberModel2 = _interopRequireDefault(_memberModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _memberUtil = __webpack_require__(88);

var util = _interopRequireWildcard(_memberUtil);

var _helper = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


/**
 * @group members - Operations about members
 *
 */

async function getMembersStats(req, res, next) {
	try {
		res.membersStats = {
			count: await _memberModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getMembers(req, res, next) {
	try {
		let _ref = await _memberModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.members = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getMemberById(req, res, next) {
	try {
		res.member = await _memberModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createMember(req, res, next) {
	try {
		res.member = await _memberModel2.default.create(Object.assign({}, req.body, {
			user: req.user
		}));

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateMember(req, res, next) {
	try {
		let member = await _memberModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			member[key] = req.body[key];
		});
		await member.save();
		res.member = member;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteMember(req, res, next) {
	try {
		const member = await _memberModel2.default.findById(req.params.id);

		await member.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _memberController = __webpack_require__(86);

var memberController = _interopRequireWildcard(_memberController);

var _memberValidation = __webpack_require__(89);

var _memberValidation2 = _interopRequireDefault(_memberValidation);

var _paramMiddleware = __webpack_require__(13);

var paramMiddleware = _interopRequireWildcard(_paramMiddleware);

var _roleMiddleware = __webpack_require__(12);

var _existMiddleware = __webpack_require__(18);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const router = new _express.Router();

/**
 * GET /items/stats => getMembersStats
 * GET /items => getMembers
 * GET /items/:id => getMemberById
 * POST /items/ => createMember
 * PATCH/PUT /items/:id => updateMember
 * DELETE /items/:id => deleteMember
 */

// More router

// Default Rest router
router.get('/stats', (0, _expressValidation2.default)(_memberValidation2.default.stats), memberController.getMembersStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		membersStats: res.membersStats
	});
}).get('/', (0, _expressValidation2.default)(_memberValidation2.default.index), paramMiddleware.parseParamList, memberController.getMembers, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.members,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_memberValidation2.default.show), memberController.getMemberById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.member
	});
}).post('/', (0, _roleMiddleware.accessControl)('createOwn', 'member'), (0, _expressValidation2.default)(_memberValidation2.default.create), _existMiddleware.existMember, memberController.createMember, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.member
	});
}).put('/:id', (0, _roleMiddleware.accessControl)('updateOwn', 'member'), (0, _expressValidation2.default)(_memberValidation2.default.update), memberController.updateMember, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.member
	});
}).delete('/:id', (0, _roleMiddleware.accessControl)('deleteOwn', 'member'), (0, _expressValidation2.default)(_memberValidation2.default.delete), memberController.deleteMember, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.searchMovies = searchMovies;
exports.initMovies = initMovies;
exports.getSuggestMovies = getSuggestMovies;
exports.getFollowerMovies = getFollowerMovies;
exports.getMoviesStats = getMoviesStats;
exports.getMovies = getMovies;
exports.getMovieById = getMovieById;
exports.createMovie = createMovie;
exports.updateMovieByVoiceover = updateMovieByVoiceover;
exports.updateMovie = updateMovie;
exports.deleteMovie = deleteMovie;

var _movieModel = __webpack_require__(21);

var _movieModel2 = _interopRequireDefault(_movieModel);

var _userModel = __webpack_require__(24);

var _userModel2 = _interopRequireDefault(_userModel);

var _followMovieModel = __webpack_require__(20);

var _followMovieModel2 = _interopRequireDefault(_followMovieModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _movies = __webpack_require__(117);

var _movies2 = _interopRequireDefault(_movies);

var _helper = __webpack_require__(1);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /* eslint-disable no-unused-vars */


var movieSchema = _mongoose2.default.model('Movie').schema;

/**
 * @group movies - Operations about movies
 *
 */

async function searchMovies(req, res, next) {
	try {
		let _ref = await _movieModel2.default.paginate({ $text: { $search: req.parsedParams.search }, share: 'public' }, Object.assign({}, req.parsedParams)),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.movies = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function initMovies(req, res, next) {
	try {
		await _movieModel2.default.deleteMany();
		await _movieModel2.default.insertMany(_movies2.default);
		res.movies = _movies2.default;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getSuggestMovies(req, res, next) {
	try {
		let suggests = [{ viewsCount: 'desc' }, { likesCount: 'desc' }, { favoritesCount: 'desc' }, { ratesAvg: 'desc' }, { ratesCount: 'desc' }];
		let sort = suggests[Math.floor(Math.random() * suggests.length)];

		let _ref2 = await _movieModel2.default.paginate({ share: 'public' }, Object.assign({}, req.parsedParams, { sort: sort })),
		    { docs } = _ref2,
		    pagination = _objectWithoutProperties(_ref2, ['docs']);

		res.movies = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getFollowerMovies(req, res, next) {
	try {
		let _ref3 = await _followMovieModel2.default.paginate({ movie: req.params.id }, Object.assign({}, req.parsedParams, {
			populate: [{
				path: 'user',
				model: 'User'
			}]
		})),
		    { docs } = _ref3,
		    pagination = _objectWithoutProperties(_ref3, ['docs']);

		res.followers = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getMoviesStats(req, res, next) {
	try {
		res.moviesStats = {
			count: await _movieModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getMovies(req, res, next) {
	try {
		let _ref4 = await _movieModel2.default.paginate({ share: 'public' }, req.parsedParams),
		    { docs } = _ref4,
		    pagination = _objectWithoutProperties(_ref4, ['docs']);

		res.movies = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getMovieById(req, res, next) {
	try {
		res.movie = await _movieModel2.default.incViewsCount(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createMovie(req, res, next) {
	try {
		res.movie = await _movieModel2.default.create(Object.assign({}, req.body, {
			uploader: req.user._id || ''
		}));
		_userModel2.default.incUploadedCount(req.user._id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateMovieByVoiceover(req, res, next) {
	// had res.voiceover
	try {
		let movie = await _movieModel2.default.findById(res.voiceover.movie);

		if (movie.voiceovers && movie.voiceovers[movie.voiceovers.lenght - 1] === res.voiceover._id && res.voiceover.status === 'done' && res.voiceover.embedUrl) {
			movie.status = 'done';
		}

		await movie.save();
		res.movie = req.movie;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateMovie(req, res, next) {
	try {
		let movie = await _movieModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			movie[key] = req.body[key];
		});
		await movie.save();
		res.movie = movie;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteMovie(req, res, next) {
	try {
		await _movieModel2.default.findOneAndDelete(req.movie._id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _movieController = __webpack_require__(90);

var movieController = _interopRequireWildcard(_movieController);

var _movieValidation = __webpack_require__(92);

var _movieValidation2 = _interopRequireDefault(_movieValidation);

var _paramMiddleware = __webpack_require__(13);

var paramMiddleware = _interopRequireWildcard(_paramMiddleware);

var _ownMiddleware = __webpack_require__(19);

var ownMiddleware = _interopRequireWildcard(_ownMiddleware);

var _roleMiddleware = __webpack_require__(12);

var _voiceoverController = __webpack_require__(34);

var voiceoverController = _interopRequireWildcard(_voiceoverController);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = new _express.Router(); /* eslint-disable no-unused-vars */


/**
 * GET /items/stats => stats
 * GET /items => index
 * GET /items/:id => show
 * POST /items/ => create
 * PATCH/PUT /items/:id => update
 * DELETE /items/:id => remove
 */

// More router
router.get('/init', (0, _roleMiddleware.accessControl)('createAny', 'movie'), movieController.initMovies, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.movies
	});
}).get('/search', (0, _roleMiddleware.accessControl)('readAny', 'movie'), paramMiddleware.parseParamList, movieController.searchMovies, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.movies,
		pagination: res.pagination
	});
}).get('/suggests', (0, _roleMiddleware.accessControl)('readAny', 'movie'), paramMiddleware.parseParamList, movieController.getSuggestMovies, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.movies,
		pagination: res.pagination
	});
}).get('/:id/followers', (0, _roleMiddleware.accessControl)('readOwn', 'followMovie'), (0, _expressValidation2.default)(_movieValidation2.default.show), paramMiddleware.parseParamList, movieController.getFollowerMovies, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.followers,
		pagination: res.pagination
	});
});
// .get(
// 	'/upload',
// 	accessControl('createOwn', 'movie'),
// 	validate(movieValidation.upload),
// 	movieController.getFollowerMovies,
// 	function(req, res, next) {
// 		return res.status(HTTPStatus.OK).json({
// 			data: res.followers,
// 			pagination: res.pagination
// 		})
// 	}
// )

//  Default router
router.get('/stats', (0, _roleMiddleware.accessControl)('readAny', 'movie'), (0, _expressValidation2.default)(_movieValidation2.default.stats), movieController.getMoviesStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.moviesStats
	});
}).get('/', (0, _roleMiddleware.accessControl)('readAny', 'movie'), (0, _expressValidation2.default)(_movieValidation2.default.index), paramMiddleware.parseParamList, movieController.getMovies, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.movies,
		pagination: res.pagination
	});
}).get('/:id', (0, _roleMiddleware.accessControl)('readAny', 'movie'), (0, _expressValidation2.default)(_movieValidation2.default.show), movieController.getMovieById, voiceoverController.getVoiceoversByMovie, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: Object.assign({}, res.movie, { voiceovers: res.voiceovers })
	});
}).post('/', (0, _roleMiddleware.accessControl)('createOwn', 'movie'), (0, _expressValidation2.default)(_movieValidation2.default.create), movieController.createMovie, function (req, res, next) {
	req.body.movieId = res.movie.id;
	next();
}, voiceoverController.createVoiceover, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.movie
	});
}).put('/:id', (0, _roleMiddleware.accessControl)('updateOwn', 'movie'), (0, _expressValidation2.default)(_movieValidation2.default.update), ownMiddleware.ownMovie, movieController.updateMovie, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.movie
	});
}).delete('/:id', (0, _roleMiddleware.accessControl)('deleteOwn', 'movie'), (0, _expressValidation2.default)(_movieValidation2.default.delete), ownMiddleware.ownMovie, movieController.deleteMovie, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	upload: {},
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getPostsStats = getPostsStats;
exports.getPosts = getPosts;
exports.getPostById = getPostById;
exports.createPost = createPost;
exports.updatePost = updatePost;
exports.deletePost = deletePost;

var _postModel = __webpack_require__(94);

var _postModel2 = _interopRequireDefault(_postModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _postUtil = __webpack_require__(96);

var util = _interopRequireWildcard(_postUtil);

var _helper = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


/**
 * @group posts - Operations about posts
 *
 */

async function getPostsStats(req, res, next) {
	try {
		res.postsStats = {
			count: await _postModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getPosts(req, res, next) {
	try {
		let _ref = await _postModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.posts = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getPostById(req, res, next) {
	try {
		res.post = await _postModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createPost(req, res, next) {
	try {
		res.post = await _postModel2.default.create(req.body);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updatePost(req, res, next) {
	try {
		let post = await _postModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			post[key] = req.body[key];
		});
		await post.save();
		res.post = post;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deletePost(req, res, next) {
	try {
		const post = await _postModel2.default.findById(req.params.id);

		await post.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _postValidation = __webpack_require__(32);

var myValid = _interopRequireWildcard(_postValidation);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;

let postSchema = new _mongoose.Schema({
	content: {
		type: String,
		trim: true,
		unique: true
	},
	movie: {
		type: ObjectId,
		required: [true, 'Movie is required!'],
		ref: 'Movie',
		trim: true
	},
	status: {
		type: String,
		enum: ['checking', 'close', 'done'],
		default: 'checking',
		trim: true
	},
	poster: {
		type: ObjectId,
		ref: 'User',
		required: [true, 'Poster is required!'],
		trim: true
	},
	group: {
		type: ObjectId,
		ref: 'Group',
		required: [true, 'Group is required!'],
		trim: true
	}
}, {
	timestamps: true
});

postSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
postSchema.plugin(_mongoosePaginate2.default);
postSchema.plugin(_mongooseAutopopulate2.default);

exports.default = _mongoose2.default.model('Post', postSchema);

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _postController = __webpack_require__(93);

var postController = _interopRequireWildcard(_postController);

var _postValidation = __webpack_require__(32);

var _postValidation2 = _interopRequireDefault(_postValidation);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = new _express.Router();

/**
 * GET /items/stats => getPostsStats
 * GET /items => getPosts
 * GET /items/:id => getPostById
 * POST /items/ => createPost
 * PATCH/PUT /items/:id => updatePost
 * DELETE /items/:id => deletePost
 */

// More router

// Default Rest router
/* eslint-disable no-unused-vars */
router.get('/stats', (0, _expressValidation2.default)(_postValidation2.default.stats), postController.getPostsStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		postsStats: res.postsStats
	});
}).get('/', (0, _expressValidation2.default)(_postValidation2.default.index), postController.getPosts, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.posts,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_postValidation2.default.show), postController.getPostById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.post
	});
}).post('/', (0, _expressValidation2.default)(_postValidation2.default.create), postController.createPost, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.post
	});
}).put('/:id', (0, _expressValidation2.default)(_postValidation2.default.update), postController.updatePost, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.post
	});
}).delete('/:id', (0, _expressValidation2.default)(_postValidation2.default.delete), postController.deletePost, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getRatesStats = getRatesStats;
exports.getRates = getRates;
exports.getRateById = getRateById;
exports.createRate = createRate;
exports.updateRate = updateRate;
exports.deleteRate = deleteRate;

var _rateModel = __webpack_require__(98);

var _rateModel2 = _interopRequireDefault(_rateModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _rateUtil = __webpack_require__(100);

var util = _interopRequireWildcard(_rateUtil);

var _helper = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


/**
 * @group rates - Operations about rates
 *
 */

async function getRatesStats(req, res, next) {
	try {
		res.ratesStats = {
			count: await _rateModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getRates(req, res, next) {
	try {
		let _ref = await _rateModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.rates = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getRateById(req, res, next) {
	try {
		res.rate = await _rateModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createRate(req, res, next) {
	try {
		res.rate = await _rateModel2.default.create(req.body);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateRate(req, res, next) {
	try {
		let rate = await _rateModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			rate[key] = req.body[key];
		});
		await rate.save();
		res.rate = rate;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteRate(req, res, next) {
	try {
		const rate = await _rateModel2.default.findById(req.params.id);

		await rate.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _slugify = __webpack_require__(14);

var _slugify2 = _interopRequireDefault(_slugify);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;


let rateSchema = new _mongoose.Schema({
	rateName: {
		type: String,
		required: [true, 'rateName is required!'],
		trim: true,
		unique: true
	}
}, {
	timestamps: true
});

rateSchema.statics = {};

rateSchema.pre('save', function (next) {
	// this.slug = slugify(this.name, {
	// 	lower: true
	// })

	return next();
});

rateSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
rateSchema.plugin(_mongoosePaginate2.default);
rateSchema.plugin(_mongooseAutopopulate2.default);
rateSchema.plugin(pluginService.logPost, { schemaName: 'Rate' });
rateSchema.plugin(pluginService.setSlugUrl, { schemaName: 'Rate' });

exports.default = _mongoose2.default.model('Rate', rateSchema);

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _rateController = __webpack_require__(97);

var rateController = _interopRequireWildcard(_rateController);

var _rateValidation = __webpack_require__(101);

var _rateValidation2 = _interopRequireDefault(_rateValidation);

var _authService = __webpack_require__(15);

var authService = _interopRequireWildcard(_authService);

var _paramService = __webpack_require__(16);

var paramService = _interopRequireWildcard(_paramService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = new _express.Router();

/**
 * GET /items/stats => getRatesStats
 * GET /items => getRates
 * GET /items/:id => getRateById
 * POST /items/ => createRate
 * PATCH/PUT /items/:id => updateRate
 * DELETE /items/:id => deleteRate
 */

// More router

// Default Rest router
/* eslint-disable no-unused-vars */
router.get('/stats', (0, _expressValidation2.default)(_rateValidation2.default.stats), rateController.getRatesStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		ratesStats: res.ratesStats
	});
}).get('/', paramService.parseParam, (0, _expressValidation2.default)(_rateValidation2.default.index), rateController.getRates, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.rates,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_rateValidation2.default.show), rateController.getRateById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.rate
	});
}).post('/', authService.authJwt, (0, _expressValidation2.default)(_rateValidation2.default.create), rateController.createRate, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.rate
	});
}).put('/:id', (0, _expressValidation2.default)(_rateValidation2.default.update), rateController.updateRate, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.rate
	});
}).delete('/:id', (0, _expressValidation2.default)(_rateValidation2.default.delete), rateController.deleteRate, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _slugify = __webpack_require__(14);

var _slugify2 = _interopRequireDefault(_slugify);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;


let relationshipSchema = new _mongoose.Schema({
	user: {
		type: ObjectId,
		ref: 'User',
		required: [true, 'User is required!'],
		autopopulate: true,
		trim: true
	},
	requestsCount: {
		type: Number,
		default: 0
	},
	friendsCount: {
		type: Number,
		default: 0
	},
	requests: [{
		type: ObjectId,
		ref: 'User',
		trim: true
	}],
	friends: [{
		type: ObjectId,
		ref: 'User',
		trim: true
	}]
}, {
	timestamps: true
});

relationshipSchema.statics = {
	async findOneOrCreate(condition) {
		let rs = await this.findOne(condition);
		return rs ? rs : await this.create(condition);
	},
	async isRequest(user, request) {
		let rs = await this.findOne({ user }).populate({
			path: 'requests',
			match: { _id: request }
		});
		return rs.requests && rs.requests.length ? true : false;
	},
	async isFriend(user, friend) {
		return await this.findOne({ user }).populate({
			path: 'friends',
			match: friend
		});
	},
	async createRequest(user, request) {
		let rs = await this.findOneOrCreate({ user });
		return rs.addRequest(request);
	},
	async acceptRequest(user, request) {
		let userRS = await this.findOneOrCreate({ user });
		let requestRS = await this.findOneOrCreate({ user: request });

		userRS.removeRequest(request);
		userRS.addFriend(request);
		requestRS.addFriend(user);
		return userRS;
	},
	async rejectRequest(user, request) {
		let userRS = await this.findOneOrCreate({ user });
		userRS.removeRequest(request);
		return userRS;
	},
	async removeFriend(user, friend) {
		let userResource = this.findOne({ user });
		let friendResource = this.findOne({ user: friend });
		friendResource.removeFriend(user);
		return userResource.removeFriend(friend);
	}
};

relationshipSchema.methods = {
	isRequest(request) {
		return this.requests.indexOf(request._id || request) !== -1 ? true : false;
	},
	isFriend(friend) {
		return this.friends.indexOf(friend._id || friend) !== -1 ? true : false;
	},
	addRequest(request) {
		if (this.isRequest(request) || this.isFriend(request)) {
			return this;
		}
		this.requests.push(request);
		if (this.requestsCount % 10 === 0) {
			this.requestsCount = this.requests.length;
		} else {
			this.requestsCount++;
		}
		return this.save();
	},
	addFriend(friend) {
		if (this.isFriend(friend)) {
			return this;
		}
		this.friends.push(friend);
		if (this.friendsCount % 10 === 0) {
			this.friendsCount = this.friends.length;
		} else {
			this.friendsCount++;
		}
		return this.save();
	},
	removeRequest(request) {
		if (!this.isRequest(request)) {
			return this;
		}
		this.requests.remove(request);
		if (this.requestsCount % 10 === 0) {
			this.requestsCount = this.requests.length;
		} else {
			this.requestsCount--;
		}
		return this.save();
	},
	removeFriend(friend) {
		if (!this.isFriend(friend)) {
			return this;
		}
		this.friends.remove(friend);
		if (this.friendsCount % 10 === 0) {
			this.friendsCount = this.friends.length;
		} else {
			this.friendsCount--;
		}
		return this.save();
	}
};

relationshipSchema.pre('save', function (next) {
	return next();
});

relationshipSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
relationshipSchema.plugin(_mongoosePaginate2.default);
relationshipSchema.plugin(_mongooseAutopopulate2.default);
relationshipSchema.plugin(pluginService.logPost, { schemaName: 'Relationship' });
relationshipSchema.plugin(pluginService.setSlugUrl, {
	schemaName: 'Relationship'
});

exports.default = _mongoose2.default.model('Relationship', relationshipSchema);

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _relationshipController = __webpack_require__(33);

var relationshipController = _interopRequireWildcard(_relationshipController);

var _relationshipValidation = __webpack_require__(105);

var _relationshipValidation2 = _interopRequireDefault(_relationshipValidation);

var _paramService = __webpack_require__(16);

var paramService = _interopRequireWildcard(_paramService);

var _roleMiddleware = __webpack_require__(12);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = new _express.Router();

/**
 * GET /items/stats => getRelationshipsStats
 * GET /items => getRelationships
 * GET /items/:id => getRelationshipById
 * POST /items/ => createRelationship
 * PATCH/PUT /items/:id => updateRelationship
 * DELETE /items/:id => deleteRelationship
 */

// More router
/* eslint-disable no-unused-vars */
router.post('/', (0, _roleMiddleware.accessControl)('createOwn', 'relationship'), (0, _expressValidation2.default)(_relationshipValidation2.default.requests), relationshipController.createRequest, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.relationship
	});
}).put('/accept', (0, _roleMiddleware.accessControl)('updateOwn', 'relationship'), (0, _expressValidation2.default)(_relationshipValidation2.default.requests), relationshipController.acceptRequest, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.relationship
	});
});
// 	.put(
// 		'/reject',
// 		accessControl('updateOwn', 'relationship'),
// 		validate(relationshipValidation.requests),
// 		relationshipController.rejectRequest,
// 		function(req, res, next) {
// 			return res.status(HTTPStatus.OK).json({
// 				data: res.relationship
// 			})
// 		}
// 	)
// 	.delete(
// 		'/',
// 		accessControl('Own', 'relationship'),
// 		validate(relationshipValidation.remove),
// 		relationshipController.removeFriend,
// 		function(req, res, next) {
// 			return res.status(HTTPStatus.OK).json({
// 				data: res.relationship
// 			})
// 		}
// 	)

// Default Rest router
router.get('/stats', (0, _expressValidation2.default)(_relationshipValidation2.default.stats), relationshipController.getRelationshipsStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.relationshipsStats
	});
}).get('/', (0, _roleMiddleware.accessControl)('readAny', 'movie'), paramService.parseParam, (0, _expressValidation2.default)(_relationshipValidation2.default.index), relationshipController.getRelationships, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.relationships,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_relationshipValidation2.default.show), relationshipController.getRelationshipById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.relationship
	});
}).post('/', (0, _roleMiddleware.accessControl)('createOwn', 'movie'), (0, _expressValidation2.default)(_relationshipValidation2.default.create), relationshipController.createRelationship, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.relationship
	});
}).put('/:id', (0, _roleMiddleware.accessControl)('updateOwn', 'movie'), (0, _expressValidation2.default)(_relationshipValidation2.default.update), relationshipController.updateRelationship, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.relationship
	});
}).delete('/:id', (0, _roleMiddleware.accessControl)('deleteOwn', 'movie'), (0, _expressValidation2.default)(_relationshipValidation2.default.delete), relationshipController.deleteRelationship, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	requests: {
		body: {
			target: _joi2.default.string().required()
		}
	},
	remove: {
		body: {
			target: _joi2.default.string().required()
		}
	},
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.uploadFile = uploadFile;
exports.uploadImage = uploadImage;
exports.uploadSubtitle = uploadSubtitle;
exports.uploadMovie = uploadMovie;
exports.uploadVoiceover = uploadVoiceover;

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _helper = __webpack_require__(1);

var _multiparty = __webpack_require__(25);

var _multiparty2 = _interopRequireDefault(_multiparty);

var _request = __webpack_require__(26);

var _request2 = _interopRequireDefault(_request);

var _fs = __webpack_require__(17);

var _fs2 = _interopRequireDefault(_fs);

var _constants = __webpack_require__(11);

var _constants2 = _interopRequireDefault(_constants);

var _util = __webpack_require__(41);

var _util2 = _interopRequireDefault(_util);

var _fileService = __webpack_require__(36);

var fileService = _interopRequireWildcard(_fileService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import Upload from './uploadModel.js'
async function uploadFile(req, res, next) {
	try {
		fileService.uploadFile('/files', 'false', {
			value: _fs2.default.createReadStream(req.file.path),
			options: {
				filename: req.file.originalFilename
			}
		}, async function (uploadedFile) {
			res.uploadedFile = uploadedFile;
			next();
		});
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}
// import request from 'request'

// eslint-disable-next-line no-unused-vars
// import * as util from './uploadUtil'
async function uploadImage(req, res, next) {
	try {
		fileService.uploadFile('/images', 'false', {
			value: _fs2.default.createReadStream(req.file.path),
			options: {
				filename: req.file.originalFilename
			}
		}, async function (uploadedFile) {
			res.uploadedFile = uploadedFile;
			next();
		});
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function uploadSubtitle(req, res, next) {
	try {
		fileService.uploadFile('/subtitles', 'false', {
			value: _fs2.default.createReadStream(req.file.path),
			options: {
				filename: req.file.originalFilename
			}
		}, async function (uploadedFile) {
			res.uploadedFile = uploadedFile;
			next();
		});
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function uploadMovie(req, res, next) {
	try {
		fileService.uploadFile('/movies', 'false', {
			value: _fs2.default.createReadStream(req.file.path),
			options: {
				filename: req.file.originalFilename
			}
		}, async function (uploadedFile) {
			res.uploadedFile = uploadedFile;
			next();
		});
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function uploadVoiceover(req, res, next) {
	try {
		fileService.uploadFile('/voiceovers', 'false', {
			value: _fs2.default.createReadStream(req.file.path),
			options: {
				filename: req.file.originalFilename
			}
		}, async function (uploadedFile) {
			res.uploadedFile = uploadedFile;
			next();
		});
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _uploadController = __webpack_require__(106);

var uploadController = _interopRequireWildcard(_uploadController);

var _uploadValidation = __webpack_require__(108);

var _uploadValidation2 = _interopRequireDefault(_uploadValidation);

var _paramService = __webpack_require__(16);

var upload = _interopRequireWildcard(_paramService);

var _roleMiddleware = __webpack_require__(12);

var _uploadMiddleware = __webpack_require__(51);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const router = new _express.Router();

/**
 * GET /items/stats => getUploadsStats
 * GET /items => getUploads
 * GET /items/:id => getUploadById
 * POST /items/ => createUpload
 * PATCH/PUT /items/:id => updateUpload
 * DELETE /items/:id => deleteUpload
 */

// More router

router.post('/file', _uploadMiddleware.parseForm, (0, _expressValidation2.default)(_uploadValidation2.default.uploadFile), uploadController.uploadFile, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.uploadedFile
	});
});
router.post('/image', _uploadMiddleware.parseForm, (0, _expressValidation2.default)(_uploadValidation2.default.uploadImage), uploadController.uploadImage, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.uploadedFile
	});
});
router.post('/movie', _uploadMiddleware.parseForm, (0, _expressValidation2.default)(_uploadValidation2.default.uploadMovie), uploadController.uploadMovie, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.uploadedFile
	});
});
router.post('/subtitle', _uploadMiddleware.parseForm, (0, _expressValidation2.default)(_uploadValidation2.default.uploadSubtitle), uploadController.uploadSubtitle, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.uploadedFile
	});
});
router.post('/voiceover', _uploadMiddleware.parseForm, (0, _expressValidation2.default)(_uploadValidation2.default.uploadVoiceover), uploadController.uploadVoiceover, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.uploadedFile
	});
});

exports.default = router;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

var _constants = __webpack_require__(11);

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
exports.default = {
	uploadFile: {
		params: {
			size: _joi2.default.number().max(_constants2.default.UPLOAD_FILE_MAX)
		}
	},
	uploadImage: {
		params: {
			size: _joi2.default.number().max(_constants2.default.UPLOAD_IMAGE_MAX)
		}
	},
	uploadMovie: {
		params: {
			size: _joi2.default.number().max(_constants2.default.UPLOAD_MOVIE_MAX)
		}
	},
	uploadSubtitle: {
		params: {
			size: _joi2.default.number().max(_constants2.default.UPLOAD_SUBTITLE_MAX)
		}
	},
	uploadVoiceover: {
		params: {
			size: _joi2.default.number().max(_constants2.default.UPLOAD_VOICEOVER_MAX)
		}
	}
};

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.searchUsers = searchUsers;
exports.getMoviesOwn = getMoviesOwn;
exports.getMoviesLiked = getMoviesLiked;
exports.getMoviesFollowed = getMoviesFollowed;
exports.getGroupsOwn = getGroupsOwn;
exports.getGroupsStatus = getGroupsStatus;
exports.getFollowers = getFollowers;
exports.getFollowed = getFollowed;
exports.getUsersStats = getUsersStats;
exports.getUsers = getUsers;
exports.getUserById = getUserById;
exports.createUser = createUser;
exports.updateUser = updateUser;
exports.deleteUser = deleteUser;
exports.localLogin = localLogin;
exports.fbLogin = fbLogin;

var _userModel = __webpack_require__(24);

var _userModel2 = _interopRequireDefault(_userModel);

var _movieModel = __webpack_require__(21);

var _movieModel2 = _interopRequireDefault(_movieModel);

var _groupModel = __webpack_require__(31);

var _groupModel2 = _interopRequireDefault(_groupModel);

var _likeModel = __webpack_require__(22);

var _likeModel2 = _interopRequireDefault(_likeModel);

var _followMovieModel = __webpack_require__(20);

var _followMovieModel2 = _interopRequireDefault(_followMovieModel);

var _followUserModel = __webpack_require__(29);

var _followUserModel2 = _interopRequireDefault(_followUserModel);

var _memberModel = __webpack_require__(23);

var _memberModel2 = _interopRequireDefault(_memberModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _userUtil = __webpack_require__(111);

var util = _interopRequireWildcard(_userUtil);

var _helper = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars

// import * as authService from '../../services/authService'


async function searchUsers(req, res, next) {
	try {
		let _ref = await _userModel2.default.paginate({ $text: { $search: req.parsedParams.search } }, Object.assign({}, req.parsedParams)),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.users = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getMoviesOwn(req, res, next) {
	try {
		let _ref2 = await _movieModel2.default.paginate({ uploader: req.params.id }, req.parsedParams),
		    { docs } = _ref2,
		    pagination = _objectWithoutProperties(_ref2, ['docs']);
		res.movies = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getMoviesLiked(req, res, next) {
	try {
		let _ref3 = await _likeModel2.default.paginate({ user: req.params.id }, req.parsedParams),
		    { docs } = _ref3,
		    pagination = _objectWithoutProperties(_ref3, ['docs']);

		res.movies = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getMoviesFollowed(req, res, next) {
	try {
		let _ref4 = await _followMovieModel2.default.paginate({ user: req.params.id }, Object.assign({}, req.parsedParams, {
			populate: [{
				path: 'movie',
				model: 'Movie'
			}]
		})),
		    { docs } = _ref4,
		    pagination = _objectWithoutProperties(_ref4, ['docs']);

		res.movies = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getGroupsOwn(req, res, next) {
	try {
		let _ref5 = await _groupModel2.default.paginate({ creator: req.params.id }, req.parsedParams),
		    { docs } = _ref5,
		    pagination = _objectWithoutProperties(_ref5, ['docs']);

		res.groups = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getGroupsStatus(req, res, next) {
	try {
		let _ref6 = await _memberModel2.default.paginate({ user: req.params.id, status: req.params.status }, req.parsedParams),
		    { docs } = _ref6,
		    pagination = _objectWithoutProperties(_ref6, ['docs']);

		res.groups = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getFollowers(req, res, next) {
	try {
		let _ref7 = await _followUserModel2.default.paginate({ follow: req.params.id }, Object.assign({}, req.parsedParams, {
			populate: [{
				path: 'user',
				model: 'User'
			}]
		})),
		    { docs } = _ref7,
		    pagination = _objectWithoutProperties(_ref7, ['docs']);

		res.followers = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getFollowed(req, res, next) {
	try {
		let _ref8 = await _followUserModel2.default.paginate({ user: req.params.id }, Object.assign({}, req.parsedParams, {
			populate: [{
				path: 'follow',
				model: 'User'
			}]
		})),
		    { docs } = _ref8,
		    pagination = _objectWithoutProperties(_ref8, ['docs']);

		res.followed = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getUsersStats(req, res, next) {
	try {
		res.usersStats = {
			count: await _userModel2.default.estimatedDocumentCount()
		};

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getUsers(req, res, next) {
	try {
		let _ref9 = await _userModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref9,
		    pagination = _objectWithoutProperties(_ref9, ['docs']);

		res.users = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getUserById(req, res, next) {
	try {
		res.user = await _userModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createUser(req, res, next) {
	try {
		const user = await _userModel2.default.create(Object.assign({}, req.body, { provider: 'local' }));
		res.user = user.toAuthJSON();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateUser(req, res, next) {
	try {
		let user = await _userModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			user[key] = req.body[key];
		});
		await user.save();
		res.user = user;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteUser(req, res, next) {
	try {
		const user = await _userModel2.default.findById(req.params.id);

		await user.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

function localLogin(req, res, next) {
	res.user = req.user.toAuthJSON();
	return next();
}

async function fbLogin(req, res, next) {
	// req.user is inited
	try {
		const profile = req.body;
		res.user = await _userModel2.default.findOne({
			provider: 'facebook',
			'social.id': profile.userID
		});

		if (res.user) {
			res.user = res.user.toAuthJSON();
			next();
		} else {
			let newUser = (await _userModel2.default.findOne({
				email: profile.email
			})) || new _userModel2.default();
			newUser.provider = 'facebook';
			newUser.social = { id: profile.userID, accessToken: profile.accessToken };
			newUser.name = profile.name;
			newUser.email = profile.email;
			newUser.gender = (0, _helper.genderToNumber)(profile.gender);
			if (profile.picture && profile.picture.data && profile.picture.data.url) {
				newUser.avatarUrl = profile.picture.data.url;
			}

			newUser = await newUser.save();
			res.user = newUser.toAuthJSON();
		}

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _userController = __webpack_require__(109);

var userController = _interopRequireWildcard(_userController);

var _relationshipController = __webpack_require__(33);

var relationshipController = _interopRequireWildcard(_relationshipController);

var _userValidation = __webpack_require__(112);

var _userValidation2 = _interopRequireDefault(_userValidation);

var _authService = __webpack_require__(15);

var _paramMiddleware = __webpack_require__(13);

var paramMiddleware = _interopRequireWildcard(_paramMiddleware);

var _ownMiddleware = __webpack_require__(19);

var ownMiddleware = _interopRequireWildcard(_ownMiddleware);

var _roleMiddleware = __webpack_require__(12);

var _fb = __webpack_require__(123);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const router = new _express.Router();

var fb = new _fb.Facebook({});
/**
 * GET /items/stats => getUsersStats
 * GET /items => getUsers
 * GET /items/:id => getUserById
 * POST /items/ => createUser
 * PATCH/PUT /items/:id => updateUser
 * DELETE /items/:id => deleteUser
 */

// More router
router.get('/me', (0, _roleMiddleware.accessControl)('createOwn', 'user'), function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: req.user
	});
}).get('/search', (0, _roleMiddleware.accessControl)('readAny', 'user'), paramMiddleware.parseParamList, userController.searchUsers, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.users,
		pagination: res.pagination
	});
}).get('/:id/movies/own', (0, _roleMiddleware.accessControl)('readOwn', 'movie'), paramMiddleware.parseParamList, userController.getMoviesOwn, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.movies,
		pagination: res.pagination
	});
}).get('/:id/movies/liked', (0, _roleMiddleware.accessControl)('readOwn', 'like'), paramMiddleware.parseParamList, userController.getMoviesLiked, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.movies,
		pagination: res.pagination
	});
}).get('/:id/movies/followed', (0, _roleMiddleware.accessControl)('readOwn', 'movie'), paramMiddleware.parseParamList, userController.getMoviesFollowed, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.movies,
		pagination: res.pagination
	});
}).get('/:id/groups/own', (0, _roleMiddleware.accessControl)('readOwn', 'group'), paramMiddleware.parseParamList, userController.getGroupsOwn, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.groups,
		pagination: res.pagination
	});
}).get('/:id/groups/:status', (0, _roleMiddleware.accessControl)('readOwn', 'group'), (0, _expressValidation2.default)(_userValidation2.default.groupsStatus), paramMiddleware.parseParamList, userController.getGroupsStatus, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.groups,
		pagination: res.pagination
	});
}).get('/:id/followers', (0, _roleMiddleware.accessControl)('readOwn', 'followUser'), paramMiddleware.parseParamList, userController.getFollowers, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.followers,
		pagination: res.pagination
	});
}).get('/:id/followed', (0, _roleMiddleware.accessControl)('readOwn', 'followUser'), paramMiddleware.parseParamList, userController.getFollowed, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.followed,
		pagination: res.pagination
	});
}).get('/:id/requests', (0, _roleMiddleware.accessControl)('readAny', 'relationship'), paramMiddleware.parseParamList, relationshipController.getRequestsByUserId, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.requests,
		pagination: res.pagination
	});
}).get('/:id/friends', (0, _roleMiddleware.accessControl)('readAny', 'relationship'), paramMiddleware.parseParamList, relationshipController.getFriendsByUserId, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.friends,
		pagination: res.pagination
	});
}).post('/signup', (0, _expressValidation2.default)(_userValidation2.default.create), userController.createUser,
// relationshipController.createRelationship,
function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.user
	});
}).post('/login', _authService.authLocal, userController.localLogin, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.user
	});
}).post('/fb_login', userController.fbLogin, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.user
	});
});

//  Default Rest router
router.get('/stats', (0, _expressValidation2.default)(_userValidation2.default.stats), userController.getUsersStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.usersStats
	});
}).get('/', (0, _roleMiddleware.accessControl)('readAny', 'user'), paramMiddleware.parseParamList, (0, _expressValidation2.default)(_userValidation2.default.index), userController.getUsers, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.users,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_userValidation2.default.show), userController.getUserById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.user
	});
}).post('/', (0, _expressValidation2.default)(_userValidation2.default.create), userController.createUser, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.user
	});
}).put('/:id', (0, _expressValidation2.default)(_userValidation2.default.update), userController.updateUser, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.user
	});
}).delete('/:id', (0, _expressValidation2.default)(_userValidation2.default.delete), userController.deleteUser, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	groupsStatus: {
		params: {
			id: _joi2.default.string().required(),
			status: _joi2.default.string().required().valid('checking', 'done', 'block')
		}
	},
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; // eslint-disable-next-line no-unused-vars

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _voiceoverValidation = __webpack_require__(35);

var myValid = _interopRequireWildcard(_voiceoverValidation);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ObjectId = _mongoose2.default.Schema.Types.ObjectId; /* eslint-disable no-unused-vars */
/**
 * @typedef voiceovers
 * @property {string} _id
 * @property {string} voiceoverName
 */

let voiceoverSchema = new _mongoose.Schema({
	requestId: {
		type: String,
		required: [true, 'Request ID is required!'],
		unique: true,
		trim: true
	},
	embedUrl: {
		type: String,
		trim: true
	},
	fileFormat: {
		type: String,
		trim: true
	},
	status: {
		type: String,
		enum: ['pending', 'done'],
		default: 'pending',
		trim: true
	},
	movie: {
		type: ObjectId,
		ref: 'Movie',
		required: [true, 'Movie is required!'],
		trim: true
	},
	uploader: {
		type: ObjectId,
		ref: 'User',
		required: [true, 'Uploader is required!'],
		trim: true
	}
}, {
	timestamps: true
});

voiceoverSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});

voiceoverSchema.plugin(_mongoosePaginate2.default);
voiceoverSchema.plugin(_mongooseAutopopulate2.default);
voiceoverSchema.plugin(pluginService.logPost, { schemaName: 'Voiceover' });
voiceoverSchema.plugin(pluginService.setSlugUrl, { schemaName: 'Voiceover' });

exports.default = _mongoose2.default.model('Voiceover', voiceoverSchema);

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _voiceoverController = __webpack_require__(34);

var voiceoverController = _interopRequireWildcard(_voiceoverController);

var _voiceoverValidation = __webpack_require__(35);

var _voiceoverValidation2 = _interopRequireDefault(_voiceoverValidation);

var _paramMiddleware = __webpack_require__(13);

var paramMiddleware = _interopRequireWildcard(_paramMiddleware);

var _ownMiddleware = __webpack_require__(19);

var ownMiddleware = _interopRequireWildcard(_ownMiddleware);

var _roleMiddleware = __webpack_require__(12);

var _synthesisService = __webpack_require__(37);

var synthesisService = _interopRequireWildcard(_synthesisService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = new _express.Router();

/**
 * GET /items/stats => stats
 * GET /items => index
 * GET /items/:id => show
 * POST /items/ => create
 * PATCH/PUT /items/:id => update
 * DELETE /items/:id => remove
 */

// More router
/* eslint-disable no-unused-vars */
router.get('/check/:requestId',
// accessControl('createOwn', 'voiceover'),
(0, _expressValidation2.default)(_voiceoverValidation2.default.checkSynthesis), voiceoverController.checkSynthesis, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.voiceover
	});
}).post('/upload',
// accessControl('createOwn', 'voiceover'),
// validate(voiceoverValidation.upload),
voiceoverController.uploadVoiceover, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.file
	});
}).post('/callback',
// accessControl('createOwn', 'voiceover'),
// validate(voiceoverValidation.callbackSynthesis),
voiceoverController.callbackSynthesis, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.voiceover
	});
});

//  Default router
router.get('/stats', (0, _expressValidation2.default)(_voiceoverValidation2.default.stats), voiceoverController.getVoiceoversStats, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		voiceoversStats: res.voiceoversStats
	});
}).get('/', (0, _expressValidation2.default)(_voiceoverValidation2.default.index), paramMiddleware.parseParamList, voiceoverController.getVoiceovers, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.voiceovers,
		pagination: res.pagination
	});
}).get('/:id', (0, _expressValidation2.default)(_voiceoverValidation2.default.show), voiceoverController.getVoiceoverById, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.voiceover
	});
}).post('/', (0, _expressValidation2.default)(_voiceoverValidation2.default.create),
// voiceoverController.createVoiceover,
function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.voiceover
	});
}).put('/:id', (0, _expressValidation2.default)(_voiceoverValidation2.default.update), voiceoverController.updateVoiceover, function (req, res, next) {
	return res.status(_httpStatus2.default.OK).json({
		data: res.voiceover
	});
}).delete('/:id', (0, _expressValidation2.default)(_voiceoverValidation2.default.delete), voiceoverController.deleteVoiceover, function (req, res, next) {
	return res.sendStatus(_httpStatus2.default.OK);
});

exports.default = router;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _roleAcl = __webpack_require__(132);

var _roleAcl2 = _interopRequireDefault(_roleAcl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ac = new _roleAcl2.default(); /* eslint-disable */


ac.grant('viewer').execute('readAny').on('user', ['*', '!password']).execute('readAny').on('followMovie').execute('readAny').on('followUser').execute('readAny').on('relationship').execute('readAny').on('movie').execute('readAny').on('post').execute('readAny').on('group').execute('readAny').on('like').execute('readAny').on('member');

ac.grant('user').extend('viewer').execute('readOwn').on('user').execute('createOwn').on('user').execute('updateOwn').on('user').execute('deleteOwn').on('user').execute('readOwn').on('followMovie').execute('createOwn').on('followMovie').execute('updateOwn').on('followMovie').execute('deleteOwn').on('followMovie').execute('readOwn').on('followUser').execute('createOwn').on('followUser').execute('updateOwn').on('followUser').execute('deleteOwn').on('followUser').execute('readOwn').on('relationship').execute('createOwn').on('relationship').execute('updateOwn').on('relationship').execute('deleteOwn').on('relationship').execute('readOwn').on('movie').execute('createOwn').on('movie').execute('updateOwn').on('movie').execute('deleteOwn').on('movie').execute('readOwn').on('post').execute('createOwn').on('post').execute('updateOwn').on('post').execute('deleteOwn').on('post').execute('readOwn').on('group').execute('createOwn').on('group').execute('updateOwn').on('group').execute('deleteOwn').on('group').execute('readOwn').on('like').execute('createOwn').on('like').execute('updateOwn').on('like').execute('deleteOwn').on('like').execute('readOwn').on('member').execute('createOwn').on('member', ['*', '!status']).execute('updateOwn').on('member').execute('deleteOwn').on('member');

ac.grant('editer').extend('user');

ac.grant('admin').extend('user').execute('readAny').on('movie').execute('createAny').on('movie').execute('updateAny').on('movie').execute('deleteAny').on('movie');

ac.grant('superadmin').extend('admin').execute('readAny').on('user').execute('createAny').on('user').execute('updateAny').on('user').execute('deleteAny').on('user').execute('readAny').on('followMovie').execute('createAny').on('followMovie').execute('updateAny').on('followMovie').execute('deleteAny').on('followMovie').execute('readAny').on('followUser').execute('createAny').on('followUser').execute('updateAny').on('followUser').execute('deleteAny').on('followUser').execute('readAny').on('movie').execute('createAny').on('movie').execute('updateAny').on('movie').execute('deleteAny').on('movie').execute('readAny').on('post').execute('createAny').on('post').execute('updateAny').on('post').execute('deleteAny').on('post').execute('readAny').on('group').execute('createAny').on('group').execute('updateAny').on('group').execute('deleteAny').on('group');

exports.default = ac;

/***/ }),
/* 116 */
/***/ (function(module, exports) {

module.exports = [{"name":"Hao Ning"},{"name":"Duncan Jones"},{"name":"Jesse V. Johnson"},{"name":"Gustav Möller"},{"name":"J.C. Chandor"},{"name":"Christopher Landon"},{"name":"Xing Fei"},{"name":"Peter Farrelly"},{"name":"Michael Caton-Jones"},{"name":"Corey Yuen"},{"name":"Adam Robitel"},{"name":"Sean Anders"},{"name":"Han Sang-Hee"},{"name":"Kuo Liu"},{"name":"Assaf Bernstein"},{"name":"Mamoru Hosoda"},{"name":"Elisabeth Vogler"},{"name":"Vijay Krishna Acharya"},{"name":"Oriol Paulo"},{"name":"đang cập nhập"},{"name":"Charles Martin Smith"},{"name":"Woo Min-Ho"},{"name":"Emmanuel Mouret"},{"name":"Sam Liu"},{"name":"Kim Byung-Woo"},{"name":"Joe Cornish"},{"name":"Lee Min-Jae"},{"name":"Daniele Misischia"},{"name":"Bang Soo-In"},{"name":"Leena Yadav"},{"name":"Dean DeBlois"},{"name":"Đang cập nhật"},{"name":"Etan Cohen"},{"name":"Kevin R. Adams"},{"name":"Giddens Ko"},{"name":"Tetsuo Yajima"},{"name":"Hugo Stuven"},{"name":"Susanne Bier"},{"name":"David Mackenzie"},{"name":"Kuan-Hui Lin"},{"name":"Shinichiro Ueda"},{"name":"Aneesh Chaganty"},{"name":"Chiwetel Ejiofor"},{"name":"Drew Pearce"},{"name":"Pawel Pawlikowski"},{"name":"Ross Venokur"},{"name":"Teng Bee"},{"name":"Mathieu Turi"},{"name":"Karey Kirkpatrick"},{"name":"Clive Tonge"},{"name":"Shoojit Sircar"},{"name":"Ko Kyung-Min"},{"name":"Bao Bối Nhĩ"},{"name":"Ethan Coen"},{"name":"Desiree Akhavan"},{"name":"Lý Hải Long"},{"name":"F. Gary Gray"},{"name":"Erdal Ceylan"},{"name":"Phil Johnston"},{"name":"Pengyuan Ren"},{"name":"Jude Jung"},{"name":"Kristoffer Nyholm"},{"name":"Choi Sung-Hyun"},{"name":"Anthony Russo"},{"name":"Lưu Vĩ Cường"},{"name":"Antoine Fuqua"},{"name":"Trương La Bình"},{"name":"Ari Sandel"},{"name":"Danishka Esterhazy"},{"name":"Jo Won-Hee"},{"name":"Vash"},{"name":"Josh Boone"},{"name":"Susanna Fogel"},{"name":"Dan Gilroy"},{"name":"Jonas Åkerlund"},{"name":"Lim Jin-Soon,Jin-Soon Lim"},{"name":"Peter Hutchings"},{"name":"Lee Seung-Won"},{"name":"Nash Edgerton"},{"name":"Leigh Whannell"},{"name":"Simon Hunter"},{"name":"Doron Paz"},{"name":"Châu Tinh Trì"},{"name":"Kang Hyo-Jin"},{"name":"Todd Strauss-Schulson"},{"name":"Michael Winnick"},{"name":"Frant Gwo"},{"name":"Lior Geller"},{"name":"Emile Hirsch"},{"name":"Bob Persichetti,Peter Ramsey"},{"name":"Gareth Evans"},{"name":"Wai Man Yip"},{"name":"Kim Tae-Gyun"},{"name":"Shunji Iwai"},{"name":"Jonathan Helpert"},{"name":"Vicky Jewson"},{"name":"Keitarô Motonaga"},{"name":"Svyatoslav Podgaevskiy"},{"name":"Kim Hyung-Hyub"},{"name":"Wen Jiang"},{"name":"Mike Rohl"},{"name":"Felix Chong"},{"name":"Luv Ranjan"},{"name":"Tatsuya Nagamine"},{"name":"Mã Hệ Hải"},{"name":"Travis Knight"},{"name":"Lee Seok-Geun"},{"name":"Muye Wen"},{"name":"Christian Rivers"},{"name":"Brian A Miller"},{"name":"Min Kyu-Dong"},{"name":"Drew Goddard"},{"name":"Witthaya Thongyooyong"},{"name":"Hoàng Bột"},{"name":"James Wan"},{"name":"Sriram Raghavan"},{"name":"Diederik Van Rooijen"},{"name":"David Slade"},{"name":"Nishikant Kamat"},{"name":"Blake Harris"},{"name":"Donovan Marsh"},{"name":"Maya Forbes"},{"name":"Andy Serkis"},{"name":"Spike Lee"},{"name":"Lee Ji-Won"},{"name":"David Yates"},{"name":"Jodi Scurfield"},{"name":"Daniel Roby"},{"name":"Lưu Trấn Vĩ"},{"name":"Koratala Siva"},{"name":"David Gordon Green"},{"name":"Timo Tjahjanto"},{"name":"Choi Sang-Hun"},{"name":"Stephen Susco"},{"name":"Kaiyang Jiang"},{"name":"Tsz Ming Wong"},{"name":"Bradley Cooper"},{"name":"Trương Nghệ Mưu"},{"name":"Kang Yoon-Sung"},{"name":"Luo Luo"},{"name":"Yoon Eun HyeChun Jung Myung"},{"name":"Tu Ting ChunHo Pong Mak"},{"name":"Kim Sung-Hoon"},{"name":"Yoo Young-Seon"},{"name":"Wes Anderson"},{"name":"Jo Kyu-Jang"},{"name":"Li Xin"},{"name":"Takeshi Kitano"},{"name":"Renny Harlin"},{"name":"Jeff Tomsic"},{"name":"Michael Noer"},{"name":"Jonathan BakerJosh Baker"},{"name":"Đào Minh Hỷ"},{"name":"Lance Daly"},{"name":"Ruben Fleischer"},{"name":"Takashi Yamazaki"},{"name":"Shinsuke Sato"},{"name":"Park Hee-Kon"},{"name":"Kar Lok Chin"},{"name":"Pierre Morel"},{"name":"Raja Gosnell"},{"name":"Amar Kaushik"},{"name":"Scott Speer"},{"name":"David Kerr"},{"name":"Jeffrey Chiang"},{"name":"Bành Thuận"},{"name":"Tần Trân"},{"name":"Byeon Hyeok"},{"name":"Oliver Daly"},{"name":"Xiaogang Feng"},{"name":"Egor Baranov"},{"name":"Kim Gwang-Sik"},{"name":"Huh Jong-ho"},{"name":"Eli Roth"},{"name":"Peter Berg"},{"name":"Jon M. Chu"},{"name":"Lee Jong-suk"},{"name":"David Lam"},{"name":"Shane Black"},{"name":"Park Hoon-Jung"},{"name":"Aku Louhimies"},{"name":"Âu Dương Phấn"},{"name":"Vi Chính"},{"name":"Takahiro Miki"},{"name":"Rocky Soraya"},{"name":"Stefano Sollima"},{"name":"Jeremy Saulnier"},{"name":"Gerard McMurray"},{"name":"Derek Cianfrance"},{"name":"Robert Zemeckis"},{"name":"Mario Van Peebles"},{"name":"Fede Alvarez"},{"name":"Enrique Begne"},{"name":"Na Hong-jin"},{"name":"David F. Sandberg"},{"name":"Oh In-Chul"},{"name":"Jessica Sharzer"},{"name":"Chad Stahelski"},{"name":"Mike Norris"},{"name":"Matt Ross"},{"name":"Taika Waititi"},{"name":"Florian Gottschick"},{"name":"Rob Reiner"},{"name":"Gavin O'Connor"},{"name":"Babak Anvari"},{"name":"Victor Mawer,Tom Barker"},{"name":"G.N.R. Kumaravelan"},{"name":"Justin Lin"},{"name":"Diêu Đình Đình"},{"name":"Il Hyeong Lee"},{"name":"John Schultz"},{"name":"Joachim Rønning,Espen Sandberg"},{"name":"Edward Zwick"},{"name":"đang cập nhật"},{"name":"Jay Roach"},{"name":"Pierre-François Martin-Laval"},{"name":"Noémie Saglio,Maxime Govare"},{"name":"Jung Ki Hun"},{"name":"Youhei Suzuki"},{"name":"Dany Boon"},{"name":"Jang Jae Hyun"},{"name":"Sung-su Kim"},{"name":"Dennis Gansel"},{"name":"Lisa Addario,Joe Syracuse"},{"name":"Dan Kwan,Daniel Scheinert"},{"name":"Seong-hun Kim"},{"name":"Benny Chan"},{"name":"John Moore"},{"name":"Matt Brown"},{"name":"Mike Thurmeier"},{"name":"Đào Thanh"},{"name":"Uwe Boll"},{"name":"Ben Falcone"},{"name":"Ron Howard"},{"name":"Paul Feig"},{"name":"James DeMonaco"},{"name":"Sharon Maguire"},{"name":"Kelly Asbury"},{"name":"Trần Mộc Thắng,Hồng Kim Bảo"},{"name":"James Foley"},{"name":"John H. Lee"},{"name":"Florian Gallenberger"},{"name":"Jay Martin"},{"name":"Tom Tykwer"},{"name":"Tom Ford"},{"name":"Kim Jae Young"},{"name":"Choi Jeong Yeol"},{"name":"Peter Atencio"},{"name":"Clint Eastwood"},{"name":"Zhou Xiaopeng"},{"name":"Christian Ditter"},{"name":"John Carney"},{"name":"Lasse Hallström"},{"name":"Courtney Hunt"},{"name":"Koan Hui"},{"name":"Mike Flanagan"},{"name":"Morten Tyldum"},{"name":"Andrew Haigh"},{"name":"Kenvil Tong"},{"name":"Zach Lipovsky"},{"name":"Nicolas Winding Refn"},{"name":"Rawson Marshall Thurber"},{"name":"Mamoru Oshii"},{"name":"Daniel Lee"},{"name":"Jim Gillespie"},{"name":"Anzi Pan"},{"name":"Jaume Collet-Serra"},{"name":"Simon Verhoeven"},{"name":"Jason Lei Howden"},{"name":"Zhou Tuo Ru"},{"name":"Roel Reiné"},{"name":"Paul W.s. Anderson"},{"name":"Rick Morales"},{"name":"John Stockwell"},{"name":"Yue Song"},{"name":"Kyoung mi Lee"},{"name":"Nikolay Lebedev"},{"name":"Wen Weihong"},{"name":"Marcus Nispel"},{"name":"James Watkins"},{"name":"Quách Kính Minh"},{"name":"Yeon Sang Ho"},{"name":"Nicholas Stoller"},{"name":"Jean-François Richet"},{"name":"Paul Greengrass"},{"name":"Dae-Min Park"},{"name":"Gore Verbinski"},{"name":"Nonthakor Thaweesuk"},{"name":"Martin Campbell"},{"name":"Ngô Thanh Vân"},{"name":"Joel Gallen"},{"name":"Yen Ping Chu"},{"name":"Steven C. Miller"},{"name":"Hồng Kim Bảo"},{"name":"Hoon-jung Park"},{"name":"Kieran Darcy-Smith"},{"name":"Andrew Stanton"},{"name":"Thomas Della Bella"},{"name":"Diệp Niệm Sâm"},{"name":"Zack Snyder"},{"name":"đang cập nhật"},{"name":"Đỗ Kỳ Phong"},{"name":"Scott Derrickson"},{"name":"Jamie M. Dagg"},{"name":"Trương Nhất Bạch,Quản Hổ,Trương Mãnh,Đằng Hoa Đào,Cao Quần Thư"},{"name":"Oliver Stone"},{"name":"Tim Russ"},{"name":"Sarik Andreasyan"},{"name":"Kevin Carraway"},{"name":"Lee Woo Chul"},{"name":"Herman Yau"},{"name":"Ken'ichi Fujiwara"},{"name":"Timur Bekmambetov"},{"name":"Park Chan-Wook"},{"name":"Takeshi Nozue"},{"name":"Yoon Joon Hyeong"},{"name":"Tào Bảo Bình"},{"name":"Yimou Zhang"},{"name":"Henry Joost,Ariel Schulman"},{"name":"Tim Burton"},{"name":"Gareth Edwards"},{"name":"Jon Lucas,Scott Moore"},{"name":"William Kaufman"},{"name":"David Lowery"},{"name":"Francis Ford Coppola"},{"name":"Patricia Riggen"},{"name":"Tatsuyuki Nagai"},{"name":"Yarrow Cheney,Chris Renaud"},{"name":"Steve McQueen"},{"name":"Éric Hannezo"},{"name":"Lý Thuần Phong"},{"name":"Sung-hee Jo"},{"name":"James Bobin"},{"name":"Drake Doremus"},{"name":"Lou Simon"},{"name":"Aman Chang"},{"name":"Trần Ngọc San"},{"name":"Tae-ra Shin"},{"name":"Masaki Nishiura"},{"name":"Roland Emmerich"},{"name":"Ariel Vromen"},{"name":"Thomas Yip"},{"name":"Jean-Marc Vallée"},{"name":"Ruben Alves"},{"name":"Pat Williams"},{"name":"Trần Quả"},{"name":"Matt Chow"},{"name":"Justin Kurzel"},{"name":"Dave Green"},{"name":"Dexter Fletcher"},{"name":"David Mirkin"},{"name":"Dharmendra Suresh Desai"},{"name":"Jevons Au,Frank Hui"},{"name":"Vincent Kesteloot,Ben Stassen"},{"name":"David Ayer"},{"name":"Michael Jai White"},{"name":"Wisit Sasanatieng"},{"name":"David Hackl"},{"name":"Tod Williams"},{"name":"A. Todd Smith"},{"name":"Thea Sharrock"},{"name":"Jianqi Huo"},{"name":"Trilak Makmeongpad"},{"name":"John Curran"},{"name":"Brian DeCubellis"},{"name":"Stephen Chow"},{"name":"Nils Gaup"},{"name":"Glenn Ficarra,John Requa"},{"name":"Qi Zhang"},{"name":"Louis Leterrier"},{"name":"Pat O'Connor"},{"name":"James Cameron"},{"name":"Catherine Hardwicke"},{"name":"Robert Schwentke"},{"name":"Tiêu Dương"},{"name":"Shakun Batra"},{"name":"Jodie Foster"},{"name":"Jae-Yong Kwak"},{"name":"Dan Trachtenberg"},{"name":"Bill Condon"},{"name":"johannes roberts"},{"name":"Chris Weitz"},{"name":"John Woo"},{"name":"Shigeo Koshi"},{"name":"Sion Sono"},{"name":"Peter Sullivan"},{"name":"Lars von Trier"},{"name":"Christophe Gans"},{"name":"Ilya Naishuller"},{"name":"Ethan Coen,Joel Coen"},{"name":"Clay Kaytis,Fergal Reilly"},{"name":"Adam Shankman"},{"name":"Vishal Pandya"},{"name":"Paco Cabezas"},{"name":"Richard LaGravenese"},{"name":"Ben Wheatley"},{"name":"Kyung-taek Kwak"},{"name":"Brett Ratner"},{"name":"Bryan Singer"},{"name":"Mez Tharatorn"},{"name":"Steven Gomez"},{"name":"Rupert Sanders"},{"name":"Peter Jackson"},{"name":"Hong Won-Chan"},{"name":"K. King"},{"name":"Daniel Zirilli"},{"name":"Chuck Russell"},{"name":"Kongkiat Khomsiri"},{"name":"Baek Jong-Yeol"},{"name":"Matthew Vaughn"},{"name":"Gavin Hood"},{"name":"Michael Bay"},{"name":"Jun'ichi Mori"},{"name":"Wei Xu"},{"name":"Bradley Kaplan"},{"name":"Lee Eun Hee"},{"name":"Sing-Choong Foo"},{"name":"Kwok,Man Keung"},{"name":"Bora Dagtekin"},{"name":"Fu Hua Yang"},{"name":"Chad Archibald"},{"name":"Shawn Arranha"},{"name":"Sammo Hung Kam-Bo"},{"name":"Olivier Megaton"},{"name":"Ben Stiller"},{"name":"Jo Jin-Gyu"},{"name":"Robert Eggers"},{"name":"Trương Dương"},{"name":"Director:"},{"name":"Nick Lyon"},{"name":"Hayato Kawai"},{"name":"Mel Gibson"},{"name":"Philip Yung"},{"name":"Fernando González Molina"},{"name":"Raimund Huber"},{"name":"Dan Mazer"},{"name":"Vương Gia Vệ"},{"name":"Anthony Russo,Joe Russo"},{"name":"Peter Billingsley"},{"name":"Qing Yang"},{"name":"Yuen Woo Ping"},{"name":"Haofeng Xu"},{"name":"Jeffery Scott Lando"},{"name":"Jeff Nichols"},{"name":"Nick Cheung"},{"name":"Isao Takahata"},{"name":"Seung-wan Ryoo"},{"name":"Ricardo Curtis"},{"name":"Bejoy Nambiar"},{"name":"William Brent Bell"},{"name":"John Hillcoat"},{"name":"Ryôtarô Makihara"},{"name":"Tripp Rhame"},{"name":"Lee Eun-Hee"},{"name":"Nick Morris,Laurence Connor"},{"name":"Cedric Nicolas-Troyan"},{"name":"Raja Menon"},{"name":"Tung-Shing Yee"},{"name":"Kevin Reynolds"},{"name":"Jon Favreau"},{"name":"James Crow"},{"name":"David O. Russell"},{"name":"Craig Gillespie"},{"name":"Wang Wei"},{"name":"Fred Olen Ray"},{"name":"Michael Thelin"},{"name":"Max Adams"},{"name":"Jason Zada"},{"name":"Stephen Frears"},{"name":"J Blakeson"},{"name":"Enrique Gato"},{"name":"Kwok-Man Keung"},{"name":"Ericson Core"},{"name":"Trevor Wall"},{"name":"Alexandre Heboyan,Benoît Philippon"},{"name":"Peter Landesman"},{"name":"Zhang Yang"},{"name":"Stephen Fingleton"},{"name":"Vương Tinh"},{"name":"Babak Najafi"},{"name":"Paul Gross"},{"name":"Walt Becker"},{"name":"Arthur Benzaquen"},{"name":"Guisela Moro"},{"name":"Francis Lawrence"},{"name":"Alex Proyas"},{"name":"Byron Howard,Rich Moore"},{"name":"Tom McCarthy"},{"name":"Burr Steers"},{"name":"D.C. Hamilton"},{"name":"Todd Haynes"},{"name":"Wellson Chin"},{"name":"Kim Jin-Young"},{"name":"Jocelyn Moorhouse"},{"name":"Paul McGuigan"},{"name":"Declan Dale"},{"name":"Timothy Woodward Jr."},{"name":"Yuen Woo-ping"},{"name":"John Crowley"},{"name":"Vincent Zhou"},{"name":"Jon Cassar"},{"name":"Shintaro Shimosawa"},{"name":"Seok-hoon Lee"},{"name":"Alejandro Amenábar"},{"name":"Colin Strause"},{"name":"Jordan Vogt-Roberts"},{"name":"Billy Ray"},{"name":"Yorgos Lanthimos"},{"name":"Paul W.S. Anderson"},{"name":"Charles Burmeister"},{"name":"Pou-Soi Cheang"},{"name":"Todor Chapkanov"},{"name":"Tim Story"},{"name":"R.L.Scott"},{"name":"Kim Hyun-Seok"},{"name":"Alessandro Carloni,Jennifer Yuh"},{"name":"Ryan Coogler"},{"name":"Lenny Abrahamson"},{"name":"Tim Miller"},{"name":"Johnnie To,Patrick Leung"},{"name":"Sergey Mokritskiy"},{"name":"Adam Stephen Kelly"},{"name":"Dani de la Torre"},{"name":"Javier Ruiz Caldera"},{"name":"Phil Joanou"},{"name":"Jay Oliva"},{"name":"Lạc Lạc"},{"name":"Tom Hooper"},{"name":"Fernando León de Aranoa"},{"name":"Jong-ho Huh"},{"name":"Kabir Khan"},{"name":"Lim Chan-Sang"},{"name":"Angelababy"},{"name":"Kun Chen"},{"name":"Keith Collea"},{"name":"Nancy Meyers"},{"name":"Sicheng Chen"},{"name":"Brian Helgeland"},{"name":"Steven Spielberg"},{"name":"Sunspots"},{"name":"Carrie Ng"},{"name":"Antoine Bardou-Jacquet"},{"name":"Adam McKay"},{"name":"Oh Ki Kwan"},{"name":"Shin Su Won"},{"name":"David Michôd"},{"name":"Richie Jen,Andy Luo"},{"name":"Guan Hu"},{"name":"Dennis Yu"},{"name":"Từ Tịnh Lôi"},{"name":"Lawrence Roeck"},{"name":"Tôn Chu"},{"name":"Chen Chi-Hwa"},{"name":"Hao Sun"},{"name":"Diệp Vĩ Tín"},{"name":"Benjamin Rocher"},{"name":"Lee Jae Han"},{"name":"Ha Jung Woo"},{"name":"Brandy Yuen"},{"name":"Jerry Jameson"},{"name":"Thomas Jane"},{"name":"Laurence Fishburne"},{"name":"Ella Ballentine"},{"name":"Kang Je Gyu"},{"name":"Bun Yuen"},{"name":"John Lyde"},{"name":"Yoon Je Kyoon"},{"name":"Park Eun-Kyung,Dong-ha Lee"},{"name":"Afonso Poyart"},{"name":"Mark Gatiss,Steven Moffat"},{"name":"Du Bạch Mi,Đặng Siêu"},{"name":"James Wiseman"},{"name":"Quentin Tarantino"},{"name":"Xiaoxing Yi"},{"name":"Lee Jae Jin"},{"name":"Jonathan Milott,Cary Murnion"},{"name":"Yôhei Fukuda"},{"name":"Yuet Sang Chin"},{"name":"N. Linguswamy,Suresh"},{"name":"Donnie Yen"},{"name":"Park Jin Pyo"},{"name":"Kim Jin-Moo,Park Ga-Hee,Ju Seong-Su,Jung Won-Sik"},{"name":"Alejandro González Iñárritu"},{"name":"Denis Villeneuve"},{"name":"Howy Parkins"},{"name":"Honghui Xu"},{"name":"Zheng Xu"},{"name":"Yen-Ping Chu"},{"name":"Kim Bong-joo"},{"name":"Frank Coraci"},{"name":"Chi-Leung Law"},{"name":"Danny Pang"},{"name":"Sheng Ding"},{"name":"Tiểu Tử Thiếu Lâm"},{"name":"John Wells"},{"name":"J.J. Abrams"},{"name":"Patrick Kong"},{"name":"Rod Daniel"},{"name":"Rob Letterman"},{"name":"James Ponsoldt"},{"name":"Ninh Kính Vũ"},{"name":"Da-Mo Peng,Fei Yan"},{"name":"Chris Columbus"},{"name":"John Maclean"},{"name":"Richard Ayoade"},{"name":"Roar Uthaug"},{"name":"Joe Wright"},{"name":"Sam Taylor-Johnson"},{"name":"Ridley Scott"},{"name":"Ifa Isfansyah"},{"name":"Mark Wu"},{"name":"Scott Mann"},{"name":"Eddie Tse"},{"name":"Gunasekhar"},{"name":"Oh-Kwang Kwon"},{"name":"Neill Blomkamp"},{"name":"Sebastian Schipper"},{"name":"Ciarán Foy"},{"name":"Peter Sohn"},{"name":"Shinji Higuchi"},{"name":"Chuan Lu"},{"name":"Genndy Tartakovsky"},{"name":"Masayuki Ochiai"},{"name":"Jeong-hoon Kim"},{"name":"Sylvester Stallone"},{"name":"Jack Smight"},{"name":"Timothy Kendall"},{"name":"Isaac Florentine"},{"name":"Michael Cera"},{"name":"Alison Pill"},{"name":"Mark Webber"},{"name":"Mark Osborne"},{"name":"Karan Malhotra"},{"name":"Peter Bogdanovich"},{"name":"Shion Sono"},{"name":"David Lai"},{"name":"Roni Ezra"},{"name":"Tian Xiao Peng"},{"name":"Spencer Susser"},{"name":"Marc Forster"},{"name":"Trần Gia Thượng"},{"name":"Aleksander Bach"},{"name":"Lý Liên Kiệt"},{"name":"Guy Ritchie"},{"name":"Robert Conway"},{"name":"Đặng Siêu"},{"name":"Lưu Diệc Phi"},{"name":"Trịnh Trung Cơ"},{"name":"Trâu Triệu Long"},{"name":"Hoàng Thu Sinh"},{"name":"Ngô Tú Ba"},{"name":"Giang Nhất Yến"},{"name":"Thành Thái Sân"},{"name":"Nicholas Meyer"},{"name":"Jonathan Frakes"},{"name":"Cary Joji Fukunaga"},{"name":"William Shatner"},{"name":"John R. Leonetti"},{"name":"Ousa Khun"},{"name":"Daniel Espinosa"},{"name":"Shiqing,Zhuangzhuang Tian"},{"name":"David Carson"},{"name":"Tommy Krappweis"},{"name":"Hsiao-hsien Hou"},{"name":"Wes Ball"},{"name":"Nima Nourizadeh"},{"name":"Mabel Cheung"},{"name":"Valeri Milev"},{"name":"Terry Jones"},{"name":"Tom Harper"},{"name":"Breck Eisner"},{"name":"Clarence Yiu-leung Fok"},{"name":"John Erick Dowdle"},{"name":"Arthur Wong"},{"name":"Sam Mendes"},{"name":"Peyton Reed"},{"name":"Siu-Keung Cheng"},{"name":"S.S. Rajamouli"},{"name":"T.J. Scott"},{"name":"Don Michael Paul"},{"name":"Dong-hoon Choi"},{"name":"Baltasar Kormákur"},{"name":"Stanton Barrett"},{"name":"Stephen S. Campanelli"},{"name":"Paul Hyett"},{"name":"Alan Smithee"},{"name":"Kevin Greutert"},{"name":"Ron Scalpello"},{"name":"Pakphum Wonjinda"},{"name":"Boaz Yakin"},{"name":"Rick Famuyiwa"},{"name":"Baoping Cao"},{"name":"Francesco Picone"},{"name":"Doug Ellin"},{"name":"Joel Edgerton"},{"name":"Josh Trank"},{"name":"Damien Leone"},{"name":"Shane Abbess"},{"name":"Colin Minihan"},{"name":"Scot Armstrong"},{"name":"Oleg Stepchenko"},{"name":"Alistair Legrand"},{"name":"Ang Xu"},{"name":"Takashi Miike"},{"name":"Omung Kumar"},{"name":"Wych Kaosayananda"},{"name":"R.D. Braunstein"},{"name":"Bhushan Patel"},{"name":"Alec Gillis"},{"name":"Qian Long"},{"name":"Koichi Sakamoto"},{"name":"Buz Alexander"},{"name":"Scott Cooper"},{"name":"Noh Jin-soo"},{"name":"Jerry Dugan"},{"name":"Kyle Balda,Pierre Coffin"},{"name":"Chookiat Sakveerakul"},{"name":"Bobby Farrelly,Peter Farrelly"},{"name":"Mora Stephens"},{"name":"Pete Docter,Ronaldo Del Carmen"},{"name":"Camille Delamarre"},{"name":"Christopher McQuarrie"},{"name":"Kim Hak-Soon"},{"name":"Shyam Madiraju"},{"name":"Ken Sanzel"},{"name":"Amariah Olson,Obin Olson"},{"name":"Adam Egypt Mortimer"},{"name":"John Francis Daley,Jonathan M. Goldstein"},{"name":"Rupert Goold"},{"name":"Jon Amiel"},{"name":"Jack Heller"},{"name":"Alan Taylor"},{"name":"Leonard Nimoy"},{"name":"Bharat Nalluri"},{"name":"Stephen Reynolds"},{"name":"Brad Peyton"},{"name":"Brad Bird"},{"name":"Tarsem Singh"},{"name":"Josh Forbes"},{"name":"James Griffiths"},{"name":"Remo"},{"name":"Vương Lạc Đan"},{"name":"Châu Du Dân"},{"name":"Nhậm Đạt Hoa"},{"name":"Bào Khởi Tịnh"},{"name":"Thiên Tâm"},{"name":"Matteo Garrone"},{"name":"Raman Hui"},{"name":"Andrew Mogel,Jarrad Paul"},{"name":"Chad Burns"},{"name":"Byung hun Lee"},{"name":"Do yeon Jeon"},{"name":"Go eun Kim"},{"name":"John Andreas Andersen,Lisa Marie Gamlem"},{"name":"Robert Wise"},{"name":"Chengpeng Dong"},{"name":"Charles Stone III"},{"name":"Sai Kishore Macha"},{"name":"Uli Edel"},{"name":"Ringo Lam"},{"name":"Brett Kelly"},{"name":"Gregory Jacobs"},{"name":"Trần Khải Ca"},{"name":"Lok Man Leung"},{"name":"Toby Genkel,Sean McCormack"},{"name":"Kyle Newman"},{"name":"Lưu Thanh"},{"name":"Châu Hạo Đông"},{"name":"Ngô Nghiên Nghiên"},{"name":"Triệu Thiên Tử"},{"name":"Vu Tử Kiện"},{"name":"Elizabeth Banks"},{"name":"Miguel Ángel Vivas"},{"name":"Dương Văn Quân,Hoàng Bân"},{"name":"Carl Rinsch"},{"name":"Tim Johnson"},{"name":"Tom Vaughan"},{"name":"Yoshihiro Osugi"},{"name":"Anne Fletcher"},{"name":"Carla Gugino"},{"name":"Dick Van Dyke"},{"name":"Mickey Rooney"},{"name":"Bill Cobbs"},{"name":"Neil Jones"},{"name":"Puri Jagannadh"},{"name":"Yoon Jae-gu"},{"name":"Ha Yoo"},{"name":"Baek Woon-hak"},{"name":"Nitchapoom Chaianun"},{"name":"Nadeem Soumah"},{"name":"Benni Diez"},{"name":"George Tillman Jr."},{"name":"Đằng Hoa Đào"},{"name":"Till Kleinert"},{"name":"Gilles Paquet-Brenner"},{"name":"Colin Trevorrow"},{"name":"David Robert Mitchell"},{"name":"Daniel Craig"},{"name":"Liev Schreiber"},{"name":"Jamie Bell"},{"name":"George MacKay"},{"name":"Noah Baumbach"},{"name":"George Miller"},{"name":"Jen Soska,Sylvia Soska"},{"name":"Jalmari Helander"},{"name":"David Bisbano,Mychal Simka"},{"name":"Byeong-Heon Lee"},{"name":"James McTeigue"},{"name":"Spike Brandt,Tony Cervone"},{"name":"Ho Leung Lau"},{"name":"Andy Fickman"},{"name":"Seth Macfarlane"},{"name":"Baran bo Odar"},{"name":"Ernie Barbarash"},{"name":"Lee Toland Krieger"},{"name":"Chris Buck,Jennifer Lee"},{"name":"Gil Kenan"},{"name":"David Gelb"},{"name":"Adrian Teh"},{"name":"Kenneth Branagh"},{"name":"Li Kai"},{"name":"Alex Garland"},{"name":"Julius Avery"},{"name":"Kazuaki Kiriya"},{"name":"Joss Whedon"},{"name":"Angelina Jolie"},{"name":"Anne K. Black"},{"name":"Tomm Moore"},{"name":"Trâu Hiên"},{"name":"Louis Clichy,Alexandre Astier"},{"name":"Sergey Bodrov"},{"name":"Henry Hobson"},{"name":"Richard Glatzer,Wash Westmoreland"},{"name":"Yi Li"},{"name":"Park Je Hyun"},{"name":"Ekachai Uekrongtham"},{"name":"James Marsh"},{"name":"Joe Lynch"},{"name":"Hong-seon Kim"},{"name":"Rupert Wyatt"},{"name":"Peter Sattler"},{"name":"Daniel Benmayor"},{"name":"Ngô Kinh"},{"name":"Daniel Yee Heng Chan"},{"name":"Andy Wachowski"},{"name":"Rob Marshall"},{"name":"Ana Lily Amirpour"},{"name":"Julie Delpy"},{"name":"Adam Goldberg"},{"name":"Daniel Brühl"},{"name":"Jeong-Beom Lee"},{"name":"Trương Lãi"},{"name":"Jan Komasa"},{"name":"Shawn Levy"},{"name":"Thái Nhạc Huân"},{"name":"Mike Newell"},{"name":"Jing Wong"},{"name":"Keishi Ohtomo"},{"name":"Jonathan Liebesman,Michael Bay"},{"name":"Miles Teller"},{"name":"J.K. Simmons"},{"name":"Melissa Benoist"},{"name":"Han-min Kim"},{"name":"Trần Bình Trọng"},{"name":"Christopher Nolan"},{"name":"Lee Yae Young"},{"name":"Ethan Spaulding"},{"name":"Simon West"},{"name":"Paul Newman"},{"name":"Robert Redford"},{"name":"Robert Shaw"},{"name":"Igor Petrenko"},{"name":"Artyom Semakin"},{"name":"Aleksey Panin"},{"name":"Franka Potente"},{"name":"Moritz Bleibtreu"},{"name":"Herbert Knaup"},{"name":"Jason Reitman"},{"name":"Kevin Smith"},{"name":"Brian Thompson"},{"name":"Mark Dacascos"},{"name":"Marisa Ramirez"},{"name":"Michael Douglas"},{"name":"Kathleen Turner"},{"name":"Danny DeVito"},{"name":"Joe Chen"},{"name":"Melissa McCarthy"},{"name":"Susan Sarandon"},{"name":"Kathy Bates"},{"name":"Gregg Araki"},{"name":"Kil Kang Ahn"},{"name":"Sung kee Ahn"},{"name":"Choi Jin Hyuk"},{"name":"Jonathan Daniel Brown"},{"name":"Kenny Wormald"},{"name":"Ron Perlman"},{"name":"Erica Carroll"},{"name":"Tyler Johnston"},{"name":"Emily Tennant"},{"name":"Rowan Joffe"},{"name":"Kevin Hart"},{"name":"Michael Ealy"},{"name":"Regina Hall"},{"name":"Fabrice Du Welz"},{"name":"Min sik Choi"},{"name":"Seung Ryong Ryoo"},{"name":"Ryu Seung Ryong"},{"name":"Son Ye Jin"},{"name":"Song Il Guk"},{"name":"Wong Jing"},{"name":"Miho Nakayama"},{"name":"Hidetoshi Nishijima"},{"name":"Yuriko Ishida"},{"name":"Mike Elliott"},{"name":"Satoshi Tsumabuki"},{"name":"Jessica Cambensy"},{"name":"Abby Fung"},{"name":"Chang Han"},{"name":"Juri Ueno"},{"name":"Yûta Hiraoka"},{"name":"Shihori Kanjiya"},{"name":"Ed Speleers"},{"name":"Will Poulter"},{"name":"Alfie Allen"},{"name":"James Corden"},{"name":"Alexandra Roach"},{"name":"Julie Walters"},{"name":"James Mottern"},{"name":"James Franco"},{"name":"Seth Rogen"},{"name":"Randall Park"},{"name":"Wai-Keung Lau,Andrew Loo"},{"name":"Tom Hanks"},{"name":"Tim Allen"},{"name":"Kristen Schaal"},{"name":"Glen Hansard"},{"name":"Markéta Irglová"},{"name":"Hugh Walsh"},{"name":"Taraji P. Henson"},{"name":"Idris Elba"},{"name":"Leslie Bibb"},{"name":"Chad Stahelski,David Leitch"},{"name":"Shao Yichen"},{"name":"Meng Xianglong"},{"name":"Teo Halm"},{"name":"Astro"},{"name":"Reese Hartwig"},{"name":"Blythe Auffarth"},{"name":"Bianca Collins"},{"name":"Trịnh Y Kiện"},{"name":"Cổ Thiên Lạc"},{"name":"Chương Tử Di"},{"name":"Trương Bá Chi"},{"name":"Đàm Diệu Văn"},{"name":"Jet Li"},{"name":"Morgan Freeman"},{"name":"Bob Hoskins"},{"name":"Kerry Condon"},{"name":"Wesley Snipes"},{"name":"Kris Kristofferson"},{"name":"Norman Reedus"},{"name":"Leonor Varela"},{"name":"Donnie YenDonnie Yen"},{"name":"Jeon Ji Hyun"},{"name":"Jang Hyuk"},{"name":"Kim Jeong Tae"},{"name":"Adam Wingard"},{"name":"Chung Tử Đơn"},{"name":"Mạc Thiếu Thông"},{"name":"Rosamund Kwan"},{"name":"Xiong Xin Xin"},{"name":"Chan Kwok Bong"},{"name":"Nick Powell"},{"name":"Ram Charan"},{"name":"Allu Arjun"},{"name":"Shruti K. Haasan"},{"name":"AShawn Wayans"},{"name":"Marlon Wayans"},{"name":"Shannon Elizabeth"},{"name":"Regina Hall."},{"name":"Charlene Choi Cheuk Yin"},{"name":"Gillian Chung Yun Tung"},{"name":"Sammo Hung Kam Bo"},{"name":"Jacky Wu"},{"name":"Yuen Wah"},{"name":"Jess Zhang"},{"name":"Steven Cheung"},{"name":"Sam Lee Chan Sam"},{"name":"Jessica Biel"},{"name":"Parker Posey"},{"name":"Takehiko Shinjo"},{"name":"Wagner Moura"},{"name":"Caio Junqueira"},{"name":"André Ramiro"},{"name":"Brad Pitt"},{"name":"Catherine Mccormack"},{"name":"Stephen Dillane"},{"name":"Shidô Nakamura"},{"name":"Nathan Jones"},{"name":"Chung Tử Ðơn"},{"name":"Nicholas Tse"},{"name":"Shawn Yue"},{"name":"Jie Dong"},{"name":"Michaël R. Roskam"},{"name":"Hàn Đình"},{"name":"Jason Statham"},{"name":"Nadine Velazquez"},{"name":"Andrea Roth"},{"name":"Kane Kosugi"},{"name":"Stephen Dorff"},{"name":"Scott Frank"},{"name":"R.J. Cutler"},{"name":"Andreas Prochaska"},{"name":"Quan Chi Lâm"},{"name":"Nguyên Bưu"},{"name":"Trịnh Tắc Sỹ"},{"name":"Hùng Hân Hân"},{"name":"Trương Học Hữu"},{"name":"Roy Hin Yeung Chow"},{"name":"Markus Goller"},{"name":"Ryuichi Yagi,Takashi Yamazaki"},{"name":"Lee Jeongbeom"},{"name":"John Lithgow"},{"name":"Michael Rooker"},{"name":"Elizabeth Maxwell"},{"name":"Maaya Sakamoto"},{"name":"Christian Bale"},{"name":"Paul Schneider"},{"name":"Shigeo Kobayashi"},{"name":"David Fincher"},{"name":"Kåre Hedebrant"},{"name":"Lina Leandersson"},{"name":"Per Ragnar"},{"name":"Fred Cavayé"},{"name":"David Holt"},{"name":"Emma Tate"},{"name":"Jimmy Hibbert"},{"name":"Châu Nhuận Phát"},{"name":"Mira Sorvino"},{"name":"Jürgen Prochnow"},{"name":"Til Schweiger"},{"name":"Dương Tử Quỳnh"},{"name":"Jonathan Rhys Meyers"},{"name":"Radha Mitchell"},{"name":"Bruce Willis William Sadler Bonnie Bedelia Dennis Franz Johmos Franco Nero Reginald VelJohnson"},{"name":"Yun Fat Chow"},{"name":"Xun Zhou"},{"name":"Yi Lu"},{"name":"Châu Kiệt Luân"},{"name":"Củng Lợi"},{"name":"Seann William Scott"},{"name":"Jaime King"},{"name":"Karel Roden"},{"name":"Vic Armstrong"},{"name":"Bruce Willis Jeremy Irons Samuel L. Jackson Larry Bryggman Graham Greene Colleen Camp"},{"name":"Wesley Snipes và Sandra Bullock"},{"name":"James Wong"},{"name":"Sylvia Chang"},{"name":"Huang Kun Husen"},{"name":"Teddy Chan"},{"name":"Kei'ichi Sato"},{"name":"Tommy Wirkola"},{"name":"Ashley Judd"},{"name":"Nathan Gamble"},{"name":"Takashi Shimizu"},{"name":"Jennifer Kent"},{"name":"Ben Kingsley"},{"name":"Jared Harris"},{"name":"Nick Frost"},{"name":"Bobbi Sue Luther"},{"name":"Kevin Gage"},{"name":"Lena Headey"},{"name":"Paul Thomas Anderson"},{"name":"Len Wiseman"},{"name":"Morgana O'Reilly"},{"name":"Rima Te Wiata"},{"name":"Glen Paul Waru"},{"name":"Max Theirot"},{"name":"Denzel Whitaker"},{"name":"Zena Grey"},{"name":"Frank Grillo"},{"name":"Danny Lee and Yueh Sun"},{"name":"Michael Tse"},{"name":"Francis Ng"},{"name":"Chapman To"},{"name":"Bosco Wong"},{"name":"Kara Hui"},{"name":"Charlize Theron"},{"name":"Jeremy Renner"},{"name":"Frances McDormand"},{"name":"Bruce Willis"},{"name":"Bonnie Bedelia"},{"name":"Paul Gleason"},{"name":"ACharlie Sheen"},{"name":"Tobin Bell"},{"name":"Costas Mandylor"},{"name":"Mark Rolston"},{"name":"Betsy Russell"},{"name":"Hilary Duff"},{"name":"Adam Lamberg"},{"name":"Robert Carradine"},{"name":"Hallie Todd"},{"name":"Jake Thomas"},{"name":"Eric Darnell,Simon J. Smith"},{"name":"Marlon WayansRegina Hall"},{"name":"Jessica Bielrski"},{"name":"Liam Neeson"},{"name":"Dermot Mulroney and Frank Grillo"},{"name":"Scott Patterson"},{"name":"Samy Naceri"},{"name":"Roschdy Zem"},{"name":"Sami Bouajila"},{"name":"Aline Moraes"},{"name":"Maria Luísa Mendonça"},{"name":"Naomi Wattsnd Sissy Spacek"},{"name":"Aaron StanfordVinessa Shaw"},{"name":"Danny TrejoSteve Austin"},{"name":"Andrew Douglas"},{"name":"Shawnee Smith"},{"name":"Donnie Wahlberg"},{"name":"Cary Elwes"},{"name":"Danny Glover"},{"name":"Sopon Sukdapisit"},{"name":"Vin Diesel"},{"name":"Brittany Snow"},{"name":"Max Thieriot"},{"name":"Morgan York"},{"name":"Julie Andrews"},{"name":"Anne Hathaway"},{"name":"Hector Elizondo"},{"name":"A FarisRegina HallCraig Bierko"},{"name":"Naomi Watts"},{"name":"Martin Henderson"},{"name":"Brian Cox"},{"name":"Michael McMillian"},{"name":"Jessica Stroup"},{"name":"Jacob Vargas"},{"name":"Angus Macfadyen"},{"name":"Brad Pitt Eric Bana Orlando Bloom Diane Kruger Owain Yeoman Brian Cox Sean Bean Julie Christie Peter O’Toole Rose Byrne"},{"name":"Michael Spierig"},{"name":"Cát Ưu"},{"name":"Khương Vũ"},{"name":"Lý Tu Hiền"},{"name":"Sally Yeh"},{"name":"Kong Chu"},{"name":"Stiles White"},{"name":"Priyanka Chopra"},{"name":"Kangana"},{"name":"Mithun Chakraborty"},{"name":"Abhishek Bachchan"},{"name":"Aishwarya Rai Bachchan"},{"name":"Bernard Hill"},{"name":"Ewan Stewart"},{"name":"Chris Messina"},{"name":"Logan Marshall Green"},{"name":"Jenny O Hara"},{"name":"Sean Patrick Flanery"},{"name":"Drew Waters"},{"name":"Geogre Cheung"},{"name":"Victoria Pratt"},{"name":"Chow Yun Fat"},{"name":"Leslie Cheung Kwok wing"},{"name":"Cherie Chung"},{"name":"Pierce Brosnan"},{"name":"Pedro Armendáriz Jr."},{"name":"Jacques Perrin"},{"name":"Roy Cheung"},{"name":"Shui Wah Fok"},{"name":"Richard Dreyfuss"},{"name":"Ving Rhames"},{"name":"Elisabeth Shue"},{"name":"Cécile De France"},{"name":"Thierry Neuvic"},{"name":"Cyndi Mayo Davis"},{"name":"Ferguson hs"},{"name":"Neil MaskellHarry Simpson"},{"name":"Lương Triều Vỹ"},{"name":"Châu Tấn"},{"name":"Lưu Thanh Vân"},{"name":"Viên Ni"},{"name":"Noel Clarke"},{"name":"John Cusack"},{"name":"Paul W. S. Anderson"},{"name":"Neil Nitin Mukesh"},{"name":"John Abraham"},{"name":"Rekha"},{"name":"Sharat Saxena"},{"name":"Puneet Issar"},{"name":"Nikki Blonsky"},{"name":"John Travolta"},{"name":"Michelle Pfeiffer"},{"name":"David O'Brien"},{"name":"Patrick Stewart"},{"name":"Richard Jenkins"},{"name":"Kodi Smit McPhee"},{"name":"Chloe Moretz"},{"name":"Cara Buono"},{"name":"Imran Khan"},{"name":"Genelia D'Souza"},{"name":"Manjari Fadnis"},{"name":"Mark Strong"},{"name":"Roger Bilham"},{"name":"Simon Boxall"},{"name":"Don Hall,Chris Williams"},{"name":"Shah Rukh Khan"},{"name":"Madhuri Dixit"},{"name":"Amrish Puri"},{"name":"Ranjeet"},{"name":"Salim Ghouse"},{"name":"Deepshika"},{"name":"Ashok Saraf"},{"name":"Jack Gaud"},{"name":"Gary Winick"},{"name":"Gia Coppola"},{"name":"Shane West"},{"name":"Rachael Leigh Cook"},{"name":"Cam Gigandet"},{"name":"Amanda Adrienne"},{"name":"Tom Ardavany"},{"name":"Ronnie Gene Blevins"},{"name":"Ernie Charles"},{"name":"Robbie Amell"},{"name":"Alexa PenaVega"},{"name":"Victor Garber"},{"name":"Michelle Forbes"},{"name":"Suriya"},{"name":"Johnny Nguyen"},{"name":"Abhinaya"},{"name":"David Cronenberg"},{"name":"Jesse Metcalfe"},{"name":"Amber Tamblyn"},{"name":"Joel David Moore"},{"name":"Hye Lin Han"},{"name":"Haneul Kang"},{"name":"So eun Kim"},{"name":"Doo Sik Park"},{"name":"Richard Linklater"},{"name":"Michèle Laroque"},{"name":"Jacques Gamblin"},{"name":"Wladimir Yordanoff"},{"name":"Marion Cotillard"},{"name":"Fabrizio Rongione"},{"name":"Pili Groyne"},{"name":"Action,Comedy,Horror"},{"name":"Park Sang-Joon"},{"name":"Kirk Douglas"},{"name":"Martin Sheen"},{"name":"Katharine Ross"},{"name":"Patrick Hughes"},{"name":"Jaume Balagueró"},{"name":"Kim Yong-Hwa"},{"name":"Yan Han"},{"name":"Sergio Manfio"},{"name":"Kwak Jae Young"},{"name":"Hirokazu Koreeda"},{"name":"Rodrigo Cortés"},{"name":"Hong Chang-Pyo"},{"name":"Dzhanik Fayziev,Ivan Shurkhovetskiy"},{"name":"Yuzuru Tachikawa"},{"name":"Khám Gia Vĩ"},{"name":"Chun-Yi Hsieh"},{"name":"Dean Devlin"},{"name":"Hwang Dong-HyukNam Hán Sơn Thành"},{"name":"Ahmed Khan"},{"name":"Panos CosmatosChris 'Casper' Kelly"},{"name":"Yoshihiro Nakamura"},{"name":"Hark Tsui"},{"name":"Ari Aster"},{"name":"Vincent Kok"},{"name":"Luke Sparke"},{"name":"Cheng-Kuo Yen"},{"name":"Kazuaki Imai"},{"name":"Cho Keun-Hyun"},{"name":"Jon Turteltaub"},{"name":"Simon Kaijser"},{"name":"Albert Hughes"},{"name":"Jeff Cheung"},{"name":"Tsutomu Hanabusa"},{"name":"Siddharth Malhotra"},{"name":"William H. Macy"},{"name":"Lee Eon-hee"},{"name":"Gary Ross"},{"name":"Yamamoto Yaseuichiro"},{"name":"Kim Dae-Woong"},{"name":"Vadim GolovanovRustam Mosafir"},{"name":"Dmitriy Kiselev"},{"name":"Kay Cannon"},{"name":"Franck Gastambide"},{"name":"Meghna Gulzar"},{"name":"Lưu Hải Lượng"},{"name":"Lee Hae Young"},{"name":"Đang cập nhật."},{"name":"Travis Zariwny"},{"name":"Sebastián Lelio"},{"name":"Rene Liu"},{"name":"Đức Thịnh"},{"name":"Patricia Ferreira"},{"name":"York Alec Shackleton"},{"name":"Ben Young"},{"name":"Kim Jin-Mook"},{"name":"Christopher Jenkins"},{"name":"José Padilha"},{"name":"Cáp Tư Triều Lỗ"},{"name":"Trương Gia Huy"},{"name":"Juan Antonio Bayona"},{"name":"Oleh Malamuzh"},{"name":"Hoàng Hoàng"},{"name":"Julius Ramsay"},{"name":"Bobby Moresco"},{"name":"Matthew Ross"},{"name":"Tomonori Sudô"},{"name":"Hasraf Dulull"},{"name":"Fatih Akin"},{"name":"Sanjay Leela Bhansali"},{"name":"Ryûhei Kitamura"},{"name":"Sung-hyun Byun"},{"name":"Lee Jang-Hoon"},{"name":"John Stevenson"},{"name":"Robert Smigel"},{"name":"Lee Han-Wook"},{"name":"Vaughn Stein"},{"name":"Nick Park"},{"name":"Guy Pearce"},{"name":"Felicity Jones"},{"name":"Amy Ryan"},{"name":"Mackenzie Davis"},{"name":"Gayatri Joshi"},{"name":"Kishori Balal"},{"name":"Smith Seth"},{"name":"Iko Uwais"},{"name":"Sisca Jessica"},{"name":"Christine Hakim"},{"name":"James Cullen Bressack"},{"name":"Tiêu Tuấn Diễm"},{"name":"Đổng Tử Kiện"},{"name":"Vương Long Hoa"},{"name":"Tilda Swinton"},{"name":"Flavio Parenti"},{"name":"Edoardo Gabbriellini"},{"name":"Luc Besson"},{"name":"Brad Anderson"},{"name":"Numan Acar"},{"name":"Meret Becker"},{"name":"Gode Benedix"},{"name":"Kate Beckinsale"},{"name":"Jim Sturgess"},{"name":"David Thewlis"},{"name":"Brendan Gleeson"},{"name":"Steve Austin"},{"name":"Daniel Magder"},{"name":"Janet Kidder"},{"name":"Elias Ferkin"},{"name":"Massimo Dobrovic"},{"name":"Ron Balicki"},{"name":"Gary Shore"},{"name":"James Gunn"},{"name":"Dallas Richard Hallam,Patrick Horvath"},{"name":"Casper Christensen"},{"name":"Frank Hvam"},{"name":"Ali Kazim"},{"name":"Aílton Carmo"},{"name":"Jéssica Barbosa"},{"name":"Flávio Rocha"},{"name":"Steven Soderbergh"},{"name":"Rohit Shetty"},{"name":"Kevin Costner"},{"name":"Jeanne Tripplehorn"},{"name":"Dennis Hopper"},{"name":"Dư Văn Lạc"},{"name":"Elanne Kwong"},{"name":"Ed Harris"},{"name":"Eva Longoria"},{"name":"Michael Peña"},{"name":"Casper Van Dien"},{"name":"Denise Richards"},{"name":"Dina Meyer"},{"name":"Jae-Gyu Lee"},{"name":"Simon Yam"},{"name":"Sandra Kwan Yue Ng"},{"name":"Aarif Rahman"},{"name":"Shawn Wayans"},{"name":"Kerry Washington"},{"name":"Lindsay Lohan"},{"name":"Dennis Quaid"},{"name":"Natasha Richardson"},{"name":"Elaine Hendrix"},{"name":"Jong ryol Choi"},{"name":"Mi ne Jang"},{"name":"Gyu su Jeon"},{"name":"Harrison Ford"},{"name":"Anne Heche"},{"name":"David Schwimmer"},{"name":"Riisa Naka"},{"name":"Akiyoshi Nakao"},{"name":"Munetaka Aoki"},{"name":"Anna Ishibash"},{"name":"Caroline Dhavernas"},{"name":"Joe Dinicol"},{"name":"Eddie Cibrian"},{"name":"Josie Davis"},{"name":"Robert Bailey Jr."},{"name":"Matt Reeves"},{"name":"Felix Chong,Alan Mak"},{"name":"Eddie Peng"},{"name":"Ivy Yi Han Chen"},{"name":"Michelle Yan Hsi Chen"},{"name":"Toshiaki Toyoda"},{"name":"Lâm hy lôi"},{"name":"Tiểu thẩm dương"},{"name":"Lars Bom"},{"name":"Camilla Bendix"},{"name":"Bjarne Henriksen"},{"name":"Christy Chung"},{"name":"Man Tat Ng"},{"name":"Glenn Jacobs"},{"name":"Danielle Harris"},{"name":"Katharine Isabelle"},{"name":"Andrzej Bartkowiak"},{"name":"Steven Quale"},{"name":"Robert Hays"},{"name":"Julie Hagerty"},{"name":"Leslie Nielsen"},{"name":"Tom Cruise"},{"name":"Bill Nighy"},{"name":"Carice van Houten"},{"name":"Ngô Tôn"},{"name":"Thái Trác Nghiêm"},{"name":"Hồ Ca"},{"name":"Luke Greenfield"},{"name":"Aaron Pedersen"},{"name":"Hugo Weaving"},{"name":"Ryan Kwanten"},{"name":"Jack Thompson"},{"name":"Philip Seymour Hoffman"},{"name":"Rachel McAdams"},{"name":"Cary Hiroyuki Tagawa"},{"name":"Rade Serbedzija"},{"name":"Gary Daniels"},{"name":"Andy Lau"},{"name":"Daniel Wu"},{"name":"Louis Koo"},{"name":"Chang"},{"name":"Paul Haggis"},{"name":"Katie Cassidy"},{"name":"Garret Dillahunt"},{"name":"Michelle Trachtenberg"},{"name":"Michael Imperioli"},{"name":"Ryan Guzman"},{"name":"Briana Evigan"},{"name":"Adam G. Sevani"},{"name":"Johnnie To,Ka-Fai Wai"},{"name":"Henrik Ruben Genz"},{"name":"Jon Hamm"},{"name":"Aasif Mandvi"},{"name":"Alan Arkin"},{"name":"Shahin Sean Solimon"},{"name":"Al Pacino"},{"name":"Benjamin Salisbury"},{"name":"Winona Ryder"},{"name":"Darnell Williams"},{"name":"John Slattery"},{"name":"Gabe Ibáñez"},{"name":"Phillip Noyce"},{"name":"Ashton Kutcher"},{"name":"Melissa Sagemiller"},{"name":"Sela Ward"},{"name":"Owen Wilson"},{"name":"Zach Galifianakis"},{"name":"Amy Poehler"},{"name":"Thành Long"},{"name":"Trương Mạn Ngọc"},{"name":"Tăng Giang"},{"name":"Nguyên Hoa"},{"name":"Jackie Chan"},{"name":"Micheal Hui"},{"name":"Charlene Choi"},{"name":"Sidharth Malhotra"},{"name":"Shraddha Kapoor"},{"name":"Meher Acharya Dar"},{"name":"Joaquin Phoenix"},{"name":"Dagmara Dominczyk"},{"name":"Jack O’Connell"},{"name":"Rupert Friend"},{"name":"Ben Mendelsohn"},{"name":"Sam Spruell"},{"name":"Zach Braff"},{"name":"Joey King"},{"name":"Pierce Gagnon"},{"name":"Natalie Scheetz"},{"name":"Christa Campbell"},{"name":"Caroline Williams"},{"name":"Neal McDonough"},{"name":"Laila Ali"},{"name":"Lateef Crowder"},{"name":"Emily Perkins"},{"name":"Kris Lemche"},{"name":"Mimi Rogers"},{"name":"Ngô Quân Như"},{"name":"Hoàng Bách Minh"},{"name":"Lý Hương Cầm"},{"name":"Svetlana Metkina"},{"name":"Andrew Roux"},{"name":"Peter Stormare"},{"name":"Oka Antara"},{"name":"Rin Takanashi"},{"name":"Kazuki Kitamura"},{"name":"Luna Maya"},{"name":"Chao Deng"},{"name":"Lưu Tâm Du"},{"name":"Lý Nguyên Linh"},{"name":"Ngô Gia Lệ"},{"name":"Tony Leung Chiu Wai"},{"name":"Anthony Wong Chau Sang"},{"name":"Ju Ge Liang"},{"name":"Sonia Sui"},{"name":"Chris Wang"},{"name":"Mat Brunet"},{"name":"Sajid Nadiadwala"},{"name":"Lưu Thi Thi"},{"name":"Trương Chấn"},{"name":"Jake Kasdan"},{"name":"Alexandre Aja"},{"name":"Jong-bin Yun"},{"name":"William Eubank"},{"name":"Amy Smart"},{"name":"Jamie Chung"},{"name":"Trevor Donovan"},{"name":"Linda Hamilton"},{"name":"Mya"},{"name":"Jukrit Ammarat"},{"name":"Nopachai Chaiyanam"},{"name":"Inthira Charoenpura"},{"name":"Sorapong Chatree"},{"name":"Lâm Tâm Như"},{"name":"Ngô Trấn Vũ"},{"name":"Mạc Tiểu Kỳ"},{"name":"Cecilia Cheung"},{"name":"Dong gun Jang"},{"name":"Hiroyuki Sanada"},{"name":"Kelly Stables"},{"name":"Vicki Lewis"},{"name":"Jim Cummings"},{"name":"Laraine Newman"},{"name":"Ben Diskin"},{"name":"Grant George"},{"name":"David Lodge"},{"name":"Asen Asenov"},{"name":"Tom Berenger"},{"name":"Chad Michael Collins"},{"name":"Vasil Enev"},{"name":"David Duchovny"},{"name":"Gillian Anderson"},{"name":"John Neville"},{"name":"William B. Davis"},{"name":"Nasser Al Aulaqi"},{"name":"Saleha Al Aulaqi"},{"name":"Muqbal Al Kazemi"},{"name":"Abdul Rahman Barman"},{"name":"Trương Chi Lượng"},{"name":"Phil Lord,Christopher Miller"},{"name":"Hong Jong-Chan"},{"name":"Dương Mịch"},{"name":"Quách Thái Khiết"},{"name":"Gillian Chung"},{"name":"Yeong ae Kim"},{"name":"Do Won Kwak"},{"name":"Dal su Oh"},{"name":"Jason Lee"},{"name":"Koen De Bouw"},{"name":"Filip Peeters"},{"name":"Matthias Schoenaerts"},{"name":"Seth MacFarlane"},{"name":"Dư Tâm Điềm"},{"name":"Quách Diễm"},{"name":"Lang Bằng"},{"name":"Phó Mạn"},{"name":"Takeshi Kaneshiro"},{"name":"Takako Matsu"},{"name":"Tôru Nakamura"},{"name":"Đang Cập Nhật"},{"name":"Elias Koteas"},{"name":"Paige Turco"},{"name":"Stuart Wilson"},{"name":"John V. Soto"},{"name":"Jonathan Liebesman"},{"name":"SUJU"},{"name":"Joe Vargas"},{"name":"Cinda Adams"},{"name":"Edward Asner"},{"name":"George Babbit"},{"name":"Murray Blue"},{"name":"caleb steinmeyer"},{"name":"Zulay henao"},{"name":"Bill sage"},{"name":"Kim Sang-Hyub"},{"name":"Devon Aoki"},{"name":"Will Finn,Dan St. Pierre"},{"name":"Alastair Fothergill,Keith Scholey"},{"name":"Tim Garrick"},{"name":"Adar Beck"},{"name":"Gemma Chan"},{"name":"Nathalie Cox"},{"name":"John Lloyd Fillingham"},{"name":"Chu Sheng Chen"},{"name":"Kimi Hsia"},{"name":"I Chen Ko"},{"name":"Trae Ireland"},{"name":"Erin Coker"},{"name":"Jody Barton"},{"name":"AmaLukas Haas"},{"name":"Gary Oldman"},{"name":"Evan McGuire"},{"name":"Christen Mooney"},{"name":"Steven Knight"},{"name":"Trương Quốc Vinh"},{"name":"Địch Long"},{"name":"Ngô Mẫn Đạt"},{"name":"Peter Facinelli"},{"name":"Sophia Myles"},{"name":"Nathalia Ramos"},{"name":"Cas Anvar"},{"name":"Charles Edwards"},{"name":"James Puddephatt"},{"name":"Anna Shurochkina"},{"name":"Ivan Okhlobystin"},{"name":"Galina Tyunina"},{"name":"Dmitriy Nagiev"},{"name":"Barbara Goodson"},{"name":"James Van Der Beek"},{"name":"Lara Cody"},{"name":"Kim Sun A"},{"name":"Ma dong seok"},{"name":"Shin Jung Keun"},{"name":"Châu Bảo Ý"},{"name":"Lý Tử Hùng"},{"name":"Johnny Depp"},{"name":"Rebecca Hall"},{"name":"Paul Bettany"},{"name":"Cillian Murphy"},{"name":"Jimmy Hayward"},{"name":"Brett Simmons"},{"name":"Moises Arias"},{"name":"Will Arnett"},{"name":"Bridgit Mendler"},{"name":"Jason Patric"},{"name":"James Caan"},{"name":"Melissa Ordway"},{"name":"Leonardo DiCaprio"},{"name":"Daniel Day Lewis"},{"name":"Cameron Diaz"},{"name":"Mia Wasikowska"},{"name":"Adam Driver"},{"name":"Emma Booth"},{"name":"Jessica Tovey"},{"name":"Amma Asante"},{"name":"Gary Fleder"},{"name":"Clif Prowse"},{"name":"Derek Lee"},{"name":"Michael Gill"},{"name":"Milla Jovovich"},{"name":"Sophie Monk"},{"name":"Tad Hilgenbrink"},{"name":"William Sadler"},{"name":"Janet Montgomery"},{"name":"Michael J. Fox"},{"name":"Sean Penn"},{"name":"Don Harvey"},{"name":"John C. Reilly"},{"name":"Arnold Schwarzenegger"},{"name":"Carl Weathers"},{"name":"Elpidia Carrillo"},{"name":"Allison Miller"},{"name":"Zach Gilford"},{"name":"Sam Anderson"},{"name":"Toni Collette"},{"name":"Imogen Poots"},{"name":"Aaron Paul"},{"name":"Frida Farrell"},{"name":"Nick Mancuso"},{"name":"Rhett Giles"},{"name":"Christian Willis"},{"name":"Albert Finney"},{"name":"Lauren Bacall"},{"name":"Martin Balsam"},{"name":"Ingrid Bergman"},{"name":"Lee Hwan Kyung"},{"name":"Paul Sorvino"},{"name":"Anthony Head"},{"name":"Sarah Brightman"},{"name":"Kirsten Dunst"},{"name":"Sam Neill"},{"name":"Maria Ozawa"},{"name":"Nicky Tirta"},{"name":"Herfiza Novianti"},{"name":"Alessia Cestaro"},{"name":"Will Yun Lee"},{"name":"Miguel Ferrer"},{"name":"Mercedes Renard"},{"name":"Emilie Guillot"},{"name":"Jack Nicholson"},{"name":"Adam Sandler"},{"name":"Marisa Tomei"},{"name":"Sarah Chalke"},{"name":"Dave Foley"},{"name":"Emily Alyn Lind"},{"name":"Chris Parnell"},{"name":"Jay Baruchel"},{"name":"Jude Law"},{"name":"Jennifer Jason Leigh"},{"name":"Ian Holm"},{"name":"im Carrey"},{"name":"Courteney Cox"},{"name":"Sean Young"},{"name":"Tone Loc"},{"name":"Tacho González"},{"name":"Álvaro Guevara"},{"name":"Mabel Rivera"},{"name":"Raúl Dans"},{"name":"Ezekiel Norton"},{"name":"Chris O’Dowd"},{"name":"Kelly Reilly"},{"name":"Aidan Gillen"},{"name":"Ali Faulkner"},{"name":"Johnny Walter"},{"name":"Derek Lee Nixon"},{"name":"Tory Tompkins"},{"name":"Caitlin Stasey"},{"name":"Sianoa Smit McPhee"},{"name":"Brooke Butler"},{"name":"Amanda Grace Cooper"},{"name":"Dominique Abel"},{"name":"Fiona Gordon"},{"name":"Philippe Martz"},{"name":"Bruno Romy"},{"name":"Bob Brown"},{"name":"Nikolaj Lie Kaas"},{"name":"Fares Fares"},{"name":"Sonja Richter"},{"name":"Christoffer Aro"},{"name":"Marc Webb"},{"name":"Roxanne McKee"},{"name":"Danny Dyer"},{"name":"Vincent Regan"},{"name":"Josef Altin"},{"name":"Tilikum"},{"name":"John Hargrove"},{"name":"Samantha Berg"},{"name":"Mark Simmons"},{"name":"Justin Chadwick"},{"name":"Park Bo Young"},{"name":"Kim Young Kwang"},{"name":"Lee Jong Suk"},{"name":"Rob Minkoff"},{"name":"Liesel Matthews"},{"name":"Eleanor Bron"},{"name":"Liam Cunningham"},{"name":"Andrey Merzlikin"},{"name":"Evgeniy Tsyganov"},{"name":"Maria Mashkova"},{"name":"Ho-Cheung Pang"},{"name":"Walter Matthau"},{"name":"Mason Gamble"},{"name":"Joan Plowright"},{"name":"Abhishek Varman"},{"name":"Aoi Miyazaki"},{"name":"Hiromi Nagasaku"},{"name":"Trang Vỹ Kiện"},{"name":"Imtiaz Ali"},{"name":"Molly Ringwald"},{"name":"Anthony Michael Hall"},{"name":"Justin Henry"},{"name":"Lưu Vỹ Cường"},{"name":"Lloyd Lee Barnett"},{"name":"Nick Cassavetes"},{"name":"Isara Nadee,Kirati Nakintanon"},{"name":"Hayao Miyazaki"},{"name":"Takanori Tsujimoto"},{"name":"Dong-hyuk Hwang"},{"name":"Cao Quần Thư"},{"name":"Wally Pfister"},{"name":"Trevor White"},{"name":"Shinji Aramaki"},{"name":"Jonathan Glazer"},{"name":"Robert Rodriguez"},{"name":"Nathan Phillips"},{"name":"Cassandra Magrath"},{"name":"Kestie Morassi"},{"name":"Neil Burger"},{"name":"Antoni Stutz"},{"name":"Cameron Bright"},{"name":"Nick Chinlund"},{"name":"Noam Murro"},{"name":"Henry Cavill"},{"name":"Freida Pinto"},{"name":"Luke Evans"},{"name":"Isabel Lucas"},{"name":"Jonathan English"},{"name":"Greg Mclean"},{"name":"Keanu Reeves"},{"name":"Sandra Bullock"},{"name":"Steve CarellTerence Stamp"},{"name":"Ken Davitian"},{"name":"Hrithik Roshan"},{"name":"Amitabh Bachchan"},{"name":"Naseeruddin Shah"},{"name":"Keith Parmer"},{"name":"Tian Liang"},{"name":"Zhou Xianxin"},{"name":"Li Ching"},{"name":"Litai Yan"},{"name":"thanh lịch Villa"},{"name":"Yan Yan propiona"},{"name":"Eva Birthistle and Timothy Spall"},{"name":"Malik Barnhardt"},{"name":"Avelawance Phillips"},{"name":"Tom Sizemore"},{"name":"Poj Arnon"},{"name":"Carlos Saldanha"},{"name":"Nicolas Aaron Mezzanatto"},{"name":"Dana Snyder"},{"name":"Matthew W. Taylor"},{"name":"Kirk Baily"},{"name":"Matt Damon"},{"name":"Kate Winslet"},{"name":"Gwyneth Paltrow"},{"name":"Josh Hutcherson"},{"name":"AnnaSophia Robb"},{"name":"Zooey Deschanel"},{"name":"Sean Beanbelle Wallis"},{"name":"Scott Waugh"},{"name":"Darren Aronofsky"},{"name":"Kevin Spacey"},{"name":"Gabriel Byrne"},{"name":"Chazz Palminteri"},{"name":"Luke Goss"},{"name":"Natalie Martinez"},{"name":"Sean Connery"},{"name":"Peta Wilson"},{"name":"Stuart Townsend"},{"name":"Tony Curran"},{"name":"Jason Flemyng"},{"name":"Robert Downey Jr"},{"name":"Don Cheadle"},{"name":"Scarlett Johansson"},{"name":"Diedrich Bader"},{"name":"Kevin Sorbo"},{"name":"Jim Piddock"},{"name":"Method Man"},{"name":"Sean Maguire"},{"name":"Jack Black"},{"name":"Robert Downey Jr."},{"name":"Landon Liboiron"},{"name":"Lindsey Shaw"},{"name":"Ivana Milicevic"},{"name":"Seth Green"},{"name":"Dan Fogler"},{"name":"Elisabeth Harnois"},{"name":"Mindy Sterling"},{"name":"Joan Cusack"},{"name":"Kim Coates"},{"name":"Heather Marie Marsden"},{"name":"Bokeem Woodbine"},{"name":"Kirk Kepper"},{"name":"Val Kilmer"},{"name":"Andy Garcia"},{"name":"Dean Cain"},{"name":"Emmanuelle Chriqui"},{"name":"Heather Graham"},{"name":"Mikko Nousiainen"},{"name":"Cary Fukunaga"},{"name":"Tom Skerritt"},{"name":"Sigourney Weaver"},{"name":"Veronica Cartwright"},{"name":"Harry Dean Stanton"},{"name":"John Hurt"},{"name":"Seth Gordon"},{"name":"igourney Weaver"},{"name":"Carrie Henn"},{"name":"Michael Biehn"},{"name":"Lance Henriksen"},{"name":"Paul Reiser"},{"name":"Bill Paxton"},{"name":"William Hope"},{"name":"Jenette Goldstein"},{"name":"Jean Jacques Aud"},{"name":"Shia LaBeouf"},{"name":"Michelle Monaghan"},{"name":"Rosario Dawson"},{"name":"Michael Chiklis"},{"name":"Anthony Mackie"},{"name":"Ethan Embry"},{"name":"Julianne Moore"},{"name":"Sarah Jessica Parker"},{"name":"Patrick Wilson"},{"name":"Rose Byrne"},{"name":"Ty Simpkins"},{"name":"Channing Tatum"},{"name":"Donald Sutherland"},{"name":"Rob Bowman"},{"name":"Neve Campbell"},{"name":"Courteney Cox and David Arquette"},{"name":"Nathan Fillion"},{"name":"Jason Isaacs"},{"name":"Elisabeth Moss"},{"name":"Min sik Choi and Gook hwan Jeon"},{"name":"Rachel Goldenberg"},{"name":"Peter Howitt"},{"name":"Nakama Yukie"},{"name":"Odagiri Joe"},{"name":"Kurotani Tomoka"},{"name":"Sawajiri Erika"},{"name":"Shiina Kippei"},{"name":"Brian Horiuchi"},{"name":"Steven Brill"},{"name":"Sylvester StalloneBrian Dennehy"},{"name":"Bill McKinney"},{"name":"Jack Starrett"},{"name":"Michael Talbott"},{"name":"Chris Mulkey"},{"name":"John McLiam"},{"name":"Alf Humphreys"},{"name":"David Caruso"},{"name":"Gregory Orr"},{"name":"Manuel Carballo"},{"name":"Mark Harris"},{"name":"Anna Nightingale"},{"name":"Honor Kneafsey"},{"name":"Ho jin Cheon"},{"name":"In jae Heo"},{"name":"Ku Jin"},{"name":"Ali Abbas Zafar"},{"name":"Willem Dafoe"},{"name":"Anne Archer"},{"name":"Thích Tiểu Long"},{"name":"Hạc Thiệu Văn"},{"name":"Đàm Tiểu Long"},{"name":"Robin Williamsffleck"},{"name":"Ewan McGregor"},{"name":"Renée Zellweger"},{"name":"David Hyde Pierce"},{"name":"George Clooney"},{"name":"Meryl Streep"},{"name":"Bill Murray"},{"name":"Nhậm Hiền Tề"},{"name":"Trần Quán Hy"},{"name":"Huỳnh Hiểu Minh"},{"name":"Lâm Bảo Di"},{"name":"Kim Myung Min"},{"name":"Yoo Hae Jin"},{"name":"Yeom Jung Ah"},{"name":"Jung Gyu Woon"},{"name":"Jonathan Teplitzky"},{"name":"Josh Lucas"},{"name":"Rachael Taylor and Keisha Castle Hughes"},{"name":"Julia Leigh"},{"name":"Robert Duvall"},{"name":"Diego Luna"},{"name":"Shan Khan"},{"name":"Rachel Weisz"},{"name":"Max Minghella"},{"name":"Oscar Isaac"},{"name":"Ashraf Barhom"},{"name":"Diane Keaton"},{"name":"Denzel Washington"},{"name":"Ethan Hawke"},{"name":"Scott Glenn"},{"name":"Alec Baldwin"},{"name":"Sean Pertwee"},{"name":"Samuel L. Jackson"},{"name":"Carrie Anne Moss"},{"name":"Michael Sheen"},{"name":"Rumer Willis"},{"name":"Carrie Fisher"},{"name":"Suphakit Tangthatswasd"},{"name":"Sean Bean"},{"name":"Colm Feore"},{"name":"Lawrence Ah Mon,Gordon Chan"},{"name":"Clive Owen"},{"name":"Keira Knightley"},{"name":"Billy Connolly"},{"name":"Jean Reno"},{"name":"Natalie Portman"},{"name":"Kevin Pollak"},{"name":"Serena Scott Thomas"},{"name":"Sophie MarceauSami Frey"},{"name":"Russell Crowe"},{"name":"Craig Bierko"},{"name":"Christopher Spencer"},{"name":"Hugh Jackman"},{"name":"Evangeline Lilly"},{"name":"Kevin Durand"},{"name":"Noona"},{"name":"Bie"},{"name":"Meritxell Ané"},{"name":"Óscar Barberán"},{"name":"Carles Canut"},{"name":"Gabriella Wilde"},{"name":"Alex Pettyfer"},{"name":"Bruce Greenwood"},{"name":"Sin hye Park"},{"name":"Hyun kyoon Lee"},{"name":"Geum Seok Yang"},{"name":"Kate BeckiMatt Dillon"},{"name":"Vera Farmiga"},{"name":"Stuart Beattie"},{"name":"Ingrid Bolsø Berdal"},{"name":"Marthe Snorresdotter Rovik"},{"name":"Kim Wifladt"},{"name":"Trần Gia Hoa"},{"name":"Ryan Gosling"},{"name":"Carey Mulligan"},{"name":"Bryan Cranston"},{"name":"AColin Hanks"},{"name":"Emma Stone"},{"name":"Sohail Khan"},{"name":"Denzel WashingtonEva Mendes"},{"name":"Trương Ngọc Hữu"},{"name":"Trương Mẫn"},{"name":"Tim Large"},{"name":"Jeremy King"},{"name":"Robb Maus"},{"name":"Chi-kin Kwok"},{"name":"Shin-yeon Won"},{"name":"Mark Wahlberg"},{"name":"Diane Lane"},{"name":"Elizabeth Taylor"},{"name":"Richard Burton"},{"name":"Rex Harrison"},{"name":"Ida Marie Bakkerud"},{"name":"Julie Rusti"},{"name":"Kim S. Falck Jørgensen"},{"name":"Nicolas Cage"},{"name":"Diane Kruger"},{"name":"Justin Bartha"},{"name":"Mylene Jampanoi"},{"name":"Lý Tiểu Nhiễm"},{"name":"Rakeysh Omprakash Mehra"},{"name":"Paul Giamatti"},{"name":"Evan Rachel Wood"},{"name":"Wing-cheong Law"},{"name":"Reinhard Klooss"},{"name":"John Leguizamo"},{"name":"Laurie Holden"},{"name":"Michael Shanks"},{"name":"Alexandra Davies"},{"name":"Saskia Hampele"},{"name":"Sean Faris"},{"name":"Tamer Hassan"},{"name":"Rebecca Da Costa"},{"name":"Jason Rothenberg"},{"name":"Stephen ElliottStephen Elliott"},{"name":"Robert Davi"},{"name":"Zoe Bell"},{"name":"Sid Haig"},{"name":"Sheri Moon Zombie"},{"name":"Bill Moseley"},{"name":"ApiRamita Mahapreukpong"},{"name":"Tony Rakkan"},{"name":"Unsumalin Sirasakpatharamaetha"},{"name":"Arak Amornsupasiri"},{"name":"Kom Chauncheun"},{"name":"Peerawat Herabat"},{"name":"Prachya Piew"},{"name":"Albert Dupontel"},{"name":"McG"},{"name":"Lee Joon"},{"name":"Seo Yeong Hee"},{"name":"Kang Shin Hyo"},{"name":"Melanie Lynskey"},{"name":"Frank Welker"},{"name":"David Ellis,Lex Halaby"},{"name":"Matthew McConaughey"},{"name":"Steve Zahn"},{"name":"Penelope Cruz"},{"name":"Mark WahlbergMichael Clarke DuPaul Giamatti"},{"name":"Estella Warren"},{"name":"Kippei Shiina"},{"name":"Ryo Kase"},{"name":"Vincent Elbaz"},{"name":"Grégori Derangère"},{"name":"Mélanie Bernier"},{"name":"Tom Gormican"},{"name":"Mark Waters"},{"name":"Steven Seagal"},{"name":"Mike Ching"},{"name":"Adrian Holmes"},{"name":"Nhạc Tùng"},{"name":"Lý Vũ Phi"},{"name":"Khang Ân"},{"name":"Mikkel Brænne Sandemose"},{"name":"Dolph Lundgren"},{"name":"Stefanie Von Pfetten"},{"name":"Samantha Ferris"},{"name":"David Lewis"},{"name":"Eduardo Schuldt"},{"name":"David Grovic"},{"name":"Jonathan Sobol"},{"name":"Bruce Dern"},{"name":"William Sanderson"},{"name":"Bobby Boermans"},{"name":"Kha Chấn Đông"},{"name":"Mae Whitman"},{"name":"Kristin Chenoweth"},{"name":"Raven Symoné"},{"name":"Lucy Liu"},{"name":"Tomoyuki Takimoto"},{"name":"Ed Stoppard"},{"name":"Leelee Sobieski"},{"name":"Jeffrey Tambor"},{"name":"Guk Dong-Suk"},{"name":"Yi-chi Lien"},{"name":"Hiroki Ryuichi"},{"name":"udi Dench"},{"name":"Cate Blanchett"},{"name":"Tom Georgeson"},{"name":"Michael Maloney"},{"name":"Ivana Baquero"},{"name":"Ariadna Gil"},{"name":"Sergi López"},{"name":"Simon Pegg"},{"name":"Martin Freeman"},{"name":"Charlie Cox"},{"name":"Claire Danes"},{"name":"Sienna Miller"},{"name":"Jung Jae Young"},{"name":"Han Ji Min"},{"name":"Cha Ye Ryun"},{"name":"Kim Ji Young"},{"name":"Kazuko Yoshiyuki"},{"name":"Yûji Miyake"},{"name":"Yûki Kudô"},{"name":"Spike Jonze"},{"name":"Nicole Kidman"},{"name":"Billy Zane"},{"name":"Alexis Bledel"},{"name":"Michael Keaton"},{"name":"Carol Burnett"},{"name":"Jin woong Jo"},{"name":"Eun woo Lee"},{"name":"Sebastián Silva"},{"name":"Jérôme Salle"},{"name":"Catherine Deneuve"},{"name":"Ian Hendry"},{"name":"John Fraser"},{"name":"Lauren Mote"},{"name":"Frédéric Diefenthal"},{"name":"Emma Wiklund"},{"name":"Jesse McCartney"},{"name":"Jane Horrocks"},{"name":"Caradog W. James"},{"name":"Shin Togashi"},{"name":"Paul Tanter"},{"name":"Joon-Hwan Jang"},{"name":"Tae woong Eom"},{"name":"Min jun Kim"},{"name":"Yi hyeon So"},{"name":"Freddie Highmore"},{"name":"Sarah Bolger and David Strathairn"},{"name":"Jae-rim Han"},{"name":"Richard Shepard"},{"name":"Andy On"},{"name":"Raiden Integra"},{"name":"Luxia Jiang"},{"name":"Ryuta Tazaki"},{"name":"Lan Ding"},{"name":"Qiuyan Huang"},{"name":"Jung Huh"},{"name":"Ronnie Thompson"},{"name":"Daniel Stamm"},{"name":"Hong-soo Park"},{"name":"Peter Segal"},{"name":"Vanessa Williams"},{"name":"Lưu Kiệt"},{"name":"Joon-ho Bong"},{"name":"Lê Chí"},{"name":"Richard Rich"},{"name":"Rob Thomas"},{"name":"Craig Moss"},{"name":"Sturla Gunnarsson"},{"name":"Peggy Holmes"},{"name":"Peter Lepeniotis"},{"name":"Puttipong Pormsaka Na-Sakonnakorn"},{"name":"Trương Vinh Cát"},{"name":"Brian Percival"},{"name":"Kenichi Shimizu"},{"name":"John Lee Hancock"},{"name":"Richard Rich,Tom Kane"},{"name":"Dong-yeob Shin"},{"name":"John Krokidas"},{"name":"Barry Cook,Neil Nightingale"},{"name":"Eddie Murphy"},{"name":"Gabrielle Union"},{"name":"Joo Won"},{"name":"Kim Ah Joong"},{"name":"Giang Chí Cường"},{"name":"Jake Goldberger"},{"name":"Shannon Yao"},{"name":"Lau Kar Leung"},{"name":"Kaare Andrews"},{"name":"Kuan Tai Chen"},{"name":"David Chiang"},{"name":"Mario Milano"},{"name":"John Huddles"},{"name":"Joon-ik Lee"},{"name":"Jeremy Lovering"},{"name":"Laila Boonyasak"},{"name":"Pijittra Siriwetchapan"},{"name":"Brandon Vietti"},{"name":"Lee Hyeon-jong"},{"name":"Woody Allen"},{"name":"Giancarlo Volpe"},{"name":"Jeremy Berg"},{"name":"Jean Sagal"},{"name":"Liz Sagal"},{"name":"James Vallely"},{"name":"Jonathan Schmock"},{"name":"Dennis Law"},{"name":"Kieran Parker"},{"name":"Nhiều Diễn Viên"},{"name":"Justin Long"},{"name":"Hayden Panettiere"},{"name":"Larry Miller"},{"name":"Wilson Chin"},{"name":"Rob Meltzer"},{"name":"Manuel Sicilia"},{"name":"Josh Stolberg"},{"name":"Bạch Bách Hà"},{"name":"Trương Hiếu Toàn"},{"name":"Phạm Vĩ Kì"},{"name":"An Tâm Á"},{"name":"Ngũ Tư Khải"},{"name":"Tạ Quân Hào."},{"name":"Marlee Matlin"},{"name":"James Denton"},{"name":"Paul Sorvin"},{"name":"Alexander Payne"},{"name":"Erik Matti"},{"name":"Trần Hạo Dân"},{"name":"Hà Trung Hoa"},{"name":"Ngô Nghị Tướng"},{"name":"Jay Chou"},{"name":"Michèle Mercier"},{"name":"Robert Hossein"},{"name":"Jean Rochefort"},{"name":"Jacques Toja"},{"name":"Sae Byeok Song"},{"name":"Si young Lee"},{"name":"Yun shik Baek"},{"name":"Ji won Ha"},{"name":"Myung min Kim"},{"name":"Neung mi Nam"},{"name":"Ha ryong Lim"},{"name":"Chen Yao"},{"name":"Leon Dai"},{"name":"Amy Adams"},{"name":"Jesdaporn Pholdee"},{"name":"Chaichan Nimpulsawasdi"},{"name":"Goo-Bi GC"},{"name":"Brandon Auret"},{"name":"Brian Baynes"},{"name":"Christopher Beasley"},{"name":"Julia Roberts"},{"name":"Suk kyu Han"},{"name":"Yunjin Kim"},{"name":"Chloë Grace Moretz"},{"name":"Blake Lively"},{"name":"Rory Culkin"},{"name":"Ray Liotta"},{"name":"Jason Clarke"},{"name":"Emma Booth and David Lyons"},{"name":"Amanda Seyfried"},{"name":"Peter Sarsgaard"},{"name":"Juno Temple"},{"name":"Michael Caine"},{"name":"Michelle Goddet"},{"name":"Jane Alexander"},{"name":"Serge Hollogne"},{"name":"Robert De Niro"},{"name":"Madonna"},{"name":"David Bowie"},{"name":"Snoop Dogg"},{"name":"Will Smith"},{"name":"Thandie Newton"},{"name":"Jaden Smith"},{"name":"Brian Howe"},{"name":"Anna Paquin"},{"name":"Mark Ruffalo"},{"name":"Toni Servillo"},{"name":"Carlo Verdone"},{"name":"Sabrina Ferilli"},{"name":"Kiefer Sutherland and Kim Basinger"},{"name":"Woody Harrelson"},{"name":"Jennifer Lopez"},{"name":"Sidney Poitier"},{"name":"Rod Steiger"},{"name":"Warren Oates"},{"name":"Lee Grant"},{"name":"Lưu Đức Hoa"},{"name":"Lữ Lương Vỹ"},{"name":"Hồ Quân"},{"name":"Lâm Gia"},{"name":"Diêu Thần"},{"name":"Charles Chaplin"},{"name":"Merna Kennedy"},{"name":"Al Ernest Garcia"},{"name":"Claire Bloom"},{"name":"Nigel Bruce"},{"name":"Keenen Ivory Wayans"},{"name":"Bob Gunton"},{"name":"Yui chan"},{"name":"Suguha"},{"name":"Kirito"},{"name":"Seung beom Ryu"},{"name":"So yi Yoon"},{"name":"Khương Đại Vệ"},{"name":"Jean Claude Van Damme"},{"name":"Robert Guillaume"},{"name":"Cynthia Gibb"},{"name":"Ryûhei Matsuda"},{"name":"Shinji Takeda"},{"name":"Angela Mao"},{"name":"John Liu"},{"name":"Tai Lun Chang"},{"name":"Khương Đại vệ"},{"name":"Trần Quang Thái"},{"name":"Bryan Ramirez"},{"name":"Mack Swain"},{"name":"Tom Murray"},{"name":"Jakie Chan"},{"name":"Vivian Hsu"},{"name":"Eric Tsang"},{"name":"Biao Yuen"},{"name":"Kenny Bee"},{"name":"Pam Grier"},{"name":"Henry Silva"},{"name":"Anita Mui"},{"name":"Françoise Yip"},{"name":"Richard Curtis"},{"name":"Mikael Salomon"},{"name":"Danny Aiello"},{"name":"Sandy Alexander"},{"name":"Paulette Goddard"},{"name":"Jack Oakie"},{"name":"Pornchai Hongrattaporn"},{"name":"Patrick McGoohan"},{"name":"Roberts Blossom"},{"name":"Kobun Shizuno"},{"name":"Cheung Yan Yuen"},{"name":"Lydia Shum"},{"name":"Wai Man Chan"},{"name":"Yang Chang"},{"name":"Chuan Chen"},{"name":"Feng Chen Chen"},{"name":"Byeong-woo Kim"},{"name":"Chia Hui Liu"},{"name":"Sheng Fu"},{"name":"Lily Li"},{"name":"Siu Tien Yuen"},{"name":"Jang Lee Hwang"},{"name":"Dean Shek"},{"name":"Han Chin"},{"name":"Oxide Pang Chun,Danny Pang"},{"name":"Tadanobu Asano"},{"name":"Michiyo Ohkusu"},{"name":"Geoffrey Lewis"},{"name":"Paul Aylett"},{"name":"Gonzalo López-Gallego"},{"name":"Nappon Gomarachun"},{"name":"Santisuk Promsiri"},{"name":"Dan Chupong"},{"name":"Frank W. Montag"},{"name":"Hua Chung"},{"name":"Mei Sheng Fan"},{"name":"Chung Hsin Huang"},{"name":"Pai Wei"},{"name":"Dương Cung Như"},{"name":"Jacky Cheung"},{"name":"Yiu Sing Cheung"},{"name":"Shun Lau"},{"name":"Raul Julia"},{"name":"Ming Na Wen"},{"name":"James Tien"},{"name":"Mike Mendez"},{"name":"Triệu Văn Trác"},{"name":"Wenzhuo Zhao"},{"name":"Jean Wang"},{"name":"Siu Chung Mok"},{"name":"Ronald Cheng"},{"name":"Miki Yeung"},{"name":"Michelle Yeoh"},{"name":"Michael Wong"},{"name":"Tien chi Cheng"},{"name":"Tien Hsiang Lung"},{"name":"Meng Lo"},{"name":"Jing Bai"},{"name":"Shaoqun Yu"},{"name":"Collin Chou"},{"name":"Tak Wa Chow"},{"name":"Zhi Hua Dong"},{"name":"Siu-Tung Ching"},{"name":"Roger Moore"},{"name":"James Remar"},{"name":"Kent Cheng"},{"name":"Kong Foo Keung"},{"name":"Gordon Chan,Andy Wing-Keung Chin"},{"name":"Lieh Lo"},{"name":"Ping Wang"},{"name":"Hsiung Chao"},{"name":"Qi Shu"},{"name":"Ching Ying Lam"},{"name":"Leslie Cheung"},{"name":"Joey Wang"},{"name":"Ma Wu"},{"name":"Bubba Smith"},{"name":"David Graf"},{"name":"Michael Winslow"},{"name":"Aya Ueto"},{"name":"Kenji Kohashi"},{"name":"Hiroki Narimiy"},{"name":"Richard Zhuang"},{"name":"Fedor Bondarchuk"},{"name":"Drew Barrymore"},{"name":"Chung Hân Đồng"},{"name":"Trương Trí Lâm"},{"name":"Huệ Ánh Hồng"},{"name":"Cao Hổ"},{"name":"Julie Harris"},{"name":"Richard Johnson"},{"name":"Maggie Cheung"},{"name":"Rina Takeda"},{"name":"Hina Tobimatsu"},{"name":"Richard Heselton"},{"name":"Keisuke Horibe"},{"name":"Noriko Iriyama"},{"name":"Tatsuya Naka"},{"name":"Fuyuhiko Nishi"},{"name":"Saori Takizawa"},{"name":"Kazutoshi Yokoyama"},{"name":"James Gandolfini"},{"name":"Brigitte Lin"},{"name":"Leslie Cheun"},{"name":"Kazuchika Kise"},{"name":"Joseph Gordon-Levitt"},{"name":"G.W. Bailey"},{"name":"George Gaynes"},{"name":"Michelle Reis"},{"name":"Billy Chow"},{"name":"Brendan Fraser"},{"name":"Sienna Guillory"},{"name":"Eliza Bennett"},{"name":"Richard Strange"},{"name":"Yue Wong"},{"name":"Lung Wei Wang"},{"name":"Edward Burns"},{"name":"Kelsey Grammer"},{"name":"Brian Matthews"},{"name":"Leah Ayres"},{"name":"Brian Backer"},{"name":"Larry Joshua"},{"name":"Steve Guttenberg"},{"name":"Woo seong Kam"},{"name":"Jeong hwa Eom"},{"name":"Won sang Park"},{"name":"Peter Hyams"},{"name":"Anthony Hopkins"},{"name":"Claire Forlani"},{"name":"Jake Weber"},{"name":"Louise Bourgoin"},{"name":"Pio Marmaï"},{"name":"Josiane Balasko"},{"name":"Thierry Frémont"},{"name":"Shane Carruth"},{"name":"Saif Ali Khan"},{"name":"Kunal Khemu"},{"name":"Vir Das"},{"name":"Anand Tiwari"},{"name":"Klaus Kinski"},{"name":"Isabelle Adjani"},{"name":"Bruno Ganz"},{"name":"Roland Topor"},{"name":"Kim Min Jung"},{"name":"Chun Jung Myung"},{"name":"Kim Ki Bang"},{"name":"Jack Nance"},{"name":"Charlotte Stewart"},{"name":"Allen Joseph"},{"name":"Jeanne Bates"},{"name":"Jean Paul Belmondo"},{"name":"Claudia Cardinale"},{"name":"Jess Hahn"},{"name":"Marcel Dalio"},{"name":"John Wayne"},{"name":"Katharine Hepburn"},{"name":"Anthony Zerbe"},{"name":"Richard Jordan"},{"name":"Will Ferrell"},{"name":"Shirley MacLaine"},{"name":"Billy Unger"},{"name":"Sammi Hanratty"},{"name":"James Hong"},{"name":"George Dzundza"},{"name":"Steven Bauer"},{"name":"Stephen Baldwin"},{"name":"Hoi Sang Lee"},{"name":"Deepika Padukone"},{"name":"Satyaraj"},{"name":"Nikitin Dheer"},{"name":"Alfonso Cuarón"},{"name":"Jeff Goldblum"},{"name":"Geena Davis"},{"name":"John Getz"},{"name":"Joy Boushel"},{"name":"Christopher Walken"},{"name":"Victor Argo"},{"name":"Queen Latifah"},{"name":"Phạm Băng Băng"},{"name":"Huỳnh Giác"},{"name":"Vương Học Kỳ"},{"name":"Jean Paul Rouve"},{"name":"Sophie Quinton"},{"name":"Guillaume Gouix"},{"name":"Olivier Rabourdin"},{"name":"Shôsuke Tanihara"},{"name":"Muga Tsukaji"},{"name":"Keiko Kitagawa"},{"name":"Mayumi Sada"},{"name":"Danny Trejo"},{"name":"Jenny Gabrielle"},{"name":"Brandon Teena"},{"name":"Lana Tisdel"},{"name":"John Lotter"},{"name":"Tom Nissen"},{"name":"Konstantin Khabenskiy"},{"name":"Elizaveta Boyarskaya"},{"name":"Sergey Bezrukov"},{"name":"Vladislav Vetrov"},{"name":"Anna Kovalchuk"},{"name":"Egor Beroev"},{"name":"Richard Bohringer"},{"name":"Yu Wang"},{"name":"Anna Aoi"},{"name":"Rei Fujita"},{"name":"Yukijirô Hotaru"},{"name":"Chonkan Poonsiriwong"},{"name":"Kornkamol Chareonchai"},{"name":"Sissy Spacek"},{"name":"Piper Laurie"},{"name":"Amy Irving"},{"name":"Yuka Mizuno"},{"name":"Lung Chan"},{"name":"Kang Yeh Cheng"},{"name":"Izabella Miko"},{"name":"Julian Wadham"},{"name":"Hristo Shopov"},{"name":"Josephine Siao"},{"name":"Sibelle Hu Kịch bản: Kung Yung Chai"},{"name":"Kin Chung Chan"},{"name":"Jeffrey Wright"},{"name":"Busta Rhymes"},{"name":"Dan Hedaya"},{"name":"Nhiều Diễn Viên"},{"name":"Faye Dunaway"},{"name":"Cliff Robertson"},{"name":"Max von Sydow"},{"name":"Virginia Madsen"},{"name":"Martin Donovan"},{"name":"Mads Mikkelsen"},{"name":"Giuseppe Tornatore"},{"name":"Ranbir Kapoor"},{"name":"Nargis Fakhri"},{"name":"Shammi Kapoor"},{"name":"Shikha Jain"},{"name":"Robert Mitchum"},{"name":"Richard Widmark"},{"name":"Lola Albright"},{"name":"Sally Field"},{"name":"Katherine Justice"},{"name":"Jack Elam"},{"name":"Stubby Kaye"},{"name":"Lý Trị Đình"},{"name":"Lê Minh"},{"name":"Tim Conway"},{"name":"Pam Ferris"},{"name":"Joan Collins"},{"name":"Jason Friedberg,Aaron Seltzer"},{"name":"Won Bin"},{"name":"Shin Hyun Joon"},{"name":"Shin Ha Kyun"},{"name":"Jeong Jae Yeong"},{"name":"Gong Hyo Jin"},{"name":"Richard Harris"},{"name":"James Coburn"},{"name":"Richard Jaeckel"},{"name":"Katy Jurado"},{"name":"Johnny Tri Nguyen"},{"name":"Nanthawut Boonrubsub"},{"name":"Sasisa Jindamanee"},{"name":"Kim Cương"},{"name":"Kam Chiang"},{"name":"Hoàng Chính Lợi"},{"name":"Kong Kim"},{"name":"Yuen Lung"},{"name":"Tien Miao"},{"name":"Wei Ho Tu"},{"name":"Tiffany Dupont"},{"name":"John Noble"},{"name":"Omar Sharif"},{"name":"Jamie Lee Curtis"},{"name":"Mark Harmon"},{"name":"Harold Gould"},{"name":"Pichai Noirod"},{"name":"Rino Romano"},{"name":"Tara Strong"},{"name":"Tommy Lee Jones"},{"name":"Vince Vaughn"},{"name":"Đường Yên"},{"name":"Lưu Sướng"},{"name":"Lý Thạnh"},{"name":"Tiết Hạo Văn"},{"name":"Katie Maguire"},{"name":"Mike Giannelli"},{"name":"Catherine A. Callahan"},{"name":"Marie Maser"},{"name":"Kayla Lian"},{"name":"Cole Mathewson"},{"name":"Sydney Freihofer"},{"name":"Michael Chmiel"},{"name":"Brandon deSpain"},{"name":"Robyn Kerr"},{"name":"Sam Rockwell"},{"name":"Michael Angarano"},{"name":"Ben Affleck"},{"name":"Christina Applegate"},{"name":"Catherine O’Hara"},{"name":"Lee Jung jae"},{"name":"Jun Ji hyun"},{"name":"Tina Fey"},{"name":"Ken Takakura"},{"name":"Brian Keith"},{"name":"Herb Edelman"},{"name":"Eiji Okada"},{"name":"James Shigeta"},{"name":"Kyôsuke Machida"},{"name":"Olivia Hussey"},{"name":"Keir Dullea"},{"name":"Margot Kidder"},{"name":"Eva Green"},{"name":"María Valverde"},{"name":"Dustin Hoffman"},{"name":"Sharon Stone"},{"name":"Peter Coyote"},{"name":"Marga Gómez"},{"name":"Greg Kinnear"},{"name":"Jennifer Connelly"},{"name":"Lily Collins"},{"name":"Kristen Bell"},{"name":"Emma Thompson"},{"name":"James Fleet"},{"name":"Tom Wilkinson"},{"name":"Nastassja Kinski"},{"name":"Malcolm McDowell"},{"name":"John Heard"},{"name":"Annette O’Toole"},{"name":"Siam Yu"},{"name":"Kolton Stewart"},{"name":"Gage Munroe"},{"name":"Michael Friend"},{"name":"Gena Rowlands"},{"name":"Tony Shalhoub"},{"name":"Cheech Marin"},{"name":"Bruce Davison"},{"name":"Malin Akerman"},{"name":"Tyler Labine"},{"name":"Lucy Punch"},{"name":"Dan Petronijevic"},{"name":"Haaz Sleiman"},{"name":"Danai Gurira"},{"name":"Hiam Abbass"},{"name":"Wallace Shawn"},{"name":"Corey Burton"},{"name":"Jonathan Breck"},{"name":"Ray Wise"},{"name":"Nicki Aycox"},{"name":"Garikayi Mutambirwa"},{"name":"William Baldwin"},{"name":"Kim Bodnia"},{"name":"Sarah Butler"},{"name":"Ole Dupont"},{"name":"Calista Flockhart"},{"name":"Richard Roxburgh"},{"name":"Elena Anaya"},{"name":"Gemma Jones"},{"name":"Aaron Kwok"},{"name":"Chen Chang"},{"name":"Gwei Lun Mei"},{"name":"Yu Xia"},{"name":"Aitana Sánchez Gijón"},{"name":"Anthony Quinn"},{"name":"Giancarlo Giannini"},{"name":"Joe Mantegna"},{"name":"Robert John Burke"},{"name":"Lucinda Jenney"},{"name":"Michael Constantine"},{"name":"Robin Williams"},{"name":"Hannah Taylor Gordon"},{"name":"Éva Igó"},{"name":"Justus von Dohnányi"},{"name":"Saoirse Ronan"},{"name":"Clare Barrett"},{"name":"Padraic Delaney"},{"name":"Robert Donnelly"},{"name":"Richard Dormer"},{"name":"Abigail Breslin"},{"name":"Stephen McHattie"},{"name":"David Hewlett"},{"name":"Sarah Manninen"},{"name":"Bill Sage"},{"name":"Ambyr Childers"},{"name":"Julia Garner"},{"name":"Wyatt Russell"},{"name":"Tom Holland"},{"name":"Harley Bird"},{"name":"Pei pei Cheng"},{"name":"Hsin Yen Chao"},{"name":"Miyoko Shôji"},{"name":"Mami Koyama"},{"name":"Fumiko Orikasa"},{"name":"Shôzô Iizuka"},{"name":"Eric Heisserer"},{"name":"Angus MacLane"},{"name":"Edgar Wright"},{"name":"Robert Luketic"},{"name":"Kiefer Sutherland"},{"name":"Kim Basinger"},{"name":"Dominic Purcell"},{"name":"Natassia Malthe"},{"name":"Conan Stevens"},{"name":"Keiji Fujiwara"},{"name":"Rei Igarashi"},{"name":"Mayu Iino"},{"name":"Honoka Ikezuki"},{"name":"Tomoyo Kurosawa"},{"name":"Forest Whitaker"},{"name":"Miranda Richardson"},{"name":"Stephen Rea"},{"name":"Lương Phổ Trí"},{"name":"William Moseley"},{"name":"Eric Roberts"},{"name":"Kelsey Chow"},{"name":"Adrian Pasdar"},{"name":"Scott Adkins"},{"name":"Yi Huang"},{"name":"Lee Seung-jun"},{"name":"Ayan Mukherjee"},{"name":"Stephen Sommers"},{"name":"Christina Vidal"},{"name":"Michael J. Pagan"},{"name":"Samantha Noble"},{"name":"Klay Hall"},{"name":"Brady Coleman"},{"name":"Mikael Håfström"},{"name":"Circus Kids"},{"name":"Ngọ Mã"},{"name":"Ornjira Lamwilai"},{"name":"Kritteera Inpornwijit"},{"name":"Patharawarin Timkul"},{"name":"Henry Saine"},{"name":"Nhiều diễn viên"},{"name":"Jensen Daggett"},{"name":"Kane Hodder"},{"name":"Todd Caldecott"},{"name":"Tiffany Paulsen"},{"name":"Lee Do Yeon"},{"name":"Cho Jin Woong"},{"name":"Charlie Tahan"},{"name":"Meat Loaf"},{"name":"Gabriel Macht"},{"name":"Deborah Kara Unger"},{"name":"Frankie Muniz"},{"name":"Amanda Bynes"},{"name":"Nawajul Boonpakkanawik"},{"name":"Carl Bessai"},{"name":"Eddie Redmayne"},{"name":"John Lynch"},{"name":"Tim McInnerny"},{"name":"Mike Mitchell"},{"name":"Eric Thal"},{"name":"Julie Warner"},{"name":"Keith David"},{"name":"Dante Lam"},{"name":"Mario Maurer"},{"name":"Nudtawat Saksiri"},{"name":"Dennis Dugan"},{"name":"Cassandra Clare"},{"name":"Marguerite Sundberg"},{"name":"Michael Flores"},{"name":"Mark Chiappone"},{"name":"Beth Pratt"},{"name":"Hua Yueh"},{"name":"Hsi Chang"},{"name":"Hoắc Diệu Lương"},{"name":"John S. Flynn"},{"name":"Heather Gordon"},{"name":"Aaron Krebs"},{"name":"Shunsuke Daitô"},{"name":"Narushi Ikeda"},{"name":"Nana Katase"},{"name":"Tsuyoshi Muro"},{"name":"Lawrence Guterman"},{"name":"Jared Leto"},{"name":"Alicia Witt"},{"name":"Rebecca Gayheart"},{"name":"Michael Rosenbaum"},{"name":"Edward Woodward"},{"name":"Christopher Lee"},{"name":"Diane Cilento"},{"name":"Britt Ekland"},{"name":"Pierre Coffin,Chris Renaud"},{"name":"Sigrid Horne Rasmussen"},{"name":"Ann Marie Berglund"},{"name":"Else Petersen"},{"name":"Anne Magle"},{"name":"Steve Evets"},{"name":"Eric Cantona"},{"name":"Stephanie Bishop"},{"name":"Eduardo Rodriguez"},{"name":"Vinnie Jones"},{"name":"Randy Couture"},{"name":"Rusty Joiner"},{"name":"Masiela Lusha"},{"name":"Wesley John"},{"name":"Isaac C. Singleton Jr."},{"name":"Christina Lindberg"},{"name":"Heinz Hopf"},{"name":"Despina Tomazani"},{"name":"Per Axel Arosenius"},{"name":"Hạ Vũ"},{"name":"Chu Hoằng"},{"name":"La Kinh Dân"},{"name":"Khương Hàn"},{"name":"Thường Xa"},{"name":"Từ Khiết Nhi"},{"name":"Emily Watson"},{"name":"Yu mi Jeong"},{"name":"Byeol Kim"},{"name":"Gi su Kim"},{"name":"Ji yeong Kim"},{"name":"Zabou Breitman"},{"name":"Déborah François"},{"name":"Marc André Grondin"},{"name":"Ryûnosuke Kamiki"},{"name":"Daisuke Ono"},{"name":"Takeshi Tomizawa"},{"name":"Giorgio Serafini,Shawn Sourgose"},{"name":"Telly Savalas"},{"name":"Don Rickles"},{"name":"Dee Wallace"},{"name":"Patrick Macnee"},{"name":"Kim Darby"},{"name":"Glen Campbell"},{"name":"Jeremy Slate"},{"name":"Zack Bernbaum"},{"name":"Chung Hán Lương"},{"name":"Ái Đới"},{"name":"Robert Taylor"},{"name":"Deborah Kerr"},{"name":"Leo Genn"},{"name":"Nat Faxon,Jim Rash"},{"name":"Ben Jones"},{"name":"Ryôko Hirosue"},{"name":"Kaoru Kobayashi"},{"name":"Ken Kaneko"},{"name":"Henry Alex Rubin"},{"name":"Bradford Dillman"},{"name":"Heather Menzies Urich"},{"name":"Kevin McCarthy"},{"name":"Keenan Wynn"},{"name":"Dick Miller"},{"name":"Barbara Steele"},{"name":"Belinda Balaski"},{"name":"Melody Thomas Scott"},{"name":"Bruce Gordon"},{"name":"Barry Brown"},{"name":"Paul Bartel"},{"name":"Carlos Evelyn"},{"name":"Ariana Messias"},{"name":"Darci Figueiredo"},{"name":"Beto Simas"},{"name":"Jamie Foxx"},{"name":"Regina King"},{"name":"Clifton Powell"},{"name":"Harry Lennix"},{"name":"Aunjanue Ellis"},{"name":"Sharon Warren"},{"name":"C.J. Sanders"},{"name":"Bruce Payne"},{"name":"Alex Datcher"},{"name":"Robert Hooks"},{"name":"Elizabeth Hurley"},{"name":"Michael Horse"},{"name":"Marc Macaulay"},{"name":"Ernie Lively"},{"name":"Craig T. Nelson"},{"name":"JoBeth Williams"},{"name":"Beatrice Straight"},{"name":"Arsenio Hall"},{"name":"James Earl Jones"},{"name":"John Amos"},{"name":"Madge Sinclair"},{"name":"Shari Headley"},{"name":"Paul Bates"},{"name":"Eriq La Salle"},{"name":"Frankie Faison"},{"name":"Vanessa Bell Calloway"},{"name":"Louie Anderson"},{"name":"Allison Dean"},{"name":"Hilary Swank"},{"name":"Imelda Staunton"},{"name":"Patrick Dempsey"},{"name":"Peter Michael Dillon"},{"name":"Lara Daans"},{"name":"Christian Slater"},{"name":"Jordan Ladd"},{"name":"Lương Gia Huy"},{"name":"Trần Tuệ Lâm"},{"name":"Thiệu Mỹ Kỳ"},{"name":"Jeannie Chan"},{"name":"Kelly Chen"},{"name":"Tony Leung Ka Fai"},{"name":"Cherry Ngan"},{"name":"Shaw Yin Yin"},{"name":"Heather O'Rourke"},{"name":"Ngô Ngạn Tổ"},{"name":"Trương Vũ Ỷ"},{"name":"Lập Uy Liêm"},{"name":"Kitty Zhang Yuqi"},{"name":"Leon Jay Williams"},{"name":"Eman Lam"},{"name":"Edison Chen"},{"name":"Woo-Suk Kang"},{"name":"David Twohy"},{"name":"Ngô Thần Quân"},{"name":"Jackson Liu"},{"name":"Steven R. Monroe"},{"name":"Betty Aberlin"},{"name":"Paulie Litt"},{"name":"Raquel Castro"},{"name":"Ben Aff"},{"name":"Carlo Cecchi"},{"name":"Jean Luc Bideau"},{"name":"Christoph Koncz"},{"name":"Tommaso Puntelli"},{"name":"Samuele Amighetti"},{"name":"Aldo Brugnini"},{"name":"Matt Dillon"},{"name":"Breckin Meyer"},{"name":"Katie Chang"},{"name":"Israel Broussard"},{"name":"Emma Watson"},{"name":"Claire Julien"},{"name":"Taissa Farmiga"},{"name":"Georgia Rock"},{"name":"Leslie Mann"},{"name":"William Holden"},{"name":"Jennifer Jones"},{"name":"Torin Thatcher"},{"name":"Isobel Elsom"},{"name":"Murray Matheson"},{"name":"Virginia Gregg"},{"name":"Richard Loo"},{"name":"Frank Sinatra"},{"name":"Trevor Howard"},{"name":"Raffaella Carrà"},{"name":"Brad Dexter"},{"name":"Sergio Fantoni"},{"name":"John Leyton"},{"name":"Edward Mulhare"},{"name":"Wolfgang Preiss"},{"name":"James Brolin"},{"name":"John Van Dreelen"},{"name":"Adolfo Celi"},{"name":"Vito Scotti"},{"name":"Michael Goodliffe"},{"name":"Keith Gordon"},{"name":"Alexandra Paul"},{"name":"Eli Marienthal"},{"name":"Harry Connick Jr."},{"name":"Jennifer Aniston"},{"name":"Vương Phi"},{"name":"Lâm Thanh Hà"},{"name":"Kim Thành Vũ"},{"name":"Đổng Phiêu"},{"name":"Jamel Debbouze"},{"name":"Rie Rasmussen"},{"name":"Gilbert Melki"},{"name":"Serge Riaboukine"},{"name":"Akim Chir"},{"name":"Eric Balliet"},{"name":"Loïc Pora"},{"name":"Venus Boone"},{"name":"Laurent Jumeaucourt"},{"name":"Laura Michelle Kelly"},{"name":"Ronan Keating"},{"name":"Magda Szubanski"},{"name":"Dustin Clare"},{"name":"Douglas Silva"},{"name":"Darlan Cunha"},{"name":"Jonathan Haagensen"},{"name":"Ji tae Yu"},{"name":"Yeon hee Lee"},{"name":"Jeong an Chae"},{"name":"Kang In"},{"name":"Hee yong Choi"},{"name":"Min ho Choi"},{"name":"Jeong hwa Chu"},{"name":"Seok jeong Hwang"},{"name":"Pool Kang"},{"name":"Kang woo Kim"},{"name":"Ashley Tisdale"},{"name":"Lauren Collins"},{"name":"Shenae Grimes"},{"name":"Ally Sheedy"},{"name":"Fisher Stevens"},{"name":"Austin Pendleton"},{"name":"James Stewart"},{"name":"Shelley Winters"},{"name":"Dan Duryea"},{"name":"Stephen McNally"},{"name":"Millard Mitchell"},{"name":"Charles Drake"},{"name":"John McIntire"},{"name":"Jean Dujardin"},{"name":"Tim Roth"},{"name":"Émilie Dequenne"},{"name":"David M. Rosenthal"},{"name":"Whoopi Goldberg"},{"name":"Predrag Manojlovic"},{"name":"Lazar Ristovski"},{"name":"Mirjana Jokovic"},{"name":"Slavko Stimac"},{"name":"Ernst Stötzner"},{"name":"Srdjan Todorovic"},{"name":"Mirjana Karanovic"},{"name":"Rosie Day"},{"name":"Kevin Howarth"},{"name":"Anna Walton"},{"name":"François Arnaud"},{"name":"Lucy Boynton"},{"name":"Casey Thomas Brown"},{"name":"Billy Campbell"},{"name":"Embeth Davidtz"},{"name":"Oliver Platt"},{"name":"Kiersten Warren"},{"name":"Wendy Crewson"},{"name":"Hallie Kate Eisenberg"},{"name":"Angela Landis"},{"name":"John Michael Higgins"},{"name":"Bradley Whitford"},{"name":"Stephen Root"},{"name":"Gonzalo Vega"},{"name":"Karla Souza"},{"name":"Luis Gerardo Méndez"},{"name":"Jeff Renfroe"},{"name":"Junior N.T.R."},{"name":"Tamannaah Bhatia"},{"name":"Prakash Raj"},{"name":"Vidyut Jamwal"},{"name":"Ed Anders"},{"name":"Cole Coker"},{"name":"Erin Karpluk"},{"name":"Brad Kelly"},{"name":"Tyron Leitso"},{"name":"Irandhir Santos"},{"name":"James Garner"},{"name":"Álex González"},{"name":"Adriana Ugarte"},{"name":"Alberto Ammann"},{"name":"Tony Jaa"},{"name":"Jeff Wadlow"},{"name":"Yong-hwa Kim"},{"name":"Robert Vince"},{"name":"Richard Raaphorst"},{"name":"Jeppe Laursen"},{"name":"Charlotte Frogner"},{"name":"Jenny Skavlan"},{"name":"Nick Swardson"},{"name":"Lance Bass"},{"name":"Blake Clark"},{"name":"Kao Yin Hsuan"},{"name":"Egidio Coccimiglio"},{"name":"Park Hye Sook"},{"name":"Park Ki Woong"},{"name":"Soo Hyun Kim"},{"name":"Nobuyo Oyama"},{"name":"Noriko Ohara"},{"name":"Michiko Nomura"},{"name":"Kaneta Kimotsuki"},{"name":"Nobuyo Ohyama"},{"name":"Noriko Ohara and Michiko Nomura"},{"name":"Thor Freudenthal"},{"name":"Daniele Vicari"},{"name":"Peter Webber"},{"name":"Dito Montiel"},{"name":"Yukiyo Teramoto"},{"name":"Ui-seok Jo,Byung-seo Kim"},{"name":"David Soren"},{"name":"Brit Marling"},{"name":"Alexander Skarsgård"},{"name":"Ellen Page"},{"name":"Toby Kebbell"},{"name":"Naresh Kumar"},{"name":"TayShawn Prinse"},{"name":"Manwinder Gill"},{"name":"Kazuya Tatekabe"},{"name":"Joo Ji hoon"},{"name":"Baek Yoon sik"},{"name":"Byeon Hee bong"},{"name":"Michiko nomura"},{"name":"Noriko ohara"},{"name":"Nobuyo oyama"},{"name":"Klaus Hüttmann"},{"name":"Kaneta kimotsuki"},{"name":"Kazuya tatekabe"},{"name":"Kaneta Kimotsuk"},{"name":"Justin Zackham"},{"name":"Dean Parisot"},{"name":"Williams Belle"},{"name":"Chau Belle Dinh"},{"name":"Malik Diouf"},{"name":"Yann Hnautra"},{"name":"Châu Belle Dinh"},{"name":"John Belushi"},{"name":"Dan Aykroyd"},{"name":"Cab Calloway"},{"name":"Rapeepimol Chaiyasena"},{"name":"Neil Jordan"},{"name":"Yong-gyun Kim"},{"name":"Baz Luhrmann"},{"name":"Yûzô Satô"},{"name":"Mateo Frazier,Diego Joaquin Lopez"},{"name":"Paul Schrader"},{"name":"Bành Vu Yến"},{"name":"Matt Orlando"},{"name":"Sacha Bennett"},{"name":"Kyung gu Sol"},{"name":"Jun ho Heo"},{"name":"Jae yeong Jeong"},{"name":"Meaghan Martin"},{"name":"Donn Lamkin"},{"name":"Linden Ashby"},{"name":"Malcolm D. Lee"},{"name":"Andrew Goth"},{"name":"Choon-sik Kim"},{"name":"Ken Lo"},{"name":"Sibelle Hu"},{"name":"Mai Diễm Phương"},{"name":"Christopher Hatton"},{"name":"Chung Sở Hồng"},{"name":"Dư Mộ Liên"},{"name":"Youn-hyun Chang"},{"name":"Jo Dong-Oh"},{"name":"Jannicke Systad Jacobsen"},{"name":"Eason Chan"},{"name":"Jo Kuk and Cherrie Ying"},{"name":"Barry Bostwick"},{"name":"Michael Steger"},{"name":"Melvin Sia"},{"name":"Henley Hii"},{"name":"Hero Tai"},{"name":"Rayz Lim"},{"name":"Billy Ng"},{"name":"Quách Phú Thành"},{"name":"Beom-sik Jeong,Hwi Kim"},{"name":"Diệp Đồng"},{"name":"Tần Hào"},{"name":"Lưu Tuân"},{"name":"Lưu Hiểu Đồng"},{"name":"Viên Vịnh Nghi"},{"name":"Trương Đạt Minh"},{"name":"Phùng Đức Luân"},{"name":"Đường Văn Long"},{"name":"Huỳnh Cẩm Vinh"},{"name":"Yuen Biao"},{"name":"Cynthia Rothrock"},{"name":"Roy Chiao"},{"name":"Siu Wong Fan"},{"name":"Melvin Wong"},{"name":"Karen Sheperd"},{"name":"Chad Crawford Kinkle"},{"name":"Kevin Goetz,Michael Goetz"},{"name":"Tạ Đình Phong"},{"name":"Jingchu Zhang"},{"name":"Lưu Gia Linh"},{"name":"Trần Dịch Tấn"},{"name":"Lý San San"},{"name":"Từ Tử Kỳ"},{"name":"Ching Wan Lau"},{"name":"Sharla Cheung and Joe Cheng"},{"name":"Kuang Chao Chiangnd Lin Dai"},{"name":"Olivia HoltKerris Dorsey"},{"name":"Dominic Burns"},{"name":"Joseph Brown"},{"name":"David Chokachi"},{"name":"Jared Cohn"},{"name":"Nicole Gale Anderson"},{"name":"John Billingsley"},{"name":"Kunal Sharma"},{"name":"Akan Satayev"},{"name":"David Kew,Neil Thompson"},{"name":"Feth Greenwood"},{"name":"Dylan Jones"},{"name":"Lee Bennett"},{"name":"Mark Steven Johnson"},{"name":"Ching Lee"},{"name":"Lung Ti"},{"name":"Craig ShefferEric Roberts"},{"name":"Darren Lynn Bousman"},{"name":"Yoshihiro Ueda"},{"name":"Vương Vũ"},{"name":"Gregory McQualter"},{"name":"Lowell Dean"},{"name":"Chiao Chiao"},{"name":"Essie Lin Chia"},{"name":"Joséphine de La Baume"},{"name":"Milo Ventimiglia"},{"name":"Roxane Mesquida"},{"name":"Martin Zandvliet"},{"name":"Lâm Trân Chiêu"},{"name":"Coralie Fargeat"},{"name":"Darin Scott"},{"name":"Park Hee Joon"},{"name":"Heo Joon-Hyung"},{"name":"Pasha Patriki"},{"name":"Beom-sik Jeong"},{"name":"Ava DuVernay"},{"name":"Per Fly"},{"name":"Prosit Roy"},{"name":"Bethany Ashton Wolf"},{"name":"Johannes Roberts"},{"name":"Tăng Chí Vĩ"},{"name":"Anthony Byrne"},{"name":"Ben HowlingYolanda Ramke"},{"name":"Yûji Shimomura"},{"name":"Joe RussoAnthony Russo"},{"name":"Choo Chang-Min"},{"name":"John Francis DaleyJonathan Goldstein"},{"name":"Quách Đức Cương"},{"name":"Aaron Sorkin"},{"name":"Eric Zaragoza"},{"name":"Katsuyuki Motohiro"},{"name":"Advait Chandan"},{"name":"Sang-ho Yeon"},{"name":"Yoon Jong-Seok"},{"name":"Andrew Niccol"},{"name":"Will Gluck"},{"name":"Vương Ninh"},{"name":"Lee Chang-Hee"},{"name":"Đới Duy"},{"name":"Shin Jae-Ho"},{"name":"Trish Sie"},{"name":"Ding Sheng"},{"name":"Na Young Seok,John Krasinski"},{"name":"Kim Je-Young"},{"name":"Junpei Mizusaki"},{"name":"Christian Gudegast"},{"name":"Wim Wenders"},{"name":"Cốc Đức Chiêu"},{"name":"Rob Cohen"},{"name":"Daniel Alfredson"},{"name":"Brandon Camp"},{"name":"Paul King"},{"name":"Suzi Ewing"},{"name":"Michael Gracey"},{"name":"Steven S. DeKnight"},{"name":"Hạng Thu Lương"},{"name":"Nicolai Fuglsig"},{"name":"Marc J. FrancisMax Pugh"},{"name":"Kim Suk-Yoon"},{"name":"Fabrice du Welz"},{"name":"Mitu Misra"},{"name":"Brian O'Malley"},{"name":"Cự Hưng Mậu"},{"name":"Tim Hunter"},{"name":"Tan Bing"},{"name":"Lưu Quốc Huy"},{"name":"Atsuko Ishizuka"},{"name":"Trần Tư Thành"},{"name":"Sophon Sakdaphisit"},{"name":"Vương Tuấn Lân"},{"name":"Kimble Rendall"},{"name":"Jonathan Wright"},{"name":"Xavier Gens"},{"name":"Sergio G. Sánchez"},{"name":"David Bruckner"},{"name":"Rory Quintos"},{"name":"Guan Xiaojie"},{"name":"Dan Scanlon"},{"name":"Daniel Lusko"},{"name":"Mohit Suri"},{"name":"Annette K. Olesen"},{"name":"Joseph Ruben"},{"name":"Daniel Chan"},{"name":"Banjong Pisanthanakun"},{"name":"Scooter Downey"},{"name":"Ôn Bích Hà"},{"name":"Yoon-suk Choi,John Kafka"},{"name":"Brad Furman"},{"name":"Jeong min Hwang"},{"name":"Vương Tử Minh"},{"name":"Ruel S. Bayani"},{"name":"Martin Scorsese"},{"name":"Vanessa Hudgens"},{"name":"Selena Gomez"},{"name":"Ashley Benson"},{"name":"Rachel Korine"},{"name":"Michaël Youn"},{"name":"Danny Boyle"},{"name":"Chris Crow"},{"name":"Ming Bridges"},{"name":"Hanwei Chen"},{"name":"Cecilia Heng"},{"name":"Yiuwing Lam"},{"name":"Shara Linndrew Lin Zehao"},{"name":"Brian De Palma"},{"name":"Christian Bisceglia,Ascanio Malgarini"},{"name":"Chen Jian"},{"name":"Chris Pratt"},{"name":"Daigo Matsui"},{"name":"Paul Middleditch"},{"name":"Natpassara Adulyamethasiri"},{"name":"Acharanat Ariyaritwikol"},{"name":"Chinawut Indracusin"},{"name":"Brian Trenchard-Smith"},{"name":"Niu Chaoyang"},{"name":"Kunihiko Yuyama"},{"name":"Tôn Kiện Quân"},{"name":"Simon Barrett,Jason Eisener"},{"name":"Diego Kaplan"},{"name":"Dennis Gunn"},{"name":"Cay Izumi"},{"name":"Shinji Kasahara"},{"name":"Felix Fuchssteiner"},{"name":"Makinov"},{"name":"Tăng Chí Vỹ"},{"name":"Nuel C. Naval"},{"name":"Huang Xiao Ming"},{"name":"Zhang Jing Chu"},{"name":"Richie Ren Yin Chi"},{"name":"Nat Chan Pak"},{"name":"Dilip Ghosh"},{"name":"Todd Robinson"},{"name":"Park Yong Woo"},{"name":"Go Ah Ra"},{"name":"Gary Jones"},{"name":"BJ McDonnell"},{"name":"Jung woo Ha"},{"name":"Hyo jin Kong"},{"name":"Byung joon Lee"},{"name":"Petchtai Wongkamlaokom Preedakul"},{"name":"John O. Hartman,Nicholas Mross"},{"name":"Danielle Chuchran"},{"name":"Richard McWilliams"},{"name":"Paul D. Hunt"},{"name":"Shawn Piller"},{"name":"Dun MacNeillie"},{"name":"Hye jin Han"},{"name":"Soo bin Bae"},{"name":"Drake Bell"},{"name":"Andy Dick"},{"name":"Fran Drescher"},{"name":"Don Scardino"},{"name":"Trivikram Srinivas"},{"name":"Tempestt Bledsoe"},{"name":"Park Won sang"},{"name":"Lee Kyeong yeong"},{"name":"Myeong Kye nam"},{"name":"Kim Ee seong"},{"name":"Brett Donowho"},{"name":"Richie Ren"},{"name":"William So Wing Hong"},{"name":"Mads Mikkelsennnika Wedderkopp"},{"name":"Min jung Lee"},{"name":"Daniel Choi"},{"name":"Kim Beom"},{"name":"Esom"},{"name":"Roger Christian"},{"name":"M.L. Pundhevanop Dhewakul"},{"name":"Charlie Bewley"},{"name":"Lielle Tova Blinkoff"},{"name":"Alan Cumming"},{"name":"Ashley Bell"},{"name":"Spencer Treat Clark"},{"name":"Jeff Bridges"},{"name":"John Goodman"},{"name":"Chan-wook Park"},{"name":"Mason Vale Cotton"},{"name":"Makoto Shii"},{"name":"Clive Standen"},{"name":"James Cosmo"},{"name":"Christopher Neil"},{"name":"M. Night Shyamalan"},{"name":"Brandon Chang"},{"name":"David Ondrícek"},{"name":"Seung woo Cho"},{"name":"Soo Ae"},{"name":"Sophie Broustal"},{"name":"Chu-ji Qiu"},{"name":"Mandy Moore"},{"name":"Jeremy Suarez"},{"name":"Brett Beoubay"},{"name":"Ashley Braud"},{"name":"Philippe Brenninkmeyer"},{"name":"Zachary Levi"},{"name":"Merritt Wever"},{"name":"Mitsuo Iwata"},{"name":"Nozomu Sasaki"},{"name":"Mark Dil"},{"name":"Lý Liên Kiệt"},{"name":"Chingmy Yau"},{"name":"Leehom Wang"},{"name":"Yifei Liu"},{"name":"Joan Chen"},{"name":"Hyun Jin Lee"},{"name":"Moo Saeng Lee"},{"name":"So jeong Lee"},{"name":"Tu in Tak"},{"name":"Juha Veijonen"},{"name":"Kari Hietalahti"},{"name":"Elina Knihtilä"},{"name":"Christopher Lloyd"},{"name":"Troy Baker"},{"name":"Patrick Warburton"},{"name":"Tracey Ullman"},{"name":"Eartha Kitt"},{"name":"Tra Truyền Nghị"},{"name":"Colm Meaney"},{"name":"Henry Goodman"},{"name":"David Roper"},{"name":"Phòng Tổ Danh"},{"name":"An Dĩ Hiên"},{"name":"Nolan North"},{"name":"Mako"},{"name":"Chris Evans"},{"name":"Martijn Smits,Erwin van den Eshof"},{"name":"Myleene Klass"},{"name":"Steve Buscemi"},{"name":"David Morlet"},{"name":"David Robles"},{"name":"Cecilia Santiago"},{"name":"Conchi López"},{"name":"Sola Aoi"},{"name":"Risa Kasumi"},{"name":"Mari Sakurai"},{"name":"Tamayo"},{"name":"Graham McTavish"},{"name":"Vanessa Branch"},{"name":"Steve Blum"},{"name":"Ryan Newman"},{"name":"Mitchel Musso"},{"name":"Sam Lerner"},{"name":"Sarah Bolger"},{"name":"Anton Yelchin"},{"name":"Christina Hendricks"},{"name":"Ian McKellen"},{"name":"Zach Callison"},{"name":"Josh Keaton"},{"name":"Jun'ichi Okada"},{"name":"Timothy Dalton"},{"name":"Rob Lettermand Vernon"},{"name":"Keri Russell"},{"name":"Bobby Driscoll"},{"name":"Kathryn Beaumont"},{"name":"Hans Conried"},{"name":"Catherine Zeta Jones"},{"name":"Siyan Huo"},{"name":"Zonghan Li"},{"name":"Shuangbao Wang"},{"name":"Adrian Paul"},{"name":"Richard Grieco"},{"name":"Bali Rodriguez"},{"name":"Talia Shire"},{"name":"Burt Young"},{"name":"Todd Phillips"},{"name":"Hwang Jung Min"},{"name":"Uhm Jung Hwa"},{"name":"Kim Hyo Jin"},{"name":"Vu Nhân Thái"},{"name":"Lý Gia Vinh"},{"name":"Walter Hill"},{"name":"Clancy Brown"},{"name":"Travis Willingham"},{"name":"Christopher Corey Smith"},{"name":"Charlie Schlatter"},{"name":"Hu Guan"},{"name":"Katie Aselton"},{"name":"Steve Martin"},{"name":"Sean McNamara"},{"name":"Jason Bateman Peet"},{"name":"Lee Cheon hee"},{"name":"Kim Sae ron"},{"name":"Kim Ah ron"},{"name":"Joseph J. Lawson"},{"name":"Tigmanshu Dhulia"},{"name":"Chris Wedge"},{"name":"Sheershak Anandnu Ray Chhibber"},{"name":"David Weaver"},{"name":"Byron Pang"},{"name":"Thomas Price"},{"name":"Winnie Leung"},{"name":"Simon Tam"},{"name":"Ulrich Tukur"},{"name":"Lorna Ravel"},{"name":"Courtney Love"},{"name":"Antonio Tarver"},{"name":"Ha Huang"},{"name":"Dick Wei"},{"name":"Emily Mortimer"},{"name":"April Mullen"},{"name":"Johnnie To"},{"name":"Trần Bá Lâm"},{"name":"Lạc Huyễn Minh"},{"name":"Khâu Ngạn Tường"},{"name":"Minh Đạo. Bành Vu Yến"},{"name":"Uyển Tân Vũ"},{"name":"Đậu Kiêu"},{"name":"Đổng Khiết"},{"name":"Quách Gia Minh"},{"name":"Phụng Tiểu Nhạc"},{"name":"Trương Tiệp"},{"name":"Kamal Hassan"},{"name":"Hoa Minh"},{"name":"Anton Megerdichev"},{"name":"Kim Yong-han"},{"name":"Cảnh Lạc"},{"name":"Đại Lưu"},{"name":"Ernie Reyes Jr."},{"name":"Mathias Hues"},{"name":"John Savage"},{"name":"Nicolás López"},{"name":"Abe Levy,Silver Tree"},{"name":"Lee Min ki"},{"name":"Kim Min hee"},{"name":"Zaizai Lin"},{"name":"Kôsuke Atari"},{"name":"Crispian Mills,Chris Hopewell"},{"name":"riệu Hựu Đình"},{"name":"Hàn Canh"},{"name":"Dương Tử San"},{"name":"Giang Sơ Ảnh"},{"name":"Rob Zombie"},{"name":"Ninh Tịnh"},{"name":"Lưu Đức Hòa"},{"name":"Thư Kỳ"},{"name":"Eron Sheean"},{"name":"Subhash Kapoor"},{"name":"Fengyi Zhang"},{"name":"Li Gong"},{"name":"Hà Vận Thi"},{"name":"Ric Roman Waugh"},{"name":"Aditya Datt"},{"name":"Ol Parker"},{"name":"Abhishek Kapoor"},{"name":"Bruce Campbell"},{"name":"Marcus Gilbert"},{"name":"Maxwell Vreeland Andrew"},{"name":"Steven Bone"},{"name":"Colin Chong"},{"name":"Leone Marucci"},{"name":"Ken Loach"},{"name":"Wei Tang"},{"name":"Xiubo Wu"},{"name":"Dante Lee Arias"},{"name":"Yu Ning Chu"},{"name":"Kunal Kohli"},{"name":"Cal Brunker"},{"name":"Jonathan Levine"},{"name":"Nicholas Jarecki"},{"name":"Young hee Na"},{"name":"P.J. Hogan"},{"name":"Brian Dannelly"},{"name":"Sam Raimi"},{"name":"Izabella Scorupco"},{"name":"Iginio Straffi"},{"name":"Eran Creevy"},{"name":"Vishal Bhardwaj"},{"name":"Châu nhuận phát"},{"name":"Nina li chi"},{"name":"Conan lee"},{"name":"Lee Jeong jae"},{"name":"Brandon Cronenberg"},{"name":"John Putch"},{"name":"Mohammed ZeeshaViren Basoya"},{"name":"Manish Chaudhary"},{"name":"Dougray Scottn"},{"name":"Toru Kamei"},{"name":"Hosoda Mamoru"},{"name":"Isidora SimijonovicJovo Maksic"},{"name":"Jonathan Tucker"},{"name":"David Guy Levy"},{"name":"Josh Peck"},{"name":"Josh Holloway"},{"name":"Chris Brown"},{"name":"Roman Coppola"},{"name":"Peter Geiger"},{"name":"Joseph Kosinski"},{"name":"BeMorgan Freeman"},{"name":"Aksel Hennie"},{"name":"Agnes Kittelsen"},{"name":"Nicolai Cleve Broch"},{"name":"Daniel Calparsoro"},{"name":"Aleksey Kopashov"},{"name":"Pavel Derevyanko"},{"name":"Megumi Ogata"},{"name":"Megumi Hayashibara"},{"name":"Yûko Miyamura"},{"name":"Kathryn Bigelow"},{"name":"Michael CaineDo Thi Hai Yen"},{"name":"Rinko Kikuchi"},{"name":"Min Tanaka"},{"name":"Gabe Torres"},{"name":"Patrice Leconte"},{"name":"Jim Caviezel"},{"name":"Nick Nolte"},{"name":"Steven Sheil"},{"name":"Jodi Benson"},{"name":"Samuel E. Wright"},{"name":"Kwok-Leung Gan"},{"name":"Adrien Brodyy"},{"name":"Geoffrey Rush"},{"name":"John Gielgud"},{"name":"Candice Bergen"},{"name":"Raymond J. Barry"},{"name":"Caroline Kav"},{"name":"Glenn Close"},{"name":"Gérard Depardieu"},{"name":"Ioan Gruffudd"},{"name":"Vladimir Mashkov"},{"name":"Yekaterina Rednikova"},{"name":"Mikhail Filipchuk"},{"name":"Nathan Lane"},{"name":"Ernie Sabella"},{"name":"Julie Kavner"},{"name":"Matthew Modine"},{"name":"R. Lee Ermey"},{"name":"Vincent D'Onofrio"},{"name":"Dougray Scott"},{"name":"Rachael Blake"},{"name":"Jeremy Lindsay Taylor"},{"name":"Oleg Yankovskiy"},{"name":"Rolan Bykov"},{"name":"Anatoliy Papanov"},{"name":"Sian Breckin"},{"name":"Nichola Burley"},{"name":"Jaime Winstone"},{"name":"Kevin Bacon"},{"name":"Monica Bellucci"},{"name":"Giuseppe Sulfaro"},{"name":"Luciano Federico"},{"name":"Angelo Pellegrino"},{"name":"Gabriella Di Luzio"},{"name":"Pippo Provvidenti"},{"name":"Maria Terranova"},{"name":"Chien lien Wu"},{"name":"Kingman Cho"},{"name":"Roger Miller"},{"name":"Peter Ustinov"},{"name":"Brian Bedford"},{"name":"Trầnh Hùng"},{"name":"Meg Ryan"},{"name":"Irene Bedard"},{"name":"Phil Harris"},{"name":"Sebastian Cabot"},{"name":"Bruce Reitherman"},{"name":"Mario Casas"},{"name":"Vicente Romero"},{"name":"Luciano Cáceres"},{"name":"GiaWoo sung Jung"},{"name":"Sung jae Lee"},{"name":"Jason Wee MaRyan Dunn"},{"name":"Dave England"},{"name":"Je-gyun Yun"},{"name":"Ryo Ishibashi"},{"name":"Eihi Shiina"},{"name":"Tetsu Sawaki"},{"name":"Komaki Kurihara"},{"name":"Oleg Vidov"},{"name":"Makoto Satô"},{"name":"Xa Thi Mạn"},{"name":"Phương Lực Thân"},{"name":"La Trọng Khiêm"},{"name":"Tạ An Kỳ"},{"name":"Trần Gia Hoàn"},{"name":"Trang Tư Mẫn"},{"name":"La Hạo Mai"},{"name":"Lý Vũ Dương"},{"name":"Hồng Thiên Minh"},{"name":"Thái Dĩnh Ân"},{"name":"Park Kang ho Song"},{"name":"Ok bin Kim"},{"name":"Hae suk Kim"},{"name":"Ha kyun Shin"},{"name":"In hwan Park"},{"name":"Avalon Barrie"},{"name":"Todd Soley"},{"name":"Lyudmila Shiryaeva"},{"name":"Elena Babenko"},{"name":"Bogdan Stupka"},{"name":"Khưu Thục Trinh"},{"name":"Wai Yiu"},{"name":"Madoka Sugawara"},{"name":"Sook Yin Lee"},{"name":"Peter Stickles"},{"name":"PJ DeBoy"},{"name":"DaJustin Timberlake Faris"},{"name":"Aleksey Smirnov"},{"name":"Anatoly Romashin"},{"name":"Eduard Izotov"},{"name":"Ivan Pereverzev"},{"name":"Larissa Golubkina"},{"name":"Mikhail Nozhkin"},{"name":"Mikhail Ulyanov"},{"name":"Nikolai Olyalin"},{"name":"Nikolay Olyalin"},{"name":"Larisa Golubkina"},{"name":"Boris Zajdenberg"},{"name":"Sergey Nikonenko"},{"name":"Vsevolod Sanayev"},{"name":"Vladimir Samojlov"},{"name":"Jan Englert"},{"name":"Ngô Mạnh Đạt"},{"name":"Lâm Chí Dĩnh"},{"name":"Alisa Freyndlikh"},{"name":"Larisa Guzeeva"},{"name":"Nikita Mikhalkov"},{"name":"Siu hou Chin"},{"name":"Fong Liu"},{"name":"Kim Dong wuk"},{"name":"Jo Yeo jeong"},{"name":"Kim Min joon"},{"name":"Moon Lee"},{"name":"Chakri Toleti"},{"name":"Ji-woo Jung"},{"name":"Bo Ze"},{"name":"Đỗ Vấn Trạch"},{"name":"Lương Lạc Thi"},{"name":"Hà Siêu Nghi"},{"name":"Isabella Leong"},{"name":"Josie Ho"},{"name":"Sa rang Kim"},{"name":"Jun Gyu Park"},{"name":"Hyeok jae Lee"},{"name":"Gael García Bernal"},{"name":"Ricky Hui"},{"name":"AmaStellan Skarsgård"},{"name":"Vasily Shukshin"},{"name":"Eduardo Noriega"},{"name":"Martina Gedeck"},{"name":"Elizabeth Mitchell"},{"name":"Aleksandr Galibin"},{"name":"Bao Viet"},{"name":"Yuriy Nazarov"},{"name":"Liberto Rabal"},{"name":"Francesca Neri"},{"name":"Javier Bardem"},{"name":"Lyudmila Gurchenko"},{"name":"Oleg Basilashvili"},{"name":"Nanako Matsushima"},{"name":"Miki Nakatani"},{"name":"Yûko Takeuchi"},{"name":"Kiu Wai Miu"},{"name":"Wilson Lam"},{"name":"Brigitte Bardot"},{"name":"Jack Palance"},{"name":"Michel Piccoli"},{"name":"Giorgia Moll"},{"name":"Fritz Lang"},{"name":"Lam Ching Ying"},{"name":"Richard Ng Yiu Hon"},{"name":"Billy Lau Nam Kwong"},{"name":"Lui Fong"},{"name":"Corey Yuen Kwai"},{"name":"Wu Ma"},{"name":"Mikhail Kononov"},{"name":"Oleg Borisov"},{"name":"Viktor Pavlov"},{"name":"Nobuo Tobita"},{"name":"Toshihiko Seki"},{"name":"Yoko Sakamoto"},{"name":"Gerard Butlerm"},{"name":"ATraci Lords"},{"name":"Ariel Winter"},{"name":"Sophie Marceau"},{"name":"Robert Carlyle"},{"name":"Đang Cập Nhậtđ"},{"name":"Trung Sở Hồng"},{"name":"Kundô KoyamaStars:Masahiro Motoki"},{"name":"Tsutomu Yamazaki"},{"name":"Anton Shagin"},{"name":"Oksana Akinshina"},{"name":"Evgeniya Khirivskaya"},{"name":"Andrew Tent"},{"name":"Paula Patton"},{"name":"Audrey Tautou"},{"name":"Gaspard Ulliel"},{"name":"Jean Pierre Becker"},{"name":"J Lo"},{"name":"Declan O'Brien"},{"name":"Ohn Cusack"},{"name":"Catherine Keener"},{"name":"Dakota Blue Richards"},{"name":"Rob Schneider"},{"name":"Park Ha seon"},{"name":"Yoon Sang hyeon"},{"name":"Park Cheol min"},{"name":"Bill Boyd"},{"name":"Kristin Scott Thomas"},{"name":"Elsa Zylberstein"},{"name":"Serge Hazanavicius"},{"name":"Franck Khalfoun"},{"name":"Loretta Devine"},{"name":"Peter Dinklage"},{"name":"Ron Glass"},{"name":"Martin Lawrence"},{"name":"James Marsden"},{"name":"Tracy Morgan"},{"name":"Trịnh Tắc Sĩ"},{"name":"Miêu Kiều Vỹ"},{"name":"Alan Tam"},{"name":"Pak cheung Chan"},{"name":"Charine Chan"},{"name":"Lương Gia Nhân"},{"name":"Trương Vệ Kiện"},{"name":"Jaz MartinMaria Demara"},{"name":"Lexa Doig"},{"name":"Jeff Geddis"},{"name":"Bob Odenkirk,Elizabeth Banks"},{"name":"Ryan Kelley"},{"name":"Alyssa Diaz"},{"name":"Nathan Keyes"},{"name":"John Bonito"},{"name":"Maud Adams"},{"name":"Louis Jourdan"},{"name":"Bill Pullman"},{"name":"Christina Ricci"},{"name":"Cathy Moriarty"},{"name":"Sin So mi"},{"name":"Jeong Ee kap"},{"name":"Seol Seong min"},{"name":"Park Choong seon"},{"name":"Colin Firth"},{"name":"Hugh Grant"},{"name":"Tim Robbins and Kevin Bacon"},{"name":"Rene Russo"},{"name":"Denis Leary"},{"name":"Jim Broadbent"},{"name":"Garry McDonald"},{"name":"Jacek Koman"},{"name":"Rall Wallace"},{"name":"Vanness Wu and Cherrie Ying"},{"name":"Billy Bob Thornton"},{"name":"Halle Berry"},{"name":"Taylor Simpson"},{"name":"Tatsuya Fujiwara"},{"name":"Aki Maeda"},{"name":"Tarô Yamamoto"},{"name":"Chiaki Kuriyama"},{"name":"Ming Na"},{"name":"Jean Hugues Anglade"},{"name":"Béatrice Dalle"},{"name":"Gérard Darmon"},{"name":"Kenichi Matsuyama"},{"name":"Kazunari Ninomiya"},{"name":"Takayuki Yamada"},{"name":"Chris Cooper"},{"name":"Ryan Phillippe"},{"name":"Dennis Haysbert"},{"name":"Đang cập nhật Vardalos"},{"name":"Rachel Dratch"},{"name":"Wah Yuen"},{"name":"Qiu Yuen"},{"name":"Kim Kyeong ik"},{"name":"Yoon Mi kyeong"},{"name":"Yang Yeong jo"},{"name":"Lee Ja kyeong"},{"name":"Joe Pantoliano"},{"name":"Donald Pleasence"},{"name":"Charles Cyphers"},{"name":"FarhaDeepika Padukone"},{"name":"Ram Kapoor"},{"name":"Kim Rae Won Moon Geun Young"},{"name":"Jennifer Lawrence"},{"name":"Vincent Cassel"},{"name":"Ludivine Sagnier"},{"name":"Mathieu Amalric"},{"name":"Samuel Le Bihan"},{"name":"Gérard Lanvin"},{"name":"Olivier Gourmet"},{"name":"Jim Carrey"},{"name":"Angela Lansbury"},{"name":"Ophelia Lovibond"},{"name":"Akiko Takeshita"},{"name":"Tadanobu AsanoBa Sen"},{"name":"Fiona Sit"},{"name":"Kar Ying Law"},{"name":"Vladimir IvashovAntonina Maksimova"},{"name":"Sergey Borchuk"},{"name":"Andrey Podoshian"},{"name":"Irina Malysheva"},{"name":"Innokentiy Smoktunovskiy"},{"name":"Anatoliy Kuznetsov"},{"name":"Spartak Mishulin"},{"name":"Kakhi Kavsadze"},{"name":"Pakpoom Wongji"},{"name":"Viktor Kosykh"},{"name":"Mikhail Metyolkin"},{"name":"Vasili Vasilyev"},{"name":"Kajal Agarwal"},{"name":"Navdeep"},{"name":"Mã Thiên Vũ"},{"name":"Timothy Olyphant"},{"name":"Larenz Tate"},{"name":"Georgi Zhzhyonov"},{"name":"Vadim Spiridonov"},{"name":"Terry Miles"},{"name":"Andie MacDowell"},{"name":"Kim Ji wanJeon Se hong"},{"name":"Stobe Harju"},{"name":"Dương Tử"},{"name":"Pyotr Glebov"},{"name":"Elina Bystritskaya"},{"name":"Zinaida Kirienko"},{"name":"Kamolnet ReungsriNawapaiboon Wuttinanon"},{"name":"Giang Nhất Yên"},{"name":"Olga Yukina"},{"name":"Tatyana Yukina"},{"name":"Tatyana Barysheva"},{"name":"Gedi Kazansky"},{"name":"Leonid Bykov"},{"name":"Sergei Podgornyj"},{"name":"Sergei Ivanov"},{"name":"Boris Bystrov"},{"name":"Dodo Chogovadze"},{"name":"Andrei Fajt"},{"name":"Kim tae hyeoJin seo yeon"},{"name":"Vladimir Samoilov"},{"name":"Lyudmila Alfimova"},{"name":"Valentina Lysenko"},{"name":"Vishesh Bhatt"},{"name":"Jonah Hill"},{"name":"Demi Moore"},{"name":"Yuriy Yakovlev"},{"name":"Yuliya Borisova"},{"name":"Nikita Podgorny"},{"name":"Robert Prosky"},{"name":"Viggo Mortensen"},{"name":"Maria Bello"},{"name":"Alastair Fothergill,Mark Linfield"},{"name":"Zhiwen Wang"},{"name":"Bingbing Fan"},{"name":"Uma ThurmanRainn Wilson"},{"name":"Eddie Izzard"},{"name":"Stelio Savante"},{"name":"Mike Iorio"},{"name":"JuliaGabriel Byrne"},{"name":"Isaiah Washington"},{"name":"Ron Eldard"},{"name":"Pruitt Taylor Vince"},{"name":"Bill Nunn"},{"name":"Clarence Williams III"},{"name":"Mélanie Thierry"},{"name":"Gabriele Lavia"},{"name":"Peter Vaughan"},{"name":"Tanit Phoenix"},{"name":"Robin Shou"},{"name":"Langley Kirkwood"},{"name":"Sean Beanl McDonough"},{"name":"Yoon Hong-Seung"},{"name":"Zdenek Sveraknd Libuse Safrankova"},{"name":"John Luessenhop"},{"name":"Peter BillingsleyDarren McGavin"},{"name":"John Krasinski"},{"name":"David Strathairn"},{"name":"Andrew Cherry"},{"name":"Stanley Tucci"},{"name":"Chi McBride"},{"name":"Châu Huệ Mẫn"},{"name":"Malgorzata Szumowska"},{"name":"Patrick Tam"},{"name":"Ashton KutcherTaryn Manning"},{"name":"Wen JiangDeshun Wang"},{"name":"Haibin Li"},{"name":"Yeerjiang Mahepushen"},{"name":"Kim Yeong-tak"},{"name":"Jessica Lange"},{"name":"Maryam d Abo"},{"name":"Jeroen Krabbé"},{"name":"Shawn Doyle"},{"name":"Jackie ChanThành Long"},{"name":"Sofya Skya"},{"name":"Cole Hauser"},{"name":"Gary Lockwood"},{"name":"William Sylvester"},{"name":"Daniel Richter"},{"name":"Jonathan Bennett"},{"name":"Kristin Cavallari"},{"name":"Kurt Fuller"},{"name":"James Tucker"},{"name":"Charlton Heston"},{"name":"Yul Brynner"},{"name":"Anne Baxter"},{"name":"Manoj Bajpayee"},{"name":"Richa Chadda"},{"name":"Nawazuddin Siddiqui"},{"name":"Burt Reynolds"},{"name":"Armand Assante"},{"name":"Paul Guilfoyle"},{"name":"Jerry Grayson"},{"name":"Robert Stanton"},{"name":"Charlotte Rampling"},{"name":"Charles Dance"},{"name":"Jean Marie Lamour"},{"name":"Mireille Mosse"},{"name":"Vicente Ara"},{"name":"Từ Hy Viên"},{"name":"Lưu Diệp"},{"name":"Trương Thiệu Huy"},{"name":"BreElizabeth Hurley"},{"name":"Frances O.Connor"},{"name":"Miriam Shor"},{"name":"Ben Barnes"},{"name":"Lương Triều Vĩ"},{"name":"Rob Schmidt"},{"name":"Lee Je-yong"},{"name":"Penélope Cruz"},{"name":"Joseph Gordon Levitt"},{"name":"Heath Ledger"},{"name":"Julia Stiles"},{"name":"Châu Mỹ Linh"},{"name":"Ken Watanabe"},{"name":"Tsuyoshi Ihara"},{"name":"Naomie Harris"},{"name":"Nicholas Lea"},{"name":"Ryan Robbins"},{"name":"Gina Holden"},{"name":"Gilles Barret"},{"name":"Margaux Devy"},{"name":"Sylvain Dubois"},{"name":"Petchtai Wongkamlao"},{"name":"Anurag Kashyap"},{"name":"Blake Freeman"},{"name":"Eric Christian Olsen"},{"name":"Nicholas DAgosto"},{"name":"Sarah Roemer"},{"name":"Dustin HoffmaKatharine Ross"},{"name":"Jon Foster"},{"name":"Austin Nichols"},{"name":"Amber Heard"},{"name":"Lou Taylor Pucci"},{"name":"Valerie Azlynn"},{"name":"Alicia Leigh Willis"},{"name":"Yun seok Kim"},{"name":"Seong Ha Cho"},{"name":"Trịnh Y KiệnConroy Chan Chi Chung"},{"name":"Michelle Ye"},{"name":"On on Yu"},{"name":"Wilfred Lau"},{"name":"Judge Reinhold"},{"name":"Harvey Keitel"},{"name":"Barbara Hershey"},{"name":"Steve Shill"},{"name":"Barry Miller"},{"name":"Peter O'Toole"},{"name":"Alec Guinness"},{"name":"Sam Riley"},{"name":"Garrett Hedlund"},{"name":"Kristen Stewart"},{"name":"Patton Oswalt"},{"name":"Hye ja Kim"},{"name":"Bin Won"},{"name":"Tobey Maguire"},{"name":"Kate BeckiLuke Wilson"},{"name":"Frank Whaley"},{"name":"David Voncken"},{"name":"Lee Tamahori"},{"name":"Christian Clavier"},{"name":"Valérie Lemercier"},{"name":"Jonas Hämmerle"},{"name":"Waldemar Kobus"},{"name":"Günther Kaufmann"},{"name":"Charlie HuPatrick Wilson"},{"name":"Terrence Howard"},{"name":"Jessica Alba"},{"name":"Eric Dane"},{"name":"Ravi Teja"},{"name":"Tapsee Pannu"},{"name":"Waldemar Kobusrt"},{"name":"Luke Wilson"},{"name":"Cuba Gooding Jr."},{"name":"John Terry"},{"name":"Jaclyn DeSantis"},{"name":"Lance Reddick"},{"name":"Bill"},{"name":"Irma P. Hall"},{"name":"Katherine Heigl"},{"name":"Gerard Butler"},{"name":"Bree Turner"},{"name":"Sarah Polley"},{"name":"Phoenix Chou"},{"name":"Emma Pei"},{"name":"Jennifer Blanc"},{"name":"Tony Goldwyn"},{"name":"Minnie Driver"},{"name":"Brian Blessed"},{"name":"whoopi goldberg"},{"name":"Maggie smith"},{"name":"Kathy najimy"},{"name":"Christopher Plummer"},{"name":"Lily Cole"},{"name":"Katie Lyons"},{"name":"Richard Shanks"},{"name":"Whitney Houston"},{"name":"Ralph Fiennes"},{"name":"Juliette Binoche"},{"name":"Lei Hao"},{"name":"Terri Kwan"},{"name":"Bi Xiao Hai"},{"name":"François Cluzet"},{"name":"Marie Josée Croze"},{"name":"André Dussollier"},{"name":"Marina Hands"},{"name":"Benicio Del Toro"},{"name":"Connie Nielsen"},{"name":"Leslie Stefanson"},{"name":"John Finn"},{"name":"José Zúñiga"},{"name":"Ron Canada"},{"name":"Khalid Abdalla"},{"name":"Ahmad Khan Mahmoodzada"},{"name":"Atossa Leoni"},{"name":"Bernard Farcy"},{"name":"Bai Ling"},{"name":"Edouard Montoute"},{"name":"Jean Christophe Bouvet"},{"name":"Hye su Kim"},{"name":"Ricky Gervais"},{"name":"Jennifer Garner"},{"name":"Beibi Gong"},{"name":"Siu Fai Cheung"},{"name":"Kai Chi Liu"},{"name":"Topher GraceDan Fogler"},{"name":"Teresa Palmer"},{"name":"Noomi Rapace"},{"name":"Michae"},{"name":"Nyqvist"},{"name":"Lena Endre"},{"name":"Humphrey Bogart"},{"name":"Robert Morley"},{"name":"Richard Gere"},{"name":"Michael Anderson Jr."},{"name":"Edward Norton"},{"name":"Jessica Biel and Paul Giamatti | See full cast"},{"name":"crew"},{"name":"Darsheel Safary"},{"name":"Aamir Khan"},{"name":"Tanay Chheda"},{"name":"Sachet Engineer"},{"name":"Tisca Chopra"},{"name":"Vipin Sharma"},{"name":"Jean Luc Couchard"},{"name":"François Damiens"},{"name":"Mel Gibsonbigail Breslin"},{"name":"Robert De Nirond Brad Pitt"},{"name":"Tom Hanksnd Ross Malinger"},{"name":"Leonardo DiCapriole"},{"name":"Marc Worden"},{"name":"Gwendoline Yeo"},{"name":"Fred Tatasciore"},{"name":"Gemma Arterton"},{"name":"Martin Compston"},{"name":"Eddie Marsan"},{"name":"Adrien Brody"},{"name":"Keira Knightley and Daniel Craig | See full cast"},{"name":"Daniel Craig Miller"},{"name":"Paul Walker"},{"name":"Wayne Brady"},{"name":"Johnny Messner"},{"name":"Ekin Cheng"},{"name":"Kelly Lin"},{"name":"Aleksander Nordaas"},{"name":"Leonard Whiting"},{"name":"John McEnery"},{"name":"Karan Johar"},{"name":"Juno Mak"},{"name":"Mary Elizabeth Mastrantonio"},{"name":"Robert Loggia"},{"name":"Miriam Colon"},{"name":"Kasper Barfoed"},{"name":"Carlos Salda"},{"name":"Prem Chopra"},{"name":"Gauhar Khan"},{"name":"YoYo Mung"},{"name":"Preston Jonesbsera"},{"name":"Huỳnh Thanh Hoàng"},{"name":"Gus Van Sant"},{"name":"Brad Turner,Kevin Hooks"},{"name":"Ryu Seung beom"},{"name":"Lee Yo won"},{"name":"Jo Jin woong"},{"name":"Ho Yim"},{"name":"Cheryl Hines"},{"name":"Rhett Giles Craig"},{"name":"Ritesh Deshmukh"},{"name":"Mohnish Bahl"},{"name":"Jorma Tommila"},{"name":"Peeter Jakobi"},{"name":"Onni Tommila"},{"name":"Baoqiang Wang"},{"name":"Bo Huang"},{"name":"S. Shar"},{"name":"Rene Perez"},{"name":"Hugh JackmaIsla Fisher"},{"name":"Charlie Sheen"},{"name":"Lloyd Bridges"},{"name":"Valeria Golino"},{"name":"Géraldine Nakache"},{"name":"Jimmy Jean Louis"},{"name":"Byeong-gil Jeong"},{"name":"J.J. Johnson"},{"name":"David Alan Basche"},{"name":"Liza Colón Zayas"},{"name":"Max Irons"},{"name":"Cửu Bả Đao,Liệu Minh Nghị,Giang Kim Lâm"},{"name":"Han Hyo Joo"},{"name":"Kim Jae Joong"},{"name":"Donal Gibson"},{"name":"Toru Emori"},{"name":"Katsunosuke Hori"},{"name":"Kim Ha Neul"},{"name":"Kang Dong Won"},{"name":"Christopher Carley"},{"name":"Bee Vang"},{"name":"Yoo-sung Kim"},{"name":"Rose McGowan"},{"name":"Freddy Rodríguez"},{"name":"Josh Brolin"},{"name":"Amitabh BachchaVidya Balan"},{"name":"Kate Hudson"},{"name":"Joy Bryant"},{"name":"Tom HanksDavid Morse"},{"name":"osh Hutcherson"},{"name":"Dax Shepard"},{"name":"Jonah Bobo"},{"name":"Terra Shin"},{"name":"Rosamund Pike"},{"name":"David Oyelowo"},{"name":"Werner Herzog"},{"name":"Aaliyah"},{"name":"Krew Boylan"},{"name":"Lindsay Farris"},{"name":"Rebekah Foord"},{"name":"Damien Freeleagus"},{"name":"Heo Seung-Min"},{"name":"Tom HanksJoanne Woodward"},{"name":"Jason Robards"},{"name":"Mickey Rourke"},{"name":"Margaret Whitton"},{"name":"Từ Thiếu Cường"},{"name":"Lưu Tùng Nhân"},{"name":"Walter Raney"},{"name":"Sofia Vassilieva"},{"name":"Channing TatumRichard Jenkins"},{"name":"Michael Carman"},{"name":"Michael Tiddes"},{"name":"Doutzen Kroes"},{"name":"Derek de Lint"},{"name":"Robert de Hoog"},{"name":"Wes Bentley"},{"name":"Jessica Szohr"},{"name":"Hugh Grantntoon"},{"name":"Kerr Smith"},{"name":"David Brisbin"},{"name":"Dawn Didawick"},{"name":"Kelly McGillis"},{"name":"Talisa Soto"},{"name":"Russell Brand"},{"name":"Kaley Cuoco"},{"name":"Malik Bader"},{"name":"Takahiro Nishijima"},{"name":"Hikari Mitsushima"},{"name":"Sakura Andô"},{"name":"Cary Grant"},{"name":"Eva Marie Saint"},{"name":"James Mason"},{"name":"Michel Muller"},{"name":"Marton Csokas"},{"name":"Sophie Okonedo"},{"name":"Jackie ChaYa lei Kuei"},{"name":"Jaqueline FernandesShweta Kwatra"},{"name":"Prashant Narayanan"},{"name":"Sudhanshu Pandey"},{"name":"Sulagna Panigrahi"},{"name":"Sandeep Sikand"},{"name":"Akshay Kumarmber Elizabeth"},{"name":"Lee Byung Hun"},{"name":"Oh Dal Su"},{"name":"Lee Se Eun"},{"name":"Jeong Seok Yong"},{"name":"Lee Hae Eun"},{"name":"Greg KinJordan Carlos"},{"name":"Imran KhanTara D'Souzaljit Singh"},{"name":"Du Van Lạc"},{"name":"Dương Thiên Hoa"},{"name":"Ted Berman,Richard Rich"},{"name":"Jim Kammerud"},{"name":"Christialvart"},{"name":"Joe Pesci"},{"name":"Selma Blair"},{"name":"Robin ShouCary"},{"name":"Hiroyuki Tagawa"},{"name":"Bridgette Wilson"},{"name":"Christopher Lambert"},{"name":"Trevor Goddard"},{"name":"Chris Casamassa"},{"name":"Julian Sands"},{"name":"Julia Ormond"},{"name":"Colin Farrell"},{"name":"Michelle Rodriguez"},{"name":"Bruce McGill"},{"name":"Steve CarellToni Colletterkin"},{"name":"Shun Oguri"},{"name":"Kyôsuke Yabe"},{"name":"Meisa Kuroki"},{"name":"Michael Davis"},{"name":"Mirai Moriyama"},{"name":"Masami Nagasawa"},{"name":"Kumiko Asô"},{"name":"Laura Harring"},{"name":"Samantha Mathis"},{"name":"Jake GylleHolmes Osborne"},{"name":"Mary McDonnell"},{"name":"Doug Jones"},{"name":"James Cromwell"},{"name":"John Cromwell"},{"name":"Matthew Goode"},{"name":"Adam Scott"},{"name":"Trần Nghiên Hy"},{"name":"Dương Hựu Ninh"},{"name":"Thang Chí Vỹ"},{"name":"Jan de Bont"},{"name":"Gary Busey"},{"name":"Marlon Brando"},{"name":"Maria Schneider and Maria Michi"},{"name":"Danny Glover and Joe Pesci"},{"name":"Tom Hanks Vardalos"},{"name":"Alison Lohman"},{"name":"Ram Charan Teja"},{"name":"Dev Gill"},{"name":"Kimberly Peirce"},{"name":"Tomer Sisley"},{"name":"Antonio Banderas"},{"name":"Gregory Itzin"},{"name":"Mel Blanc"},{"name":"Don Brodie"},{"name":"Dickie Jones"},{"name":"Derek Jacobirthur Malet"},{"name":"Naomi WattsVanessa Chong"},{"name":"Yui Aragaki"},{"name":"Tôma Ikuta"},{"name":"Arata"},{"name":"Nanami Sakuraba"},{"name":"Mitsuki Tanimura"},{"name":"Mika Ninagawa"},{"name":"James McAvoy"},{"name":"Hugh Laurie"},{"name":"Josh Hartnett"},{"name":"A.R. Murugadoss"},{"name":"Vinayak V.V."},{"name":"Kirk De Micco,Chris Sanders"},{"name":"Trine Dyrholm Campbell Hughes"},{"name":"Terrence Malick"},{"name":"Cody Cameron,Kris Pearn"},{"name":"Từ Tranh"},{"name":"Lâm Bằng"},{"name":"Hứa Thiệu"},{"name":"Shikibu Murasaki"},{"name":"Izumi Kawasaki"},{"name":"Yukiko Takayama"},{"name":"Diệp Thanh"},{"name":"Vũ Nghệ"},{"name":"Khám Thanh Tử"},{"name":"Song Hae-seong"},{"name":"Han Eun jeong"},{"name":"Mao Inoue"},{"name":"Jonathan Sherr"},{"name":"Ryôko Kuninaka"},{"name":"Carina Lau"},{"name":"Kiều Nhâm Lương"},{"name":"Lâm Tuyết"},{"name":"Tim Meadows"},{"name":"Gad Elmaleh"},{"name":"Marie Christine Adam"},{"name":"Kim Cattrall"},{"name":"Eric Lively"},{"name":"Erica Durance"},{"name":"Dustin Milligan"},{"name":"Louis de Funès"},{"name":"Michel Galabru"},{"name":"Maurice Risch"},{"name":"Louis Hofmann"},{"name":"Leon Seidel"},{"name":"Heike Makatsch"},{"name":"Jean Lefebvre"},{"name":"Geneviève Grad"},{"name":"Từ Cẩm Giang"},{"name":"Triệu Hữu Lưỡng"},{"name":"Phác Nghệ Trần"},{"name":"Christian Marin"},{"name":"Clovis Cornillac"},{"name":"Benoît Poelvoorde"},{"name":"Melora Walters"},{"name":"Mathieu Chedid"},{"name":"Vanessa Paradis"},{"name":"Joe Anderson"},{"name":"David Grubin"},{"name":"James Ryan"},{"name":"Joseph Melito"},{"name":"Madeleine Stowe"},{"name":"Guy Grosso"},{"name":"Tomoko Yamaguchi"},{"name":"Roberto Benigni"},{"name":"Alain Chabat"},{"name":"Chung Kế Xương"},{"name":"Richard Gerelexander"},{"name":"Jordi Mollà"},{"name":"Chris Carmack"},{"name":"Rachel Miner"},{"name":"Melissa Jones"},{"name":"Dane Cook"},{"name":"Tae gyu Bong"},{"name":"Ryeowon Jung"},{"name":"Mischa Barton"},{"name":"Reece Thompson"},{"name":"Mark Rosman"},{"name":"Lisa Boyle"},{"name":"Đang cập nhậth Wyle"},{"name":"Stana Katic"},{"name":"SirLaosson Dara"},{"name":"h WyleBob Newhart"},{"name":"David A. Armstrong"},{"name":"Carlos Gallardo"},{"name":"Consuelo Gómez"},{"name":"Jaime de Hoyos"},{"name":"Sacha Baron Cohen"},{"name":"Luenell"},{"name":"Chris Tucker"},{"name":"John Lone"},{"name":"Akarin Siwapornpitak"},{"name":"Napakpapha Nakprasitte"},{"name":"Chanida Suriyakompon"},{"name":"Namo Tongkumnerd"},{"name":"Supaksork chaimongkon"},{"name":"Isara ochakul"},{"name":"Arisa wills"},{"name":"Tin settachoke"},{"name":"Krongthong rachatawan"},{"name":"Priscilla Presley"},{"name":"George Kennedy"},{"name":"An Chí Kiệt"},{"name":"Juan Carlos Medina"},{"name":"Maja Milos"},{"name":"O.J. Simpson"},{"name":"Elijah Wood"},{"name":"Yibai Zhang"},{"name":"Kevin Peter Hall"},{"name":"Chizuru Ikewaki"},{"name":"Yoshihiko Hakamada"},{"name":"Ken Leung"},{"name":"Geoffrey Arend"},{"name":"Billy Brown"},{"name":"Richard Burgi"},{"name":"Kelly Carlson"},{"name":"Jolene Blalock"},{"name":"Stephen Hogan"},{"name":"Leon Lai"},{"name":"Matthew Mercer"},{"name":"Eric Bauza"},{"name":"Wilda A. Rokos"},{"name":"Jonathan Freeman"},{"name":"Scott Weinger"},{"name":"Dan Castellaneta"},{"name":"Uma Thurman"},{"name":"Jeffrey Dean Morgan"},{"name":"Justina Machado"},{"name":"Gary Cole"},{"name":"Tamara Tunie"},{"name":"Natascha McElhone"},{"name":"Scott Stewart"},{"name":"Holly Dignard"},{"name":"Chris Thomas King"},{"name":"Jennifer Love Hewitt"},{"name":"Sam Waterston"},{"name":"Haing S. Ngor"},{"name":"John Malkovich"},{"name":"Martin Short"},{"name":"Mira Nair"},{"name":"Sonam Kapoor"},{"name":"Bruna Abdalah"},{"name":"Samir Soni"},{"name":"Aseem Tiwari"},{"name":"Kareena Kapoor"},{"name":"Om Puri"},{"name":"Gregory Peck"},{"name":"John Megna"},{"name":"Frank Overton"},{"name":"Mark Acheson"},{"name":"Michael Adamthwaite and Steve Blum"},{"name":"Koki Uchiyama"},{"name":"Lee So Yeon"},{"name":"Cha Tae Hyun"},{"name":"Lim Chae Mu"},{"name":"Mike Myers"},{"name":"David Cross"},{"name":"Neeraj Pandey"},{"name":"Morgan Lily"},{"name":"Ben Drew"},{"name":"Charlie Creed Miles"},{"name":"David Bradley"},{"name":"Jack"},{"name":"Roberts GaPeggy Holmes"},{"name":"DMX"},{"name":"Luke Kirby"},{"name":"Robin Williamsra Sukapatana"},{"name":"Thái Trác Nghiên"},{"name":"Lý Băng Băng"},{"name":"Reema Kagti"},{"name":"Evan Goldberg"},{"name":"Woo Seung Ho"},{"name":"Joh. Davis"},{"name":"James Mangold"},{"name":"Cameron Richardson"},{"name":"Robert Patrick"},{"name":"Carly Pope"},{"name":"Andrew Robinson"},{"name":"Clare Higgins"},{"name":"Ashley Laurence"},{"name":"Chung Chú Giai,Tiền Quốc Vĩ"},{"name":"Jerzy Stuhr"},{"name":"Renato Scarpa"},{"name":"Giovanni Ribisi"},{"name":"Delroy Lindo"},{"name":"Scott Caan"},{"name":"William Lee Scott"},{"name":"Naoto Takenaka"},{"name":"Jean Marais"},{"name":"Mylène Demongeot"},{"name":"Gigi Leung"},{"name":"Suki Kwan"},{"name":"Lưu Đức Hoà"},{"name":"ung JunHo"},{"name":"Kim MinJung"},{"name":"Yoo DongGeun"},{"name":"Sung DongIl"},{"name":"Yoon DooJoon"},{"name":"KwangHee"},{"name":"Suet Lam"},{"name":"Ruby Wong"},{"name":"Lunmei Kwai"},{"name":"Jillian Murrayshley Parker Angel"},{"name":"John Tormey"},{"name":"Sergey Chirkov"},{"name":"Marina Petrenko"},{"name":"Pavel Priluchnyy"},{"name":"Judi Dench"},{"name":"Jennifer Tilly"},{"name":"Bob Newhart"},{"name":"Eva Gabor"},{"name":"Geraldine Page"},{"name":"Peter Winther"},{"name":"Detlev Buck"},{"name":"John Candy"},{"name":"Tate Donovan"},{"name":"Susan Egan"},{"name":"James Woods"},{"name":"Baotian Li"},{"name":"Wang Xiaoxiao"},{"name":"Sterling Holloway"},{"name":"Edward Brophy"},{"name":"James Baskett"},{"name":"Kiefer Sutherlandmy Smart"},{"name":"Mike Möller"},{"name":"Takuya Kimura"},{"name":"Toshirô Yanagiba"},{"name":"Rene Auberjonois"},{"name":"Daniel J. Gillin"},{"name":"Trương Kiến Á"},{"name":"Henry Thomas"},{"name":"Dario Argento"},{"name":"Ai Kobayashi"},{"name":"Kôichi Yamadera"},{"name":"Yûji Kishi"},{"name":"Jesse Eisenberg"},{"name":"Ryan Reynolds"},{"name":"Gekidan Hitori"},{"name":"Yumi Kakazu"},{"name":"Charlie Yeung"},{"name":"Shahkrit Yamnarm"},{"name":"Ice Cube"},{"name":"Shûichirô Moriyama"},{"name":"Tokiko Katô"},{"name":"Sanshi Katsura"},{"name":"Chu Tấn"},{"name":"Mã Tinh Võ"},{"name":"Hoàng Hiểu Minh"},{"name":"Haruka Ayase"},{"name":"Keisuke Koide"},{"name":"Lâm Chí Linh"},{"name":"Tằng Chí Vĩ"},{"name":"Lưu Canh Hoành"},{"name":"Kha Thúc Nguyên"},{"name":"Emily Blunt"},{"name":"Elizabeth Daily"},{"name":"Lisa Lovbrand"},{"name":"David Kennedy"},{"name":"Michael Apted,Curtis Hanson"},{"name":"Zuleikha Robinson"},{"name":"Joel Coen"},{"name":"Ben Foster"},{"name":"Ed SpeleersJeremy Irons"},{"name":"Paul Chang"},{"name":"Kate BeckiGabriel Macht"},{"name":"Charlie Young"},{"name":"Kim Whee"},{"name":"Aaron Eckhart"},{"name":"Logan Lerman"},{"name":"Lưu Diệp phi"},{"name":"Hoắc Tử Lâm"},{"name":"Tân Lam"},{"name":"Craig Ferguson"},{"name":"John Cleese"},{"name":"Yeong hie Seo"},{"name":"Colin Hanks"},{"name":"Joung Yong-ju"},{"name":"Susan May Pratt"},{"name":"Richard Speight Jr."},{"name":"Niklaus Lange"},{"name":"Pascal Laugier"},{"name":"Kim Ji-hoon"},{"name":"David Schofield"},{"name":"Ruth Gemmell"},{"name":"Yoshikazu Fujiki"},{"name":"Sumi Mutoh"},{"name":"Hiroyuki Kinosha"},{"name":"Rob Corddry"},{"name":"Ellen Barkin"},{"name":"Kajol"},{"name":"Tabu"},{"name":"Shiney Ahuja"},{"name":"Sohrab Ardeshir"},{"name":"Jaspal Bhatti"},{"name":"Lillete Dubey"},{"name":"Lara Dutta"},{"name":"Ali Haji"},{"name":"Vrajesh Hirjee"},{"name":"Sanaya Irani"},{"name":"Gautami Kapoor"},{"name":"Rishi Kapoor"},{"name":"Kiron Kher"},{"name":"Sa Dật"},{"name":"Du Ân Thái"},{"name":"Khương Triều"},{"name":"Vương Lôi"},{"name":"Arbaaz Khan"},{"name":"Jay Chandrasekhar"},{"name":"Patrick Swayze"},{"name":"Vivek Agnihotri"},{"name":"Ruba Nadda"},{"name":"Orson Welles"},{"name":"Joseph Cotten"},{"name":"Dorothy Comingore"},{"name":"Lee Van Cleef"},{"name":"Mara Krupp"},{"name":"Luigi Pistilli"},{"name":"Eiichiro Hasumi"},{"name":"Jim CarreyAmir Ali Said"},{"name":"Brian Price"},{"name":"Nagarjuna Akkinenim"},{"name":"Sarah Wayne Callies"},{"name":"Julian McMahon"},{"name":"Jon voight"},{"name":"Will smith"},{"name":"Gene hackman"},{"name":"Akshay Kumar"},{"name":"Sidhu Deepika Padukone"},{"name":"Sakhi"},{"name":"Suzy Mithun Chakraborty"},{"name":"Dada Gordon Liu"},{"name":"Hojo"},{"name":"Craig Zobel"},{"name":"Preeti Barameeanat"},{"name":"Khanutra Chuchuaysuwan"},{"name":"Kumpanat Oungsoongnern"},{"name":"Tom Shadyac"},{"name":"Elisha Cuthbert"},{"name":"Daniel Radcliffe"},{"name":"Rupert Grint"},{"name":"Audrey HepburnBuddy Ebsen"},{"name":"Shawn Christensen"},{"name":"Colin Firth and Hugh Grant"},{"name":"David Anders"},{"name":"Chris Wylde"},{"name":"Louise Griffiths"},{"name":"Michael York"},{"name":"Derek Luke"},{"name":"Laz Alonso"},{"name":"Gitabak Agohjit"},{"name":"Speedy Arnold"},{"name":"Supakson Chaimongkol"},{"name":"Ewan McGregorBilly Crudup"},{"name":"Arya"},{"name":"Nayanthara"},{"name":"Santhanam"},{"name":"Ranveer Singh"},{"name":"Anushka Sharma"},{"name":"Kanksha"},{"name":"Clive OweLinus Roache"},{"name":"Allu ArjunPrakash RajTanikella BharaniM.S. Narayana"},{"name":"Adrian Moat"},{"name":"Diane Gaeta"},{"name":"Deborah Geffner"},{"name":"VJ Kewl"},{"name":"Chris Marquette"},{"name":"Shido Nakamura"},{"name":"Akashi Takei"},{"name":"Omar Sy and Anne Le Ny"},{"name":"Hema Malini"},{"name":"Sonu Sood"},{"name":"Akshay KumarParesh Rawal"},{"name":"Jackie Shroff"},{"name":"Tanushree Dutta"},{"name":"Shakti Kapoor"},{"name":"Rajpal Yadav"},{"name":"Asrani"},{"name":"Manoj Joshi"},{"name":"Stephanie Page"},{"name":"Farah Baig"},{"name":"Ashwani Chopra"},{"name":"Alexander Hathaway"},{"name":"Zac Efron"},{"name":"Barney Clark"},{"name":"Jeremy Swift"},{"name":"Erika Marozsán"},{"name":"Ramaa Mosley"},{"name":"Kellan Lutz"},{"name":"Ario Bayu"},{"name":"Judd Apatow"},{"name":"Leslye Headland"},{"name":"Michael Hoffman"},{"name":"Tyler Perry"},{"name":"Eugene Levy"},{"name":"Byron Mann"},{"name":"John Doman"},{"name":"Tom Elkins"},{"name":"Jason Sudeikis"},{"name":"Antonica Birchlexander Ilyin"},{"name":"Vương Học Binh"},{"name":"Phạm Hiểu Huyên"},{"name":"Maggie Q"},{"name":"Gabriela Oltean"},{"name":"Ashwani Dhir"},{"name":"Michael Moore"},{"name":"Thora Birch"},{"name":"William Black"},{"name":"Laura Vandervoort"},{"name":"Marsha Thomason"},{"name":"Demi Lovato"},{"name":"Joe Jonas"},{"name":"Barry Levinson"},{"name":"Iko UwaisRay Sahetapy"},{"name":"Michael Fassbender"},{"name":"Tara Ellis"},{"name":"Dwayne JohnsonSophia Robb"},{"name":"Naomi Wattsrmin Mueller Stahl"},{"name":"Jason Biggs"},{"name":"Trương Đào"},{"name":"Ngũ Sĩ Hiền"},{"name":"Trường Chinh"},{"name":"Michael Carney"},{"name":"Ngô Vũ Sâm"},{"name":"Mạch Điền"},{"name":"Fumihiko Sori"},{"name":"Lâm Tử Thông"},{"name":"Xu Jizhou"},{"name":"Uông Dương"},{"name":"Trúc Khanh"},{"name":"Francis Lee"},{"name":"Stephen Chbosky"},{"name":"Yudai Yamaguchi"},{"name":"Victor Salva"},{"name":"Guillermo del Toro"},{"name":"Chu Huỳnh Tâm"},{"name":"Jang Chang-won"},{"name":"Leo Zhang"},{"name":"Simon Curtis"},{"name":"Enrique GatoDavid Alonso"},{"name":"Lee An-Gyu"},{"name":"Matt AngelSuzanne Coote"},{"name":"La Chí Trung"},{"name":"Mar Targarona"},{"name":"Tiết Văn Hoa"},{"name":"Kobun ShizunoHiroyuki Seshita"},{"name":"Lin Oeding"},{"name":"Viên Hòa Bình"},{"name":"Dimitri Logothetis"},{"name":"Hong Sang-Soo"},{"name":"Lee Yong-Seung"},{"name":"Daisy Aitkens"},{"name":"Michael SpierigPeter Spierig"},{"name":"Mo Zhang"},{"name":"Yoshihiro Fukagawa"},{"name":"Vệ Lập Châu"},{"name":"Giảm Gia Vĩ"},{"name":"Cho Young-joon"},{"name":"Dorota KobielaHugh Welchman"},{"name":"Hạ Chi Chi"},{"name":"John Carroll Lynch"},{"name":"Steven DeGennaro"},{"name":"Trình Vĩ Hào"},{"name":"Cửu Cửu"},{"name":"Wei-Hao Cheng"},{"name":"Trần Bình"},{"name":"Quách Ngọc Long"},{"name":"Harold Cronk"},{"name":"Valerie FarisJonathan Dayton"},{"name":"Rian Johnson"},{"name":"Lý Vũ Hòa"},{"name":"Kaige Chen"},{"name":"Clay Staub"},{"name":"Jung-Chi Chang"},{"name":"David E. Talbert"},{"name":"Vương Nguy"},{"name":"Jing WongJason Kwan"},{"name":"Thẩm Dục Kiệt"},{"name":"Jonathan Li"},{"name":"Niels Arden Oplev"},{"name":"Pairach Khumwan"},{"name":"Lâm Vân Tường"},{"name":"Chung Thiếu Hùng"},{"name":"Liam O'Donnell"},{"name":"Scooter Corkle"},{"name":"Tomas AlfredsonMichael FassbenderRebecca FergusonCharlotte Gainsbourg"},{"name":"Lưu Hiên Dịch"},{"name":"Luca Guadagnino"},{"name":"Seiji Kishi"},{"name":"Kentaro Hagiwara"},{"name":"Hany Abu-Assad"},{"name":"Rob W. King"},{"name":"Yûichi Fukuda"},{"name":"Krishna D.K.Raj Nidimoru"},{"name":"Lý Quốc Nguyên"},{"name":"Michael Cuesta"},{"name":"Trâu Hỏa"},{"name":"Mã Tương"},{"name":"Kenji Kamiyama"},{"name":"Sài Sở Nhiên"},{"name":"Ngô Long"},{"name":"Lý Nam"},{"name":"Jayson Thiessen"},{"name":"Nattawut Poonpiriya"},{"name":"Triệu Hằng"},{"name":"Alex Zamm"},{"name":"Mariusz Palej"},{"name":"Adam Ripp"},{"name":"Thôi Tuấn Kiệt"},{"name":"Shûkô Murase"},{"name":"Lưu Kiến Hoa"},{"name":"Brian Smrz"},{"name":"Ryuichi Hiroki"},{"name":"Kwak Kyung-Taek"},{"name":"Greg McLean"},{"name":"Koji Shintoku"},{"name":"Viên Vệ Đông"},{"name":"Phạm Hướng Nam"},{"name":"Sofia Coppola"},{"name":"Cao Dục Tân"},{"name":"Lim Dae-Woong"},{"name":"Hác Chiêu Hách"},{"name":"Caroline LabrècheSteeve Léonard"},{"name":"Jang Hoon"},{"name":"Taiki Waititi"},{"name":"Ji-Yeong Hong"},{"name":"Ryan Schwartz"},{"name":"Dan Bush"},{"name":"Thái Khang Vĩnh"},{"name":"Phùng Tiểu Cương"},{"name":"Zhigang Yang"},{"name":"Fernando Lebrija"},{"name":"Cao Phi"},{"name":"Diệp Vỹ"},{"name":"George Nolfi"},{"name":"Chris Baugh"},{"name":"Carl Lindbergh"},{"name":"Viên Thước"},{"name":"Vương VY"},{"name":"Ben StassenJeremy Degruson"},{"name":"Alexandre BustilloJulien Maury"},{"name":"Iñaki Dorronsoro"},{"name":"Kenta FukasakuKinji Fukasaku"},{"name":"Kim Joo-Hwan"},{"name":"Kim Deok-Soo"},{"name":"Lâm Ái Hoa"},{"name":"Park Chan Wook"},{"name":"Zak Hilditch"},{"name":"Isara Nadeenon"},{"name":"Byun Sung Hyun"},{"name":"Matthew Chookiat Sakveerakul"},{"name":"Sarasawadee Wongsompetch"},{"name":"Chakrit Yamnam"},{"name":"Jieb Cheonyim"},{"name":"Kleur"},{"name":"Kitti Chiaowongsakul"},{"name":"Josh Schwartz"},{"name":"Nicolas Cage Meryl Streep Chris Cooper See full cast and crew"},{"name":"Josh Radnor"},{"name":"Han Sang-Ho"},{"name":"Tạ Na"},{"name":"Trần Gai Hoàn"},{"name":"Vương Tổ Lam"},{"name":"Demi MooreMary Kay Bergman"},{"name":"Justin Theroux"},{"name":"Casey Walker"},{"name":"Chris Klein"},{"name":"Thomas Ian Nicholas"},{"name":"Masahiko Murata"},{"name":"Naoyoshi Shiotani"},{"name":"Brandon Merrill"},{"name":"Roger Yuan"},{"name":"Matt Bettinelli-Olpin,David Bruckner"},{"name":"Megan Griffiths"},{"name":"Jodie Fosterndrews"},{"name":"Kim Dong Bin"},{"name":"Laurent Tirard"},{"name":"Jake Schreier"},{"name":"Will Ferrell Friel"},{"name":"Sacha Gervasi"},{"name":"Helena BoShirley Henderson"},{"name":"Robbie Coltrane"},{"name":"Ciaran Foy"},{"name":"Toshiyuki Tsuru"},{"name":"Joaquin Phoenix Barrett"},{"name":"Hirotsugu Kawasaki"},{"name":"Song Ji hyo"},{"name":"Kim Jae joong"},{"name":"Oh Dal soo"},{"name":"Han Sang jin"},{"name":"Helen Hunt"},{"name":"Erica Linz"},{"name":"Igor Zaripov"},{"name":"Lutz Halbhubner"},{"name":"Téa Leoni"},{"name":"Zhang Tongzu"},{"name":"James Nunn,Ronnie Thompson"},{"name":"Waymon Boone"},{"name":"Kevin Bray"},{"name":"Takayuki Hirao"},{"name":"Dennis QuaidEmmy Rossum"},{"name":"Scott Wiper"},{"name":"Trương Thư Hào"},{"name":"Tạ Hân Dĩnh"},{"name":"Austin Chick"},{"name":"Alex Man"},{"name":"Kwan Hoi Shan"},{"name":"Lo Lieh"},{"name":"Don Coscarelli"},{"name":"John Turturro"},{"name":"Tim Blake Nelson"},{"name":"John McTiernan"},{"name":"Laura Linney"},{"name":"Shohreh Aghdashloo"},{"name":"Jonas Pate"},{"name":"Richard Fleischer,Kinji Fukasaku"},{"name":"Rick Moranis"},{"name":"Anthony Barrile"},{"name":"Michael Boatman"},{"name":"Jennifer Decker"},{"name":"Jada Pinkett Smith"},{"name":"John Dahl"},{"name":"Mark A.Z. Dippé"},{"name":"Bart Layton"},{"name":"Gregory Hoblit"},{"name":"Mel Brooks"},{"name":"Peter MacNicol"},{"name":"Robert Guédiguian"},{"name":"J. Lee Thompson"},{"name":"Gabriele Muccino"},{"name":"Franklin J. Schaffner"},{"name":"Craig Viveiros"},{"name":"John Sturges"},{"name":"Catherine Hickslex Vincent"},{"name":"Marcus Dunstan"},{"name":"Gabriela Tagliavini"},{"name":"Steve Nicolson"},{"name":"Rick Warden"},{"name":"Samuel Hui"},{"name":"Nina Li Chi"},{"name":"Loletta Lee"},{"name":"Hing Suen"},{"name":"Robert Aldrich"},{"name":"Hồng Kim Bảognes Aurelio"},{"name":"Justin Dix"},{"name":"David Lean"},{"name":"BD Wong"},{"name":"Mark Moseley"},{"name":"James Yuen"},{"name":"Benh Zeitlin"},{"name":"GiaLiam Cunningham"},{"name":"Dan Bradley"},{"name":"Matthias Hoene"},{"name":"Leah Gibson"},{"name":"Torrance Coombs"},{"name":"Shannon Chan Kent"},{"name":"RowaWillem Dafoe"},{"name":"Steve Pemberton"},{"name":"Je-kyu Kang"},{"name":"Jeong Ki-Hun"},{"name":"Max Casella"},{"name":"Jean Louis Trintignant"},{"name":"Emmanuelle Riva"},{"name":"Isabelle Huppert"},{"name":"Yumei Anime"},{"name":"Yumei Sub"},{"name":"Sung-Hee Jo"},{"name":"Conor McMahon"},{"name":"Eric Hurt"},{"name":"Óskar Thór Axelsson"},{"name":"Ứng Thái Nhi"},{"name":"Đồng Đại Vi"},{"name":"Trần Gia Lâm"},{"name":"Song Ji Hyo"},{"name":"Jack McBrayer"},{"name":"Jane Lynch"},{"name":"So Ji Sub"},{"name":"Lee Mi Yeon"},{"name":"Kwak Do Won"},{"name":"Lee Kyung Young"},{"name":"Mario Azzopardi"},{"name":"Gaby Hoffmann"},{"name":"Kim Soo Ro"},{"name":"Moon Chae Won"},{"name":"Lee Min Ho"},{"name":"Ekin ChengConroy Chan Chi Chung"},{"name":"Patrick Muldoon"},{"name":"Sarah Kazemy"},{"name":"Nikohl Boosheri"},{"name":"Reza Sixo Safai"},{"name":"Josh Duhamel"},{"name":"Melissa George"},{"name":"Olivia Wilde"},{"name":"Gina Gershon"},{"name":"Chang-min Choo"},{"name":"Andres Muschietti"},{"name":"Xiaoming Huang"},{"name":"Quan Yuan"},{"name":"Li Yuan"},{"name":"Monica Mok"},{"name":"John Hawkes"},{"name":"CJ Adams"},{"name":"A.J. Draven"},{"name":"Finola Hughes"},{"name":"Fedor Borchuk"},{"name":"Daniel Hansenngela Bassett"},{"name":"Randeep Hooda"},{"name":"Sunny Leone"},{"name":"Junayeed Bin Fakhrul"},{"name":"Alexa Vega"},{"name":"Daryl Sabara"},{"name":"Brigitte Nielsen"},{"name":"Reni Santoni"},{"name":"KristaBen Kingsley"},{"name":"BeAaron Eckhart"},{"name":"Vương Tổ Hiền"},{"name":"Vu Vinh Quang"},{"name":"Cao Hùng"},{"name":"Sammi Cheng"},{"name":"Lý Ngọc"},{"name":"Jeremy Piven"},{"name":"Joel McHale"},{"name":"Zack Ward"},{"name":"Michael Paré"},{"name":"Maria Conchita Alonso"},{"name":"Puri Jagath"},{"name":"Salma Hayek"},{"name":"Hee soon Park"},{"name":"Chang Seok Ko"},{"name":"Teddy Robin Kwan"},{"name":"Sibelle Hu and Nina Li Chi"},{"name":"Lí Băng Băng"},{"name":"Trương Hàm Dư"},{"name":"Daniele BolelliKobe BryantGina Carano"},{"name":"Reginald Hudlin"},{"name":"Dan Inosanto"},{"name":"Diana Lee Inosanto"},{"name":"Lauro Chartrand"},{"name":"Sara Paxton"},{"name":"Matthew Davis"},{"name":"Clifton Collins Jr"},{"name":"Elizabeth OlseEric Sheffer Stevens"},{"name":"Julia Taylor Ross"},{"name":"Adam Barnett"},{"name":"Haley Murphy"},{"name":"BreSarah Michelle Gellar"},{"name":"Christoph Waltz"},{"name":"Go Hyun Jung"},{"name":"Sung Dong Il"},{"name":"Krista Allennten"},{"name":"Suraj Sharma"},{"name":"Irrfan Khan và Adil Hussain"},{"name":"Chris Massoglia"},{"name":"Haley Bennett"},{"name":"Trần Khả Tân"},{"name":"Masatoshi Nagase"},{"name":"Yasuko Matsuyuki"},{"name":"Tsuyoshi Abe"},{"name":"Masanobu Andô"},{"name":"Seigi Ozeki"},{"name":"Kanokkorn Jaicheun"},{"name":"Winai Kraibutr"},{"name":"Beffleck"},{"name":"Peter Weller"},{"name":"David Selby"},{"name":"Mayuko Fukuda"},{"name":"Vincent Lindon"},{"name":"Patrick Timsit"},{"name":"Philippe Nahon"},{"name":"Cheng Hui Yu"},{"name":"Yang Song and Yuanyuan Zhao"},{"name":"Chris Pine"},{"name":"Piper Perabo"},{"name":"Nicholas McCarthy"},{"name":"Martin McDonagh"},{"name":"Amy Brenneman"},{"name":"Connor Paolo"},{"name":"Nick Damici and Kelly McGillis"},{"name":"Dwight Yoakam"},{"name":"Ruth Livier"},{"name":"Marina Foïs"},{"name":"Kad Merad"},{"name":"Min Young Park"},{"name":"Dong wook Kim"},{"name":"Ye ron Kim"},{"name":"Michael J. Bassett"},{"name":"Robert Pattinson"},{"name":"Sarah Gadon"},{"name":"Michael Moriarty"},{"name":"Carrie Snodgress"},{"name":"Robin Dunne"},{"name":"Anubhav Si"},{"name":"Chen Shukai"},{"name":"Nimród Al"},{"name":"Jon Heder"},{"name":"Tom Arnold"},{"name":"Rebecca Black"},{"name":"Delphine Chanéac"},{"name":"Pauline Chan"},{"name":"Shu Chun Ni"},{"name":"Hsuan Shao"},{"name":"Chelsea Vincent"},{"name":"Peter Pedrero"},{"name":"Philip Coc"},{"name":"Maïwenn"},{"name":"Antonio Chavarrías"},{"name":"Rhona Mitra"},{"name":"Alexander Siddig"},{"name":"Hope Davis"},{"name":"Gemmenne De la Pena"},{"name":"Nicholas Hoult"},{"name":"Huỳnh Thu Sinh"},{"name":"Zachary Quinto"},{"name":"BeJennifer Garner"},{"name":"Adam Beach"},{"name":"Sergi Vizcaino"},{"name":"Adam Deyoe"},{"name":"Angelica Lee"},{"name":"Sarah Snook"},{"name":"Ryan Corr"},{"name":"Ole Bornedal"},{"name":"Tin Chiu Hung"},{"name":"Dustin MilligaRichard de Klerk"},{"name":"Eric Leightong"},{"name":"Neil Johnson"},{"name":"Shota Matsuda"},{"name":"Mikako Tabe"},{"name":"Mana Ashida"},{"name":"Eiko Koike"},{"name":"Mari Hamada"},{"name":"Kosuke Suzuki"},{"name":"Kazuma Suzuki"},{"name":"Jeneta St. Clair"},{"name":"Lisa Younger"},{"name":"Melissa Johnston"},{"name":"Yari BookWasing Prasertkul"},{"name":"ShawshmoreAshley Bell"},{"name":"Yuchun Li"},{"name":"Ching Tien Juan"},{"name":"Boran Jing"},{"name":"Lee Daniels"},{"name":"Luis Guzmán"},{"name":"Robert Forster"},{"name":"Edward Nortonh Emmerich"},{"name":"Ye won Kang"},{"name":"Yang Kyeong mo"},{"name":"Je hoon Lee"},{"name":"Tara Reid"},{"name":"Kavan Smith"},{"name":"Colby Johannson"},{"name":"Nicole de Boer"},{"name":"Jason London"},{"name":"Bruce Boxleitner"},{"name":"Aya Sugimoto"},{"name":"Guts Ishimatsu"},{"name":"Jun Kaname"},{"name":"Arak AmornsupasiriMario Maurer Sirimongkolsakul"},{"name":"Lim Sang Soo"},{"name":"Mike Phillips"},{"name":"Tobias Falk"},{"name":"Alex Frost"},{"name":"David Morse"},{"name":"Worawej Danuwong"},{"name":"Ryôta Ozawa"},{"name":"Yûki Yamada"},{"name":"Mao Ichimichi"},{"name":"Monica Lo"},{"name":"Etsushi Toyokawa"},{"name":"Kumiko Aso"},{"name":"Hiroshi Abe"},{"name":"Koji Higuchi"},{"name":"Aamir KhaTinnu Anand"},{"name":"Asin"},{"name":"John Cardiel"},{"name":"Vibha Chhibber"},{"name":"Mahendra Gole"},{"name":"Sunil Grover"},{"name":"Julien Boisselier"},{"name":"Karl Urban"},{"name":"Moon Bloodgood"},{"name":"Jennifer Chambers Lynch"},{"name":"Damian Lee"},{"name":"Will Forte"},{"name":"Kristen Wiig"},{"name":"Tôn Hồng Lôi"},{"name":"Vương Lạc Đơn"},{"name":"Vladimir Epifantsev"},{"name":"Sergey Astakhov"},{"name":"Harry Borg"},{"name":"Kôji Yakusho"},{"name":"Shûichi Azumaya"},{"name":"Mitsugorô Bandô"},{"name":"Akira Emoto"},{"name":"Mieko Harada"},{"name":"Masatô Ibu"},{"name":"Shunji Igarashi"},{"name":"Teruyuki Kagawa"},{"name":"Tôru Masuoka See more at: http://i max.vn/forum/#sthash.3Ar4U0jd.dpuf"},{"name":"Andrew Currie"},{"name":"Jessy Terrero"},{"name":"Sngmoo Lee"},{"name":"Seanders"},{"name":"Kang ho Song"},{"name":"Woo sung Jung"},{"name":"Andy Samberg"},{"name":"Kevin James"},{"name":"Molly Shannon"},{"name":"David Spade"},{"name":"CeeLo Green"},{"name":"Jon Lovitz"},{"name":"Brian George"},{"name":"Brian Stack"},{"name":"Jackie Sandler"},{"name":"Amitabh Bachchany Dutt"},{"name":"Vorakan Rojchanawatvit Dhanasevi"},{"name":"Sharlto Copley"},{"name":"Jason Cope"},{"name":"Nathalie Boltt"},{"name":"Sylvaine Strike"},{"name":"Sirin Horwang"},{"name":"Chanokporn Sayoungkul"},{"name":"Kurt Russell"},{"name":"Joe Chien"},{"name":"Nick Vallelo"},{"name":"Mila Kunis"},{"name":"Beau Bridges"},{"name":"Dwayne Johnson"},{"name":"Halle Berrymin Bratt"},{"name":"Kevin Conroy"},{"name":"Tim Daly"},{"name":"Susan Eisenberg"},{"name":"Liễu Đồng Đại Vy"},{"name":"Cam Vi"},{"name":"Tần Hạo"},{"name":"Đỗ Hải"},{"name":"CorbiDavid Nibley"},{"name":"Jasen Wade"},{"name":"Joel Schumacher"},{"name":"Quách Phẩm Siêu"},{"name":"Hoắc Kiến Hoa"},{"name":"Cảnh Điềm"},{"name":"Hác Hảo"},{"name":"Jeff King"},{"name":"Teri Hatcher"},{"name":"JetsadapornPoldeeRhys Ifans"},{"name":"Treat Williamsnthony Heald"},{"name":"Michael Apted"},{"name":"N!xau"},{"name":"Lena Farugia"},{"name":"Hans Strydom"},{"name":"Juan Carlos Hernández"},{"name":"Anastasiya Zavorotnyuk"},{"name":"Vincent Perez"},{"name":"Vladimir Menshov"},{"name":"Louis de Funès and Mylène Demongeot"},{"name":"Billy OganAchita Sikamana"},{"name":"Vijay Adhav"},{"name":"Ching Wan Lau and Mini Yang"},{"name":"William Fichtner"},{"name":"Marius Weyers"},{"name":"Sandra Prinsloo"},{"name":"Andrew Adamson"},{"name":"Paul Rudd"},{"name":"Malin Åkerman"},{"name":"iết Khải Kỳ"},{"name":"Chu Hiểu Hàm"},{"name":"Lara Flynn Boyle"},{"name":"Joe Mantegna and Joe Pantoliano"},{"name":"Amena Gul"},{"name":"Pornsuda Tawarapa"},{"name":"Thema Kanchanapairin"},{"name":"Worachat Thamwiji"},{"name":"Joo Sang wook"},{"name":"Jang Mi Ne"},{"name":"Mai Charoenpura"},{"name":"Anuway Niwartwong"},{"name":"Wiradit Srimalai"},{"name":"Paul Verhoeven"},{"name":"Wolfgang Petersen"},{"name":"Crystal Kwok"},{"name":"Jerry Trimble"},{"name":"Robert Guillaume and Cynthia Gibb"},{"name":"Mario MaurerWisawa Taiyanon"},{"name":"Tiểu Thẩm Dương"},{"name":"Triệu Bản Sơn"},{"name":"Trương Dịch"},{"name":"Trương Hâm Nghệ"},{"name":"Tony Toddh Hathaway"},{"name":"Gilles Lellouche"},{"name":"Tiền Gia Lạc"},{"name":"Wing Cho and Paul Chun"},{"name":"Carey Lowell"},{"name":"Peter Stebbings"},{"name":"Espen Sandberg"},{"name":"Lý Nhược đồng"},{"name":"Trần Tiểu Bình"},{"name":"Kaneshiro Takeshi"},{"name":"Lennie James"},{"name":"Mia Sara"},{"name":"Ron Silver"},{"name":"Lương Nhạc Dân"},{"name":"Donald Gibb"},{"name":"Eion Bailey"},{"name":"Clifton Collins Jr."},{"name":"Will Kemp"},{"name":"Jonny Lee Miller"},{"name":"Kathryn Morris"},{"name":"Doona Bae"},{"name":"Joon ho Bong"},{"name":"Ji hee Jin"},{"name":"Jean Claude Van DammeKieran Culkin"},{"name":"Natasha Henstridge"},{"name":"Catherine Dent"},{"name":"Robin Tunney"},{"name":"Trần Bách Tường"},{"name":"Lâm Hy Lôi"},{"name":"Vạn Tử Lương"},{"name":"Đặng Nhất Quân"},{"name":"Tiễn Vĩnh Cường"},{"name":"Trần Tiểu Xuân"},{"name":"Tiển Gia Lạc"},{"name":"Lý Thái Hoa"},{"name":"Cát Dân Huy"},{"name":"Pa Rittikrai"},{"name":"Salman KhanVinod Kha"},{"name":"Grant Bowler"},{"name":"Theresa Russell"},{"name":"Steve Carell"},{"name":"Mark DiSalle,David Worth"},{"name":"Dennis Rodman"},{"name":"Lawrence Taylor"},{"name":"Marnie Alton"},{"name":"Catherine O'Hara"},{"name":"Rhys Ifans"},{"name":"Mark Tonderai"},{"name":"Mic Rodgers"},{"name":"Philip Tan"},{"name":"Jo Min Soo"},{"name":"Lee Jeong Jin"},{"name":"Woo Gi Hong"},{"name":"Jason Moore"},{"name":"T. Altanshagaib"},{"name":"David Palmer,Dax Shepard"},{"name":"Yong-Joo Lee"},{"name":"Mark L. Lester"},{"name":"Robert Lorenz"},{"name":"Toshiyuki Kubooka,Michael Sinterniklaas"},{"name":"Olivia Thirlby"},{"name":"David Jacobson"},{"name":"S.S. Rajamouli,J.V.V. Sathyanarayana"},{"name":"Dương Nhã Triết"},{"name":"Barry Battles"},{"name":"David Koepp"},{"name":"Homi Adaja"},{"name":"David Morrissey"},{"name":"Alex Etel"},{"name":"Amy Heckerling"},{"name":"James Fargo"},{"name":"Ông Tịnh Đình"},{"name":"Olivia Munn"},{"name":"Anurag Basu"},{"name":"Kyu-Dong Min"},{"name":"Gene Hackman"},{"name":"Matt Craven"},{"name":"David Bowers"},{"name":"Doraemon"},{"name":"Nobita"},{"name":"Paul Thomas Arnold"},{"name":"Oto Brezina"},{"name":"Kip Canyon"},{"name":"Stefan Ruzowitzky"},{"name":"Melissa Leo"},{"name":"Konosuke Uda"},{"name":"Paul Emami"},{"name":"Kim Sang man"},{"name":"Jon Chu"},{"name":"Joe Johnston"},{"name":"Mackenzie Firgens"},{"name":"Elizabeth Henstridge"},{"name":"Cory Knauf"},{"name":"Jose Prendes"},{"name":"Sasha Roiz"},{"name":"Jenny Mollen"},{"name":"Dominic Bogart"},{"name":"Kodi Smit McPheeChristopher"},{"name":"Fernando Meirelles"},{"name":"Jerry Lawler"},{"name":"Beetlejuice"},{"name":"Ron Jeremy"},{"name":"Katie Peterson"},{"name":"Megan Peterson,John Douglas Sinclair"},{"name":"Tom Hardy"},{"name":"Tô Hữu Bằng"},{"name":"Hiroshi Tamaki"},{"name":"Kim Dong-Won"},{"name":"Lara Daans and Christian Slater"},{"name":"John Hyams"},{"name":"David Barrett"},{"name":"Marina de Van"},{"name":"Luis Prieto"},{"name":"Suri Krishnamma"},{"name":"Jun Ji Hyun"},{"name":"Kim Hye Soo"},{"name":"Lee Jung Jae"},{"name":"Kim Yoon Seok"},{"name":"Brittany Murphy"},{"name":"Tammy Blanchard"},{"name":"Melvil Poupaud"},{"name":"Sylvie Testud"},{"name":"Alexandra Lamy"},{"name":"Kim Joo-Ho"},{"name":"Todd Lincoln"},{"name":"Pat Holden"},{"name":"Phùng Thiệu Phong"},{"name":"Hoắc Tư Yến"},{"name":"Trần Xung"},{"name":"Khổng Quế"},{"name":"Khiêu An Liêm"},{"name":"Lương Tĩnh"},{"name":"Denis Lavant"},{"name":"Edith Scob"},{"name":"Eva Mendes"},{"name":"Shinichi"},{"name":"Yuki"},{"name":"Hideo"},{"name":"John Sham"},{"name":"Tracey Gold"},{"name":"Edward Furlong"},{"name":"Bug Hall"},{"name":"Ahn Sung Ki"},{"name":"Park Won Sang"},{"name":"Na Young Hee"},{"name":"Kristine DeBell and José Ferrer"},{"name":"Kim Dong wan"},{"name":"Moon Jeong hee"},{"name":"Lee Honey"},{"name":"BeRufus Sewell"},{"name":"Dominic Cooper"},{"name":"Bradley Parker"},{"name":"Devrim Evin"},{"name":"Ibrahim Celikkol"},{"name":"Dilek Serbest"},{"name":"Blacky Ko"},{"name":"Trịnh Du Linh"},{"name":"Eva Cobo deGarcia"},{"name":"Ikeda Shoko"},{"name":"Aldo Sanchez"},{"name":"Ken Lo Wai Kwong"},{"name":"Dominic MonaghaJordan Belfi"},{"name":"Rick Gomez"},{"name":"Chris Rock"},{"name":"Keoni Waxman"},{"name":"Kim Young Joon"},{"name":"Hayato Isohata"},{"name":"Masako Araki"},{"name":"Naomi Uno"},{"name":"Shô Sakurai"},{"name":"Sadao Abe"},{"name":"Kyôko Fukada"},{"name":"Dakota Fanning"},{"name":"Michael Shannon"},{"name":"Rupert Friend and Kathy Bates"},{"name":"Cameron Diaznd J. Todd Smith"},{"name":"Yôji Matsuda"},{"name":"Yûko Tanaka"},{"name":"Mark Davidmh Cusack"},{"name":"Olga Kurylenko"},{"name":"Liana Liberato"},{"name":"Thành LongRosamund Kwan"},{"name":"Lola Forner"},{"name":"Ken Boyle"},{"name":"Thành LongPhilip Chan"},{"name":"Alfred Cheung"},{"name":"Chieko Baishô"},{"name":"Tatsuya Gashûin"},{"name":"Kelly Sheridan"},{"name":"Lee Tockar"},{"name":"Kathleen Barr"},{"name":"Kelly SheridaCree Summer"},{"name":"Melissa Lyons"},{"name":"Chiara Zanni"},{"name":"Aom Sucharat Manaying"},{"name":"Tina Supanart Jittaleela"},{"name":"Arisara Tongborisuth"},{"name":"Soranut Yupanun"},{"name":"Minami Takayama"},{"name":"Rei Sakuma"},{"name":"Tiết Khải Kỳ"},{"name":"Wang Ziyi"},{"name":"Charmaine Fong"},{"name":"Sire Ma"},{"name":"Kelly Sheridan Lindbjerg"},{"name":"Youko HoKazuo Takahashi"},{"name":"Takashi Tachibana"},{"name":"Alessandro Juliani"},{"name":"AnaNatthaweeranuch Thongmee"},{"name":"Achita Sikamana"},{"name":"Sumi Shimamoto"},{"name":"Mahito Tsujimura"},{"name":"Hisako Kyôda"},{"name":"Kate Capshaw"},{"name":"Jonathan Ke Quan"},{"name":"Pupoom Pongpanul"},{"name":"Florian Lukas"},{"name":"David Kross"},{"name":"Stig Henrik Hoff"},{"name":"Lachlan Nieboer"},{"name":"Morten Faldaas"},{"name":"Kim Haugen"},{"name":"Muhammet Uzuner"},{"name":"Yilmaz Erdogan"},{"name":"Taner Birsel"},{"name":"Ahmet Mümtaz Taylan"},{"name":"Dung Tổ Nhi"},{"name":"Alison Doody"},{"name":"Liam Boylend Florence Hall"},{"name":"Wanchana SawatdeeChatchai PlengpanichSarunyu Wongkrachang"},{"name":"Bin"},{"name":"Ho kyung Go"},{"name":"Sin jeong Hwang"},{"name":"Kelly SheridanMelissa Lyons"},{"name":"London Symphony Orchestra"},{"name":"Cod Helten"},{"name":"Yasuo Yamada"},{"name":"Eiko Masuyama"},{"name":"Kiyoshi Kobayashi"},{"name":"Ô Nhĩ Thiện"},{"name":"Tabitha St. Germain"},{"name":"Catalina Sandino Moreno"},{"name":"Tony Giglio"},{"name":"Tạ Đình Đình"},{"name":"Đường Nhất Phi"},{"name":"Cesar MoPhillip Salvador"},{"name":"Sam Pinto"},{"name":"Ryô Ishibashi"},{"name":"Akaji Maro"},{"name":"Joe Flanigan"},{"name":"Kim Dae Seung"},{"name":"Na yeong Lee"},{"name":"Jang In ho"},{"name":"Perry Bha"},{"name":"Ben Lambert"},{"name":"Ewan Bailey"},{"name":"Claudia Bassols"},{"name":"Roark Critchlow"},{"name":"Neil Jackson"},{"name":"Iliana Lazarova"},{"name":"Dimitar Ougrinov"},{"name":"Andrew Lee Potts"},{"name":"Heida Reed"},{"name":"George Zlatarev"},{"name":"Jaycee Chan Yu Xia Deng Jiajia Jessica C. Dimartino Chen Han tien"},{"name":"Hayden Christensen"},{"name":"Lena Olin"},{"name":"Christopher McDonald"},{"name":"John TravoltaRichard Durden"},{"name":"Miu Miu"},{"name":"Tan Zhuo"},{"name":"Feng Danying"},{"name":"Zeng Xiangcheng"},{"name":"Yang Jincheng"},{"name":"Liu Enyou"},{"name":"Wang Junhe"},{"name":"Steve Austidam Beach"},{"name":"Kevin CostnerMark Charles Davis"},{"name":"Yoshikuni Dôchin"},{"name":"Mitsuru Fukikoshi"},{"name":"Mutsutoshi Furuhata"},{"name":"Masaya Kikawada"},{"name":"Matthew Morrison"},{"name":"J. Todd Smith"},{"name":"Tat kwong Chan"},{"name":"Pinky Cheung"},{"name":"Tae-kyeong Kim"},{"name":"Ninette Tayeb"},{"name":"Henry David"},{"name":"Seon gyun Lee"},{"name":"Min hie Kim"},{"name":"Seong ha Jo"},{"name":"Kathryn McCormick"},{"name":"Cleopatra Coleman"},{"name":"Mary Ure"},{"name":"Patrick Wymark"},{"name":"Max Giwa Pasquini"},{"name":"Ji Hwan Kang and Yu ri Sung"},{"name":"Antonio Banderas. Melanie Griffith"},{"name":"Shauna Pinkett"},{"name":"Ciaran Byrne"},{"name":"Thomas Kretschmann"},{"name":"Kristen Connolly Hutchison"},{"name":"Jeff Bridges Felix"},{"name":"Theeratorn Siriphuraporn"},{"name":"Emily Blunt and Amr Waked"},{"name":"Olivia Williams"},{"name":"Alfred Molina"},{"name":"Cara Seymour"},{"name":"William Melling"},{"name":"Jason Connery"},{"name":"George ClooneyJason Batemamy Morton"},{"name":"Scott Hicks"},{"name":"Hae il Park"},{"name":"Mu Yeol Kim"},{"name":"Kim Go Eun"},{"name":"Man shik Jeong"},{"name":"Park Cheol Hyeon"},{"name":"Jang Yun sil"},{"name":"Michael Spierig,Peter Spierig"},{"name":"Carlos Sanz"},{"name":"Nick Stahl and Taryn Manning"},{"name":"Dominique Horwitz"},{"name":"Sebastian Rudolph"},{"name":"Morris Chestnut"},{"name":"Matt Battaglia"},{"name":"Michel beaudry"},{"name":"Patrice bélanger"},{"name":"Pierre boudreau"},{"name":"Sarain boylan"},{"name":"Manon brunelle"},{"name":"Nicolas"},{"name":"Cuba Gooding Jr"},{"name":"Billy Murray"},{"name":"Catherine Zeta jones"},{"name":"Matthew Letscher"},{"name":"Roger Donaldson"},{"name":"Audrey Dana"},{"name":"Dominique Pinon"},{"name":"Raphaël"},{"name":"Sacha Baron CoheBen Kingsley"},{"name":"Tomohisa Yamashita"},{"name":"Karina"},{"name":"Nhậm Ðạt Hoa"},{"name":"Mu Chu and Ching Tien"},{"name":"Vahina Giocante"},{"name":"Miley Cyrus"},{"name":"Douglas Booth"},{"name":"Ashley Greene"},{"name":"Woo-ping Yuen"},{"name":"Lambert Wilson"},{"name":"Raphaëlle Agogué"},{"name":"Ta Wexler"},{"name":"Klaokaew Sintepdol"},{"name":"Masha Wattanapanich"},{"name":"Peter Knight"},{"name":"Jon Bon Jovi"},{"name":"Chris Ludacris Bridges"},{"name":"Seth Meyers"},{"name":"Lea Michele"},{"name":"Michelle"},{"name":"Chon WachananonChidjan Rujiphun"},{"name":"AMartin Rapold and Regula Grauwiller"},{"name":"Chris Fisher"},{"name":"Will SassoRip Torn"},{"name":"Fernando Alves Pinto"},{"name":"Caco Ciocler"},{"name":"Marat Descartes"},{"name":"Bill HaderJames Caan"},{"name":"JeBrianne Davis"},{"name":"Chase Ryan Jeffery"},{"name":"Mohamed Fellag"},{"name":"Sophie Nélisse"},{"name":"Émilien Néron"},{"name":"Marie Ève Beauregard"},{"name":"Antonio de la Torre"},{"name":"Joaquín Núñez"},{"name":"Don Cheadlebi"},{"name":"Zana Marjanovic"},{"name":"Goran Kostic and Rade Serbedzija"},{"name":"Mã Sở Thành"},{"name":"Philip Barantinidrian Bower"},{"name":"Hà Nhuận Đông"},{"name":"Tống Giai"},{"name":"Hà Thạnh Minh"},{"name":"Quách Minh Tường"},{"name":"Trần Ti Hàn"},{"name":"Si hyeon Park"},{"name":"Sang wook Joo"},{"name":"Jeong tae Kim"},{"name":"Han wi Lee"},{"name":"Kwang Soo Lee"},{"name":"Maxim Korostyshevsky"},{"name":"Dominique Swain"},{"name":"Jake Busey"},{"name":"Josh Allen"},{"name":"Lưu Hoa"},{"name":"Đào Hồng"},{"name":"Tôn Thuần"},{"name":"Phạm Vỹ Kỳ"},{"name":"Triệu Hựu Đình"},{"name":"Sui-man Chim,Kung-Lok Lee"},{"name":"Paul Dano"},{"name":"Julianne Moore Paul Dano"},{"name":"Lưu Đức Hoa trong"},{"name":"Boman Irani"},{"name":"Marta Etura"},{"name":"Sarah ButlerDaniel Franzese"},{"name":"Jang Jin"},{"name":"Tôn Lệ"},{"name":"Trịnh Sảng"},{"name":"Lam Doanh Doanh"},{"name":"Leticia Dolera"},{"name":"Đoàn Dịch Hồng"},{"name":"Steve Martino,Mike Thurmeier"},{"name":"Jon Voight"},{"name":"Eric Stoltz"},{"name":"Lâm Y Thần"},{"name":"Lý Nghi Phong"},{"name":"Lục Minh Quân"},{"name":"Eoin MackeTereza Srbova"},{"name":"Anthony Jabre"},{"name":"Cole Carson"},{"name":"Lauren Bair"},{"name":"Michael J. Prosser"},{"name":"Sean McGrath"},{"name":"John CusackKevin McNally"},{"name":"Oliver Jackson Cohen"},{"name":"Jimmy Yuill"},{"name":"Taylor Swift và Danny DeVito"},{"name":"You Da In"},{"name":"Yoo Yeon Seok"},{"name":"Rachel Weiszm"},{"name":"Pat Healy"},{"name":"Brandon Nutt"},{"name":"Mathieu Kassovitz"},{"name":"Iabe Lapacas"},{"name":"Malik Zidi"},{"name":"David A.R. White Zielinski and Randy Travis"},{"name":"Susa White"},{"name":"David Lister"},{"name":"Corey Sevier"},{"name":"Eve Mauro"},{"name":"Konstantin Lavronenko"},{"name":"Alessandra Torresani"},{"name":"Toby Hemingway"},{"name":"Jack Taylor"},{"name":"Emma Lung"},{"name":"Jirí Vejdelek"},{"name":"Topher Grace"},{"name":"Alice Braga"},{"name":"Sam Neillnd Louis Corbett"},{"name":"Huub Smit"},{"name":"Tim Haars"},{"name":"Wesley van Gaalen"},{"name":"Steffen Haars"},{"name":"Flip Van der Kuil"},{"name":"Peter Aerts"},{"name":"Lars Boekhorst"},{"name":"Filip Bolluyt"},{"name":"Jasper de Groot"},{"name":"Bart de Rijk"},{"name":"Maureen Eerdmans"},{"name":"Paul Elstak"},{"name":"Peter Faber"},{"name":"Robert Paul Jansen"},{"name":"Corry Konings"},{"name":"Matt Smith"},{"name":"Lesley Manville"},{"name":"Hadi Hajaig"},{"name":"Đỗ Kỳ Phong,Vi Gia Huy"},{"name":"Catherine Steadman"},{"name":"Richard Coyle and Ali Craig | See full cast and crew"},{"name":"Joel Murray"},{"name":"Tara Lynne Barr"},{"name":"Mackenzie Brooke Smith"},{"name":"FernaSimon Quarterman"},{"name":"Evan Helmuth"},{"name":"Ionut Grama"},{"name":"Suzan Crowley"},{"name":"Bonnie Morgan"},{"name":"Brian Johnson"},{"name":"Preston James Hillier"},{"name":"D.T. Carney"},{"name":"Erika Toda"},{"name":"Megumi Seki"},{"name":"Michiko Yoshise"},{"name":"YosiYosi Arakawa"},{"name":"Seiichi Tanabe"},{"name":"Diệp Đức Nhàn"},{"name":"Dominic West"},{"name":"Toby Regbo"},{"name":"Rupert Penry Jones"},{"name":"Greg KinPierce Brosnand Marisa Tomei"},{"name":"Juan Diego Botto"},{"name":"Carmelo Gómez"},{"name":"Sergi Calleja"},{"name":"Cliff Curtis"},{"name":"Xavier Samuel"},{"name":"Jessica McNamee"},{"name":"Robin McLeavy"},{"name":"Victoria Thaine"},{"name":"Pierfrancesco Favino"},{"name":"Filippo Nigro"},{"name":"Marco Giallini"},{"name":"Matthew Broderick"},{"name":"Maria Pitillo"},{"name":"Dana Ashbrook"},{"name":"Derek Mears"},{"name":"Maggie Grace"},{"name":"Michael Madsen"},{"name":"Rachel Hunter"},{"name":"Shandi Finnessey"},{"name":"Katie StegemanNick Principe"},{"name":"Zahiril Adzim"},{"name":"Faizal Hussein"},{"name":"Wan Hanafisu"},{"name":"Mitsuru Fukikoshisuka Kurosawa"},{"name":"Alyson Hannigan"},{"name":"Anthony DiBlasi"},{"name":"Isabelle Fuhrman"},{"name":"Melanie Griffith"},{"name":"Yuri Lowenthal"},{"name":"Drew Barrymoreyak"},{"name":"Amy Poehler And Will Arnett"},{"name":"Lauren German"},{"name":"Heather Matarazzo"},{"name":"Bijou Phillips"},{"name":"Tiếu Ngạo Giang Hồ"},{"name":"50 Cent"},{"name":"James SpaderJeremy Davies"},{"name":"Moon So Ri"},{"name":"Yoo Seung Ho"},{"name":"Choi Min Sik"},{"name":"Park Cheol Min"},{"name":"Jay Hernandez"},{"name":"Derek Richardson"},{"name":"Barbora Nedeljakova"},{"name":"Jan Vlasak"},{"name":"Jennifer Lim"},{"name":"Hoàng Lập Hành"},{"name":"Lương Vĩnh Kỳ"},{"name":"Julianne MooreLiam Neeson"},{"name":"Nathalie Kelley"},{"name":"Nick Eversman"},{"name":"Klaus Stiglmeier"},{"name":"Kwon Sang Woo (Quyền Tương Vũ)"},{"name":"Trương Thiều Hàm"},{"name":"Điềm Nữu"},{"name":"Đinh Xuân Thành"},{"name":"Tinh Bách Nhiên"},{"name":"Katie Featherston"},{"name":"Gabriel Johnson"},{"name":"Edward Irina Björklund"},{"name":"Johan Leysen"},{"name":"Dzhanik Fayziev"},{"name":"Văn Chương"},{"name":"Trương Gia Dịch"},{"name":"Trương Tử Huyên"},{"name":"Vương Diệu Khánh"},{"name":"Quách Kinh Phi"},{"name":"Ken Foree"},{"name":"Kristina Klebe and Emilio Roso"},{"name":"Sam Worthington"},{"name":"Shauna Macdonald"},{"name":"Natalie Mendoza"},{"name":"Alex Reid"},{"name":"Elena Anaya and Jan Cornet"},{"name":"Thunder Levin"},{"name":"Geoffrey Canada"},{"name":"George Reeves"},{"name":"Michelle Rhee"},{"name":"Bill Strickland"},{"name":"Paulie Rojas"},{"name":"Eliza Swenson"},{"name":"Billy Boyd"},{"name":"Jeffrey Combs"},{"name":"Hrithik RoshanRishi Kapoor"},{"name":"Sandra BullockJae Head"},{"name":"Marcos Efron"},{"name":"Thành Longn Bính Yến"},{"name":"Stephen Milburnderson"},{"name":"Rooney Mara"},{"name":"Bryan Barter"},{"name":"Dustin Fitzsimons"},{"name":"Alessandra Negrini"},{"name":"Fairuza Balk"},{"name":"Carey MulligaKeira Knightley"},{"name":"Izzy Meikle Small"},{"name":"Phùng Tổ Danh"},{"name":"Ngô Bội Từ"},{"name":"Hạc Cương"},{"name":"Trương Bá Tri"},{"name":"Lucas"},{"name":"Rebel Wilson"},{"name":"Olivia Newton John"},{"name":"Julia Dietze"},{"name":"Peta Sergeant"},{"name":"Udo Kier"},{"name":"Ava Gaudet and Kristopher Shepard"},{"name":"Armie Hammer"},{"name":"Kathrine Windfeld"},{"name":"Carlee Baker"},{"name":"Shana Barry and Marcia Bennett"},{"name":"Luis Tosarntonio Resines"},{"name":"Matthew Wolf"},{"name":"Antonie Kamerling"},{"name":"Reinout Oerlemans"},{"name":"Theo Maassen"},{"name":"Aleksandr Abdulov"},{"name":"Vladimir Ilyin"},{"name":"Mikhail Efremov"},{"name":"Mikhail Trukhin"},{"name":"Danielle Panabaker"},{"name":"Ving Rhames and David Hasselhoff"},{"name":"Pierre Salvadori"},{"name":"Yelena Lyadova"},{"name":"Nadezhda Markina"},{"name":"Aleksey Rozin"},{"name":"Mimi Zhu"},{"name":"Chao Wen"},{"name":"Philip Ng"},{"name":"Wan Chiu"},{"name":"Woo Yin"},{"name":"Harriet Yeung"},{"name":"Man Wai Wong"},{"name":"Rainn Wilson"},{"name":"Liv Tyler"},{"name":"Thomas Mann"},{"name":"Oliver Cooper"},{"name":"Bành Vu Án"},{"name":"Nguyễn Kinh Thiên"},{"name":"Trần Ý Hàm"},{"name":"Triệu Vy"},{"name":"Triệu Hữu Đình"},{"name":"Nữu Thừa Trạch"},{"name":"Quách Thái Khiết."},{"name":"Masaki Okada"},{"name":"Natsuki Harada"},{"name":"Heather Ann Davis"},{"name":"Eric Callero"},{"name":"Yiwei Liu"},{"name":"Wing Lun Ng"},{"name":"Austin Wai"},{"name":"You Nam Wong"},{"name":"Derek MearsTravis Van Winkle"},{"name":"Aaron Yoo"},{"name":"Tommy Lee JonesVincent D'Onofrio"},{"name":"Rip Torn"},{"name":"Siobhan Fallon"},{"name":"Mike Nussbaum"},{"name":"Jon Gries"},{"name":"Sergio Calderón"},{"name":"Carel Struycken"},{"name":"Vidya Balan"},{"name":"Parambrata Chatterjee"},{"name":"Dhritiman Chatterjee"},{"name":"Bonnie Hunt"},{"name":"Ruby Lin"},{"name":"Kara Hui and Monica Mok"},{"name":"Yoo Ho Jeong"},{"name":"Sim Eun Kyeong"},{"name":"Kang So Ra"},{"name":"Lee Min Jung"},{"name":"Lee Jung Jin"},{"name":"Park Hae Il"},{"name":"Kim Yoon Jin"},{"name":"Yoo Ah In"},{"name":"Kim Yoon Suk"},{"name":"Jang Dong Gun"},{"name":"Joe Odagiri"},{"name":"Kim In Kwon"},{"name":"Kerry Con"},{"name":"Han Eun Jung"},{"name":"Hyo Min"},{"name":"No Min Woo"},{"name":"Park Seong Min"},{"name":"Hwang Ji Hyun"},{"name":"Lee Hyung Suk"},{"name":"TaeMin"},{"name":"Sunny"},{"name":"Вера Алентова; Алексей Баталов; Ирина Муравьёва; Раиса Рязанова"},{"name":"Kwon Sang Woo"},{"name":"Jeong Ryeo Won"},{"name":"Jessica Chastain"},{"name":"Kim Ju Hyeok"},{"name":"Lee Yoon Ji"},{"name":"Lee Si Young"},{"name":"Kong Hyung Jin"},{"name":"Oh Jung Se"},{"name":"Bryant ChangYang Li Si"},{"name":"Park Heon Soo"},{"name":"Lee Sun Gyun"},{"name":"Choi Kang Hee"},{"name":"Oh Jeong Se"},{"name":"Ryoo Hyeon Kyeong"},{"name":"Song Yoo Ha"},{"name":"Baek Do Bin"},{"name":"Vivien Leigh"},{"name":"Kim Hunter"},{"name":"Karl Malden"},{"name":"Rudy Bond"},{"name":"ick Dennis"},{"name":"Peg Hillias"},{"name":"Wright King"},{"name":"Hyun Bin"},{"name":"Thang Duy"},{"name":"Kim Joon Seong"},{"name":"Kim Seo Ra"},{"name":"Park Min Hyeon"},{"name":"Mahesh Babu"},{"name":"Samantha Ruth Prabhu"},{"name":"Christopher Lap-Key Sun"},{"name":"Park Ye Jin"},{"name":"Jay Park"},{"name":"Mika Hijii"},{"name":"Todd Jensen"},{"name":"Togo Igawa"},{"name":"Garrick Hagon"},{"name":"Miles Anderson"},{"name":"Valentin Ganev"},{"name":"Atanas Srebrev"},{"name":"Scott Mechlowicz"},{"name":"Jacob Pitts"},{"name":"Han Suk Kyu"},{"name":"Ko Soo"},{"name":"Song Joong Ki"},{"name":"Han Ye Seul"},{"name":"Channing Tatum và Ice Cube"},{"name":"Martina García"},{"name":"Quim Gutiérrez"},{"name":"Clara Lago"},{"name":"AmaJennifer Carpenter"},{"name":"Meghan Ory"},{"name":"Warren Christie"},{"name":"Damon Santostefano"},{"name":"Lee Min Ki"},{"name":"Reese Witherspoon"},{"name":"Darreronofsky"},{"name":"Patrick Alessandrin"},{"name":"Katie Holmes"},{"name":"Liam"},{"name":"neeson"},{"name":"Elizabeth Berrington"},{"name":"Rudy Blomme"},{"name":"Olivier Bonjour"},{"name":"Mark Donovan"},{"name":"Eamonn Walker"},{"name":"Gerald McRaney"},{"name":"Rosemary Harris"},{"name":"Han-sol Shin"},{"name":"Adam SandlerDavid Hasselhoff"},{"name":"Jonathan Espolin"},{"name":"Bjørn Floberg"},{"name":"George Mendel"},{"name":"Samuel Axel Dan Badarau"},{"name":"Dimitri Darren Shahlavi"},{"name":"Stephen Graham"},{"name":"Terry Stone"},{"name":"Megan Fox"},{"name":"Johnny DeppDavid KellyJames Fox"},{"name":"Bridget Moynahan"},{"name":"Kenneth Mitchell"},{"name":"Miu Nakamura"},{"name":"Maiko Kawakami"},{"name":"Moe Arai"},{"name":"Ezra Miller"},{"name":"Nozomu Kasagi"},{"name":"CorbiAlexander Polinsky"},{"name":"Kirby Heyborne"},{"name":"Dane DeHaaMichael B. Jordan"},{"name":"Jaimie Alexander"},{"name":"John Cusackma Peet"},{"name":"Michael Haigney"},{"name":"Ted Lewis"},{"name":"Veronica Taylor"},{"name":"Ikue Otani"},{"name":"Sylvester StalloneMarc de Jonge"},{"name":"Jimmy Lin"},{"name":"Chie Tanaka"},{"name":"Peter Mullannd Eddie Marsan"},{"name":"Te-Sheng Wei"},{"name":"Izán Corchero"},{"name":"Samuel L.Jackson"},{"name":"Liz GilbertI. Gusti Ayu Puspawati"},{"name":"NyomoHadi Subiyanto"},{"name":"Ketut LiyerBilly Crudup"},{"name":"StephenViola Davis"},{"name":"George Gallo"},{"name":"Jomiel"},{"name":"Carly Schroeder"},{"name":"Jimmy Bennett"},{"name":"Ral Kleiser"},{"name":"Aaron Johnson"},{"name":"Emmanuelle Vaugier"},{"name":"Lawrence Turner"},{"name":"Nick Stahl"},{"name":"William Katt"},{"name":"Jeremy Northam"},{"name":"Roy Scheider"},{"name":"Lorraine Gary"},{"name":"Murray Hamilton"},{"name":"James Caviezel"},{"name":"Ray Stevenson"},{"name":"Jennifer Beals"},{"name":"John Cena"},{"name":"Luke Albright"},{"name":"Michael Arnona"},{"name":"Allen Boudreaux"},{"name":"Yancy Butler"},{"name":"Andy Tent"},{"name":"Dieter Laser"},{"name":"Ashley C. Williams"},{"name":"Ashlynn Yennie"},{"name":"Lik Sun Fong"},{"name":"Chrissie Chow"},{"name":"Stephen Fung"},{"name":"Shengyi Huang"},{"name":"Simon Lui"},{"name":"Keyman Ma"},{"name":"Liang Tian"},{"name":"Natalie Tong"},{"name":"Ava Yu"},{"name":"Thomas Horn"},{"name":"Christopher Ray"},{"name":"Clémence Poésy"},{"name":"Gina Carano"},{"name":"Matthew Perry"},{"name":"Jon Bernthal"},{"name":"Stanley Huang"},{"name":"Lý Ngải"},{"name":"Chu Diên Bình"},{"name":"Yuko Miyamura"},{"name":"Tom Selleck"},{"name":"Liễu Vân Long"},{"name":"BreRicky Garcia"},{"name":"Eugene Cordero"},{"name":"Michelle Williams"},{"name":"Sarah Michelle Gellar"},{"name":"Jason Behr"},{"name":"Clea DuVall"},{"name":"Demi LovatoMatthew \"Mdot\" Finley"},{"name":"Ray Winstone"},{"name":"Danny Huston"},{"name":"Bojana Novakovic"},{"name":"Jay O. Sanders"},{"name":"Channing Tatum and Sam Neill"},{"name":"Kate Bosworth"},{"name":"Amber Tamblynrielle Kebbel"},{"name":"Eliseo Subiela"},{"name":"Ken'ichi Matsuyama"},{"name":"Sota Aoyama"},{"name":"Shunji Fujimura"},{"name":"Edy Arellano"},{"name":"Helena Mattsson"},{"name":"Marco Bacuzzi"},{"name":"Peter Medak"},{"name":"BreHarrison Gilbertsond Steve Le Marquand"},{"name":"Shawnee SmithMatthew Knight"},{"name":"Terence Davies"},{"name":"Michael FassbenderElizabeth Masucci"},{"name":"Rachel Farrar"},{"name":"Loren Omer"},{"name":"Jackie Earle Haley"},{"name":"Kyle Gallner"},{"name":"Thomas Dekker"},{"name":"Jack Yao"},{"name":"Amber Kuo"},{"name":"Hsiao chuan Chang"},{"name":"Lawrence Ko"},{"name":"Frankie Gao"},{"name":"Peggy Tseng"},{"name":"Tony Yang"},{"name":"Paul Chiang"},{"name":"Vera Yen"},{"name":"Bo Syuan Wang"},{"name":"Brian Wong"},{"name":"Olivier Martinez"},{"name":"Ralph Brown"},{"name":"Matt Damonllen"},{"name":"Shiloh FernandezCandice Accola"},{"name":"Scott Martin"},{"name":"Rob Schneider Faris"},{"name":"Vivian Chan"},{"name":"Zach Cregger; Trevor Moore"},{"name":"Trịnh Tú Văn"},{"name":"Cao Viên Viên"},{"name":"Huỳnh Dịch"},{"name":"Vương Bảo Cường"},{"name":"Yu Jun Sang"},{"name":"Kim Sang Jung"},{"name":"Song Seon Mi"},{"name":"Tchéky Karyo"},{"name":"Daniel Duval"},{"name":"Vương Mẫn Đức"},{"name":"Văn Vịnh San"},{"name":"Cheong a Lee"},{"name":"Gi woong Park"},{"name":"Jake GylleAnne Hathaway"},{"name":"Hank Azaria"},{"name":"Josh Gad"},{"name":"Michael ArataDale Poniewaz"},{"name":"Stephen Roberts"},{"name":"Jethro Rothe Kushel"},{"name":"Sean Biggerstaff"},{"name":"Emilia Fox"},{"name":"Michelle Ryan"},{"name":"Jason Statham. Amy Smart"},{"name":"Efren Ramirez"},{"name":"Cung Le"},{"name":"Stephen Walters"},{"name":"Holly Weston"},{"name":"Sacha Dhawan"},{"name":"Asger Leth"},{"name":"Larry the Cable Guy"},{"name":"David Mackey"},{"name":"Erin Beute"},{"name":"Manfred Wong"},{"name":"Taro Otani"},{"name":"Sandra Ng"},{"name":"Leonardo Guerra"},{"name":"Tony Plana"},{"name":"Kuno Becker"},{"name":"Jorge Cervera"},{"name":"Herman Chavas"},{"name":"Alfredo Rodríguez"},{"name":"Donald Li"},{"name":"Kate Tomlinson"},{"name":"Jake Johnson"},{"name":"Zachary Johnson"},{"name":"Wong Yau Nam"},{"name":"Chen Kuan Tai"},{"name":"Leung Siu Lung"},{"name":"Marianne Faithfull"},{"name":"Miki Manojlovic"},{"name":"Kevin Bishop"},{"name":"Shao qun Yu"},{"name":"Elvis Tsui"},{"name":"Jesse Hutch"},{"name":"Mike Dopud"},{"name":"Ang Lee"},{"name":"Carl Ng"},{"name":"Bing Bai"},{"name":"Andrew Dasz"},{"name":"Steven Dasz"},{"name":"Noureen DeWulf"},{"name":"Mark Neveldine,Brian Taylor"},{"name":"Arnold SchwarzeneggerMichael Biehn"},{"name":"Ari Graynor"},{"name":"Arnold SchwarzeneggerEdward Furlong"},{"name":"Clark Gable"},{"name":"Thomas Mitchell"},{"name":"Nguyễn Phan Quang Bình"},{"name":"Saoirse RonaJames McAvoylfie Allen"},{"name":"Daniel de Oliveira"},{"name":"Hermila Guedes"},{"name":"Jefferson Brasil"},{"name":"Arnold Schwarzenegger Loken"},{"name":"Charles S. Dutton"},{"name":"Paul McGann"},{"name":"Alice Eve"},{"name":"Brian Geraghty"},{"name":"Gina May"},{"name":"Bashar Rahal"},{"name":"Christian Balenton Yelchin"},{"name":"Farhakhtar"},{"name":"Kyung Jung"},{"name":"Pink"},{"name":"Katherine HeiglJohn Leguizamo"},{"name":"Sherri Shepherd"},{"name":"Debbie Reynolds"},{"name":"Debra Monk"},{"name":"Nate Mooney"},{"name":"Adam Paul"},{"name":"Ana Reeder"},{"name":"Jenn Proske"},{"name":"Matt Lanter"},{"name":"Chris Riggi"},{"name":"Kate BeckiScott Speedman"},{"name":"Derek Jacobi"},{"name":"Rob Aguire"},{"name":"Julie Berman"},{"name":"Frank Langella"},{"name":"Bipasha Basu"},{"name":"Shweta Bhardwaj"},{"name":"Cindel Chartrand"},{"name":"Danielle Doetsch"},{"name":"William Jarand"},{"name":"Camilla Belle"},{"name":"Djimon Hounsou"},{"name":"Shaun Toub"},{"name":"Ji Hyeon Woo"},{"name":"Im Won Hee"},{"name":"Ko Chang Seok"},{"name":"Dennis Farina"},{"name":"Jeremy Irvinend David Thewlis"},{"name":"Kristyna Malérová"},{"name":"Max Mauff"},{"name":"Nino Chkheidze"},{"name":"Jeanette Hain"},{"name":"Russell WongCoco Chiang"},{"name":"Hu Qing Yun"},{"name":"Shi Ping Cao"},{"name":"Ruijia Zhang"},{"name":"Vivian Wu"},{"name":"Zhebing Gong"},{"name":"Lilia Zhou"},{"name":"Dominic West and Imelda Staunton"},{"name":"Vanessa Redgrave and David Thewlis"},{"name":"Heather Donahue"},{"name":"Michael C. Williams"},{"name":"Joshua Leonard"},{"name":"Kathy Baker"},{"name":"Madeline Carroll"},{"name":"Diane KrugerAlain FiglarzMehdi Nebbou"},{"name":"Raz Degan"},{"name":"Jeanne Bournaud"},{"name":"Anne Caillon"},{"name":"Elsa Levy"},{"name":"Laurent Bouhnik"},{"name":"ShiYun Da Hun"},{"name":"Oh Ji Ho"},{"name":"Marian Dziedziel"},{"name":"Borys Szyc"},{"name":"Magdalena Czerwinska"},{"name":"Jason Segel và Chris Cooper"},{"name":"Mary Louise Parker"},{"name":"Mia Stallard"},{"name":"Dermot Mulroney"},{"name":"Sam Shepard"},{"name":"Anders Juul"},{"name":"Hadi Ka Koush"},{"name":"Lærke Winther Andersen"},{"name":"Eddie Redmayne và Kenneth Branagh"},{"name":"Ama Bynes"},{"name":"Elizabeth McGovern"},{"name":"Tuesday Weld"},{"name":"Treat Williams"},{"name":"Richard Bright"},{"name":"James Hayden"},{"name":"William Forsythe"},{"name":"Rutger Hauer"},{"name":"Edward James Olmos"},{"name":"M. Emmet Walsh"},{"name":"Alexis Clagett"},{"name":"Brynn Clagett"},{"name":"Sung Young Chen"},{"name":"Salman Khan"},{"name":"Zarine Khan"},{"name":"Lisa Lasarus"},{"name":"Billy Ray Cyrus"},{"name":"ABrian Cox"},{"name":"Dylan Baker"},{"name":"Steventin"},{"name":"Abhay Deol"},{"name":"Mahie Gill"},{"name":"Kalki Koechlin"},{"name":"Danny Chan Bak Keung"},{"name":"George G. Colucci"},{"name":"Kate Mara"},{"name":"Jordana Brewster"},{"name":"Matt Bomer"},{"name":"Diora Baird"},{"name":"Helen Mirren"},{"name":"Ciarán Hinds"},{"name":"Romi Aboulafia"},{"name":"Tomer Ben David"},{"name":"Ohev Ben David"},{"name":"Jonathan Uziel"},{"name":"Eli Zohar"},{"name":"Irén Bordán"},{"name":"Georgia Groome"},{"name":"Eleanor Tomlinson"},{"name":"Manjeeven Grewal"},{"name":"Mary Elizabeth Winsteadshley Roberts"},{"name":"Jason Segel"},{"name":"Romany Malco"},{"name":"Catherine Tate"},{"name":"Luoc Lee"},{"name":"Michael Tao"},{"name":"Akira Kurosawa"},{"name":"François Truffaut"},{"name":"Sarah HabelMarcia Gay Harden"},{"name":"Barbara Coven"},{"name":"Eulala Scheel"},{"name":"Nina Kircher"},{"name":"Michael Mantell"},{"name":"Elliott Gould"},{"name":"Ray Xifo"},{"name":"Adam Lazarre White"},{"name":"Eddie Jemison"},{"name":"Shaobo Qin"},{"name":"Eric Bana"},{"name":"Zoe Saldana"},{"name":"Morjana Alaoui"},{"name":"Mylène Jampanoï"},{"name":"Catherine Bégin"},{"name":"Robert Toupin"},{"name":"Patricia Tulasne"},{"name":"Juliette Gosselin"},{"name":"Xavier Dolan"},{"name":"Isabelle Chasse"},{"name":"Emilie Miskdjian"},{"name":"Mike Chute"},{"name":"Gaëlle Cohen"},{"name":"Song Kang Ho"},{"name":"Byun Hee Bong"},{"name":"Bae Du Na"},{"name":"John Travoltallen"},{"name":"Doug Hutchison"},{"name":"Colin Salmon"},{"name":"Wayne Knight"},{"name":"Dash Mihok"},{"name":"Julie Benz"},{"name":"Stephanie Janusauskas"},{"name":"Mark Camacho"},{"name":"Romano Orzari"},{"name":"Keram Malicki Sánchez"},{"name":"Frank Vincent"},{"name":"Pasquale Cajano"},{"name":"Vinny Vella"},{"name":"Alan King"},{"name":"L.Q. Jones"},{"name":"Ryan KwanteDonnie Wahlberg"},{"name":"Michael Fairman"},{"name":"Joan Heney"},{"name":"Laura Regan"},{"name":"Dmitry Chepovetsky"},{"name":"Judith Roberts"},{"name":"Keir Gilchrist"},{"name":"Steven Taylor"},{"name":"Michael DouglasPaul Schulze"},{"name":"Brad PittLarry SoAndy Garcia"},{"name":"Casey Affleck"},{"name":"Michael PittRobin Renucci"},{"name":"Jean Pierre Kalfon"},{"name":"Jean Pierre Léaud"},{"name":"Florian Cadiou"},{"name":"Pierre Hancisse"},{"name":"Valentin Merlet"},{"name":"Lola Peploe"},{"name":"Lee Evans"},{"name":"James CaviezelFrancesco Cabras"},{"name":"Kevin ConroyBumper Robinson"},{"name":"Carlos Alazraqui"},{"name":"Claudia Black"},{"name":"Paul Blackthorne"},{"name":"Olivia d'Abo"},{"name":"Alexis Denisof"},{"name":"Phil Morris"},{"name":"Dee Bradley Baker"},{"name":"Grey DeLisle"},{"name":"Michael Buie"},{"name":"Bill NighyLiam Neeson"},{"name":"Lulu Popplewell"},{"name":"Kris Marshall"},{"name":"Emma Roberts"},{"name":"Tamsin Egerton"},{"name":"Akira Kamiya"},{"name":"Wakana Yamazaki"},{"name":"John Huston"},{"name":"David Lynch"},{"name":"Oliver Hirschbiegel"},{"name":"Audrey Hepburn"},{"name":"Ben StillerCarlos Mencia"},{"name":"Robert Corddry"},{"name":"Leilani Sarelle"},{"name":"Stan Collymore"},{"name":"Stuart Rosenberg"},{"name":"Julian Schnabel"},{"name":"Vittorio De Sica"},{"name":"Stanley Kubrick"},{"name":"Ki duk Kim"},{"name":"Yeong su Oh"},{"name":"Jong ho Kim"},{"name":"Jean Claude Van DammeKim Rømer"},{"name":"Sally Hawkins"},{"name":"Andrea Riseborough"},{"name":"Lorraine Stanley"},{"name":"Marie Avgeropoulos"},{"name":"Gil Bellows"},{"name":"Michael Eklund"},{"name":"Hae jin Yu"},{"name":"Ho jin Jeon"},{"name":"Dong seok Ma"},{"name":"Dong gi Woo"},{"name":"Yeong jin Jo"},{"name":"Seong min Lee"},{"name":"Su hyeon Kim"},{"name":"Bon woong Ko"},{"name":"Zhang Zi Yi"},{"name":"Chang Chen"},{"name":"Sihung Lung"},{"name":"Cheng Pei Pei"},{"name":"Keir O'Donnell"},{"name":"Katheryn Winnick"},{"name":"Laura Breckenridge"},{"name":"Cedric The Entertainer"},{"name":"Charles Chaplin,Edna Purviance,Jackie Coogan"},{"name":"William Wyler"},{"name":"Julianne Hough"},{"name":"Michael Cimino"},{"name":"Trent Sullivan"},{"name":"Stephen"},{"name":"Maggie Gracefulness"},{"name":"Juan José Campanella"},{"name":"Lee Seong jae"},{"name":"Yu Oh seong"},{"name":"Kang Seong jin"},{"name":"Anne Parillaud"},{"name":"Jeanne Moreau"},{"name":"Tcheky Karyo"},{"name":"Stephen Spinella"},{"name":"Wings Hauser"},{"name":"Dominic Sena"},{"name":"Joel Coen,Ethan Coen"},{"name":"Mikael Persbrandt"},{"name":"Trine Dyrholm"},{"name":"Markus Rygaard"},{"name":"Mark"},{"name":"Strong"},{"name":"Dragoş Bucur"},{"name":"Gustaf Skarsgård"},{"name":"Adam SandlerJon Stewart"},{"name":"Dylan Sprouse"},{"name":"Cole Sprouse"},{"name":"Devon Graye"},{"name":"Wes Chatham and C.J. Thomason"},{"name":"Barbara Streisand"},{"name":"Colin Firthm Carter"},{"name":"Nicole KidmaDianne Wiest"},{"name":"Kevin Chapman"},{"name":"Preeya Kalidas"},{"name":"Melissa Joan Hart"},{"name":"Chip Bent"},{"name":"Denzel WashingtoBruce Willis"},{"name":"Matthew Beard"},{"name":"Ray StevensonTony Darrow"},{"name":"Fionnula Flanagan"},{"name":"Jason Butler Harner"},{"name":"Tony Lo Bianco"},{"name":"Laura Ramsey"},{"name":"Steve Schirripa"},{"name":"Jonathan LaPaglia"},{"name":"Alan Tudyk and Katrina Bowden"},{"name":"Tabrett Bethell"},{"name":"Freya Stafford"},{"name":"Andy Whitfield"},{"name":"Tim McGraw"},{"name":"Leighton Meester"},{"name":"Haluk Bilginer"},{"name":"Colin O'Donoghue"},{"name":"Jerry Molden"},{"name":"John M. Murdock"},{"name":"Terry George"},{"name":"Alex Mallari Jr."},{"name":"J. Anthony Pena"},{"name":"Adriana Caselotti"},{"name":"Harry Stockwell"},{"name":"Lucille LaVerne"},{"name":"Moroni Olsen"},{"name":"Billy Gilbert"},{"name":"Edward NortonMeat Loaf"},{"name":"Ruta GedmiJoshua Bowman"},{"name":"Perdita Weeks"},{"name":"Paul Levesque"},{"name":"Kevin Corrigan"},{"name":"Kevin Rankin"},{"name":"Itsuji Itao"},{"name":"Yukihide Benny"},{"name":"Charles Binamé"},{"name":"Doug Liman"},{"name":"Pasha Ebrahimi"},{"name":"Robb Wells"},{"name":"Sasha Jackson"},{"name":"Elizabeth Mathis and Ben Milliken"},{"name":"Zachary Gordon"},{"name":"Devon Bostick"},{"name":"Rachael Harris"},{"name":"Robert Capron"},{"name":"Connor Fielding"},{"name":"Owen Fielding"},{"name":"Peyton List"},{"name":"Laine Macneil"},{"name":"Grayson Russell"},{"name":"Terence Kelly"},{"name":"Hàn Tuyết"},{"name":"Bruce WillisWilliam Shatner"},{"name":"Thomas Haden Church"},{"name":"Allison Janney"},{"name":"Avril Lavigne"},{"name":"Jada Pinket Smith Nhà sản xuất:"},{"name":"Cuba Gooding Jr.Nicki AycoxYancey Arias Forrestall"},{"name":"Kat Denningsndie MacDowell"},{"name":"Courteney Cox and Danny Glover"},{"name":"Milos Forman"},{"name":"Kurosawa Akira"},{"name":"Ed Helms"},{"name":"Carlos SaldaMike Thurmeier"},{"name":"Charles Laughton"},{"name":"Yuri Kanchiku"},{"name":"Hailee Steinfeld"},{"name":"Salman KhaParesh Rawal"},{"name":"Mahesh Manjrekar"},{"name":"Anuradha Patel"},{"name":"Manoj Pahwa"},{"name":"Akhilendra Mishra"},{"name":"Arya Babbar"},{"name":"Sudesh Lehri"},{"name":"Rajiv Kachroo"},{"name":"Hemant Pandey"},{"name":"Winstone"},{"name":"Temuera Morrison"},{"name":"Gareth Reeves"},{"name":"Ray Romano"},{"name":"Goran Visnjic"},{"name":"Cedric the Entertainer"},{"name":"Mélanie Laurent"},{"name":"David S. Goyer"},{"name":"ADennis Quaid"},{"name":"Carrie Underwood"},{"name":"Eddie Griffin"},{"name":"Terry Crews"},{"name":"Dana Carvey"},{"name":"Stephen DorffMarisol Nichols"},{"name":"Sam Elliott"},{"name":"Barbara Luddy"},{"name":"Larry Roberts and Peggy Lee"},{"name":"BreDon Cheadle"},{"name":"Gilles Marini"},{"name":"Charlotte Newhouse"},{"name":"Chris Miller"},{"name":"Walt Dohrn"},{"name":"Bret Marnell Miles Christopher Bakshi"},{"name":"Nina Zoe Bakshi"},{"name":"Guillaume Aretos"},{"name":"Billy Crystal"},{"name":"Mary Gibbs"},{"name":"MaliBilly Crudup"},{"name":"Park Chul Soo"},{"name":"Aimee Teegarden"},{"name":"Thomas McDonell"},{"name":"DeVaughn Nixon"},{"name":"Danielle Campbell"},{"name":"Kang Ye won"},{"name":"William Hurt"},{"name":"Michael Ealy và India Eisley"},{"name":"Dylan Moran"},{"name":"Jade Ramsey"},{"name":"Jimmy Fallon"},{"name":"Henry Simmons"},{"name":"Jennifer Esposito"},{"name":"Andy Serkis và Daniel Craig"},{"name":"Nicky Whelan"},{"name":"Pamela Anderson"},{"name":"Vivica A. Fox"},{"name":"Kim Ji hyeon"},{"name":"Choi Cheol ho"},{"name":"Ryu Su yeong"},{"name":"Asa Butterfield"},{"name":"Chloë Grace Moretz and Christopher Lee"},{"name":"BeCuba Gooding Jr."},{"name":"La Gia Anh"},{"name":"Kelly Hu"},{"name":"Sebastien Foucan"},{"name":"Ian Somerhalder"},{"name":"Ginnifer Goodwin"},{"name":"Colin Egglesfield"},{"name":"Kelly Preston"},{"name":"Jordan Garrett"},{"name":"Stuart Lafferty"},{"name":"Aisha Tyler and John Goodman"},{"name":"Ajay Devgan"},{"name":"Brandon T. Jackson"},{"name":"Jessica Lucas"},{"name":"Michelle Ang"},{"name":"Sarah Jessica Parkernd Kelsey Grammer"},{"name":"Arjun Rampal"},{"name":"Susumu Terajima"},{"name":"Maya Rudolph"},{"name":"Jean-Piere Jeunet"},{"name":"Jim Caviezellex Norton"},{"name":"Leonardo Dicaprio"},{"name":"Ed Westwick"},{"name":"Christopher Jordan Wallace"},{"name":"Jack Black and Steve Martin"},{"name":"Richard Sammel"},{"name":"Naga ChaitaKajal Agarwal"},{"name":"Srikanth"},{"name":"Kelly Dorji"},{"name":"Stacey Asaro"},{"name":"Gralen Bryant Banks"},{"name":"Rus Blackwell"},{"name":"Thái Thiếu Phân"},{"name":"Chu Ân"},{"name":"Reema Debnath"},{"name":"Phạm Văn Phương"},{"name":"Matthew Fox"},{"name":"Alfred Hitchcock"},{"name":"Tony Kaye"},{"name":"Yusuke Narita"},{"name":"Jonathan Demme"},{"name":"Gloria Swanson"},{"name":"George Lucas"},{"name":"ComedyRomance"},{"name":"Jung Jae Lee"},{"name":"Seo Woo"},{"name":"Stephy Tang"},{"name":"Janice Man"},{"name":"J.J. Jia"},{"name":"Yee Tong"},{"name":"Yoo Ha"},{"name":"Irvin Kershner"},{"name":"Richard Marquand"},{"name":"Tinto Brass"},{"name":"Michael Curtiz"},{"name":"Frank Capra"},{"name":"Hrithik Roshankhtar"},{"name":"Sam Douglas"},{"name":"Sydney Pollack"},{"name":"Todd Field"},{"name":"Just Jaeckin"},{"name":"Bill Oberst Jr."},{"name":"Tawny Amber Young"},{"name":"Devanny Pinn"},{"name":"Ivet Corvea"},{"name":"Jessica Elder"},{"name":"Kim Tae Hee"},{"name":"Jung Woo Sung"},{"name":"Bruce WillisJames Remary Couture"},{"name":"Jung Jun Ho"},{"name":"Shin Eun Kyung Shim Yi Young"},{"name":"Lee Seon Jin"},{"name":"Jessica Carlson"},{"name":"Michael Cerveris"},{"name":"Patrick Fugit"},{"name":"Daniel Newman"},{"name":"Morgan Saylor"},{"name":"Don McManus"},{"name":"Colleen Camp"},{"name":"Lý Liên KiệtTchéky Karyo"},{"name":"Max Ryan"},{"name":"Mary Costa"},{"name":"Bill Shirley"},{"name":"Eleanor Audley"},{"name":"Trần Đức Sâm"},{"name":"Brian Cox and Tony Curran"},{"name":"Michael Shannonnd Shea Whigham"},{"name":"Jimmy BennettJim Cummings"},{"name":"John Fiedler"},{"name":"Yôsuke Kubozuka"},{"name":"Takao Osawa"},{"name":"Đường Quốc Cường"},{"name":"Trương Quốc Lập"},{"name":"Lưu Kình"},{"name":"Trần Khôn"},{"name":"Ha Neul Kim vai Ji Eun iSeo won Cha vai Min Ji min"},{"name":"Jin Hee Lee"},{"name":"Chung Hân Ðồng"},{"name":"Michael Nyqvist"},{"name":"Ewa Fröling"},{"name":"Robin Wright và Philip Seymour Hoffman"},{"name":"Lý Liên Kiệ"},{"name":"Michelle Ferre and Mirai Yamamoto"},{"name":"Xu Jinglei"},{"name":"Quách Phú Thành. Ngô Kinh"},{"name":"Trương Tịnh Sơ"},{"name":"Heath LedgerRandy Quaid Cardellini"},{"name":"Stellan Skarsgård"},{"name":"Randy Quaid"},{"name":"Rachelle Lefevre; Stephen Moyer; Ed Quinn; Luis Guzmán; Lorna Raver"},{"name":"Ken Jeong"},{"name":"Bruce Lee"},{"name":"Lý Tử Long"},{"name":"Victor Webster"},{"name":"Trần Nghiên Hi"},{"name":"Ngạo Khuyển"},{"name":"Hác Thiệu Văn"},{"name":"Jérémie Renier"},{"name":"Jean Yanne"},{"name":"Jean François Stévenin"},{"name":"José Garciamado"},{"name":"JK Simmons"},{"name":"Al Pacino and Juliette Binoche"},{"name":"William Mapother and Matthew Lee Erlbach"},{"name":"Ben Stiller and Casey Affleck"},{"name":"Steven Waddington Agron"},{"name":"Ryan Gosling and Julianne Moore"},{"name":"Jude Lawtkins"},{"name":"Andrew Keegan"},{"name":"Brandon Quinn"},{"name":"Natalia Cigliuti"},{"name":"Nick Carter"},{"name":"Reno Wilson"},{"name":"Greg Grunberg"},{"name":"Rachel Weisz and Naomi Watts"},{"name":"Sara Paxtonnd Alyssa Diaz"},{"name":"John CusackJeremy Piven"},{"name":"John Corbett"},{"name":"Brad Birdva"},{"name":"Ed Kelly"},{"name":"Clarity Patton"},{"name":"Caleb Wolfe"},{"name":"Rommel Aya"},{"name":"Kate Bosworth and Alexander Skarsgård"},{"name":"Jeremy Irons"},{"name":"Chris Evansnd Vinessa Shaw"},{"name":"Hanyu Zhang"},{"name":"Yu Hai"},{"name":"Ding Laam"},{"name":"Yu Cheng Hui"},{"name":"Bebe Pham Jaymee Ong Benny Simpson"},{"name":"Peyman Maadi"},{"name":"Leila Hatami"},{"name":"Sareh Bayat"},{"name":"Johannes Krischmaria Haytö"},{"name":"Tên phim: Cổ Thiên Lạc"},{"name":"Ngô Thiên Ngữ"},{"name":"Austin Butler"},{"name":"Bradley Steven Perry"},{"name":"Cameron Goodman"},{"name":"Brandon Lee Ernie Hudson Rochelle Davis Michael Wincott Tony Todd"},{"name":"Rufus Sewell"},{"name":"Shannyn Sossamon"},{"name":"James Frecheville"},{"name":"Jeremy Davies"},{"name":"Vương Học Triết"},{"name":"Hải Thanh"},{"name":"James Frain"},{"name":"Nhâm Ðạt Hoa"},{"name":"Seung ho Yu"},{"name":"Kim Yeong ho"},{"name":"Gao Chang seok"},{"name":"Lau Ching Wan"},{"name":"Karen Mok"},{"name":"Francoise Yip"},{"name":"Trần Kiến Bân"},{"name":"Kim Hye Sun"},{"name":"Kiichi Nakai Ngô Chấn Ninh"},{"name":"Khương Văn"},{"name":"Danny Inosanto"},{"name":"Kareem Abdul Jabbar"},{"name":"Thành Longrano"},{"name":"Bobby Deol"},{"name":"Elizabeth Perkins"},{"name":"Brian Levant"},{"name":"Atlantis: The Lost Empire Đạo diễn: Diễn viên: Michael J. Fox"},{"name":"Claudia Christian"},{"name":"Jim Varney"},{"name":"John Mahoney Nhà sản xuất: Thể loại: Hoạt hình Độ dài:"},{"name":"Nicolas CageGuy Pearce"},{"name":"James Yuen Sai-Sang"},{"name":"Emma BellKevin Zegers"},{"name":"Ed Ackerman"},{"name":"Robby Benson"},{"name":"Paige O'Hara"},{"name":"Jerry Orbach"},{"name":"David Ogden Stiers"},{"name":"Lý Mạnh Quân"},{"name":"Sandra Ng Kwan Yue"},{"name":"Sui man Chim"},{"name":"William Chan Wai Ting"},{"name":"Lục Nghị"},{"name":"Heiward Mak"},{"name":"Matthew BroderickWhoopi Goldberg"},{"name":"Kal Penn"},{"name":"John Cho"},{"name":"Neil Patrick Harris"},{"name":"Susie Essman"},{"name":"Mark Walton"},{"name":"James Belushi"},{"name":"Song Kang ho"},{"name":"Yoon Doo hun"},{"name":"Shin Se kyung"},{"name":"Miyazaki Hayao"},{"name":"Kevin Kline"},{"name":"Odette ATopher Grace"},{"name":"Martin Wood"},{"name":"Justin TimberlakeBryan Greenberg"},{"name":"Kim Hee Sun"},{"name":"Haley Joel Osment"},{"name":"Connor Funk"},{"name":"Bob Joles"},{"name":"Tony Jay"},{"name":"John Rhys Davies"},{"name":"Phil Collins"},{"name":"Yoon Tae Yoon"},{"name":"John Chu"},{"name":"Derek Jeter"},{"name":"Salma Hayek and Zach Galifianakis"},{"name":"Chris Stokes"},{"name":"Scott WeingerJonathan Freeman"},{"name":"Gilbert Gottfried"},{"name":"Douglas Seale"},{"name":"Bille Woodruff"},{"name":"Chris Brown.J. Matt Dillon"},{"name":"Roger Carel"},{"name":"Lorànt Deutsch"},{"name":"Sara Forestier"},{"name":"Chris Gorak"},{"name":"Kim Kyu Ri"},{"name":"Ricky Kim"},{"name":"Robert Adetuyi"},{"name":"Vivek OberoiNeeru Bajwa"},{"name":"Kim Nam Gil"},{"name":"Hwang Woo Seul Hye"},{"name":"Yoon Je Moon"},{"name":"Conan"},{"name":"Mandy Moore Murphy"},{"name":"Chris Noth"},{"name":"Gina Torres"},{"name":"Hyeon Bin"},{"name":"Lee Yeon hee"},{"name":"Lee Han sol"},{"name":"Jo Yong joon"},{"name":"Ham Yoo seon"},{"name":"Jo Gyoo cheol"},{"name":"Im Chang jeong"},{"name":"Eom Ji won"},{"name":"Jeong Eun woo"},{"name":"Sa Hee"},{"name":"Cha Seung Won"},{"name":"T.O.P"},{"name":"Kim Seung Woo"},{"name":"Liao Fan"},{"name":"Hai Yitian"},{"name":"Simon Yam Tat Wah"},{"name":"Lam Suet"},{"name":"Leung Ka Yan"},{"name":"Guk Fung"},{"name":"Sukie Shek"},{"name":"Bau Hei Jing"},{"name":"Law Chung Him"},{"name":"Hui Siu Hung"},{"name":"Derek Tsang Kwok Cheung"},{"name":"Lawrence Cheng Tan Shui"},{"name":"Ha Da"},{"name":"Zhou Chuchu"},{"name":"Xiao Bao"},{"name":"T.J. Miller"},{"name":"Mike Vogel"},{"name":"Nate Torrence"},{"name":"Krysten Ritter"},{"name":"Geoff Stults and Lindsay Sloane"},{"name":"Rachel Ticotin"},{"name":"Ronny Cox"},{"name":"Peter Docter"},{"name":"Katt Williams"},{"name":"Bette Midler"},{"name":"Sean Hayes"},{"name":"Columbus Short"},{"name":"Óscar Jaenada"},{"name":"Holt McCallany"},{"name":"Peter Macdissi"},{"name":"Peter Francis James"},{"name":"Tanee McCall Short"},{"name":"Lim Seong eon"},{"name":"Kwak Ji min"},{"name":"Kim Kwang min"},{"name":"Will Ferre"},{"name":"Bruce Greenwoodckles and John Di Maggio"},{"name":"Zach Grenier"},{"name":"Marshall Bell"},{"name":"Toby Huss"},{"name":"BigBang"},{"name":"Kim Bum"},{"name":"U know Yunho"},{"name":"Lee Da Hae"},{"name":"Park Si Hoo"},{"name":"Han Chae Young"},{"name":"Nick Searcy"},{"name":"Paul Sanchez"},{"name":"Mary Steenburgen"},{"name":"ReiHolger Tappe"},{"name":"Woody Tim Allen"},{"name":"Buzz Lightyear Joan Cusack"},{"name":"Jessie Ned Beatty"},{"name":"Lotso Don Rickles"},{"name":"Mr. Potato Head Michael Keaton"},{"name":"Ken Wallace Shawn"},{"name":"Joaquim De Almeida"},{"name":"Pierre Coffin,Chris Renaud,Sergio Pablos"},{"name":"Mia Farrow"},{"name":"Tim Curry"},{"name":"Miki Mizuno"},{"name":"Makoto Togashi"},{"name":"Megumi Kagurazaka"},{"name":"Jeong Eun Chae"},{"name":"Yoon Da Kyeong"},{"name":"Enes Kaya"},{"name":"Abu Dod"},{"name":"Kristy Swanson"},{"name":"D.B. Sweeney"},{"name":"Lauren Cohan"},{"name":"Orlando Jones"},{"name":"Edmund Entin"},{"name":"Gary Entin"},{"name":"N.T.R. Rao Junior"},{"name":"Faye Dunaway and Elizabeth Mitchell"},{"name":"Nicolas Cage Speckles"},{"name":"Penélope Cruz Juarez"},{"name":"Bill Nighy Saber"},{"name":"Will Arnett Kip Killian"},{"name":"Zach Galifianakis Ben"},{"name":"Kelli Garner Marcie"},{"name":"Tyler Patrick Jones Connor"},{"name":"Piper ackenzie Harris Penny"},{"name":"Bak Ming Wong"},{"name":"Lynn Hung"},{"name":"Angela Baby"},{"name":"Fruit Chan"},{"name":"Chun Chau Ha"},{"name":"Aragaki Yui"},{"name":"Kaku Kento"},{"name":"Natsuna"},{"name":"Chris EvansEliza CoupeMike Vogel"},{"name":"Joel Michael"},{"name":"Maxime Godart"},{"name":"Sandrine Kiberlain"},{"name":"Maria Bello Cassidy"},{"name":"Bryan Larkin"},{"name":"Hugh Lambe and Bob Cymbalski"},{"name":"Seol Kyeong gu"},{"name":"Lee Jeong jin"},{"name":"Emily Blunt and Shohreh Aghdashloo"},{"name":"Han Geng"},{"name":"Alex Fong Lik Sun"},{"name":"Owodog"},{"name":"Siu Fei"},{"name":"Zhang Xinyu"},{"name":"Elanne Kong Yeuk Lam"},{"name":"Lu Yiu Qi"},{"name":"Mark WahlbergBen Foster"},{"name":"Lukas Hass"},{"name":"Tae hyun ChaJin hie Han"},{"name":"Eun,tae Kim"},{"name":"Alix Wilton RegaPhilip Brodie"},{"name":"Morgan Freemashley Judd and Harry Connick Jr"},{"name":"Takahiro Sakurai"},{"name":"Showtaro Morikubo"},{"name":"Ayumi Ito"},{"name":"Đỗ Vũ Hằng"},{"name":"Trịnh Gia Dĩnh"},{"name":"Charlotte Gainsbourg and Kiefer"},{"name":"Rob Freeman"},{"name":"Prince David Oseia"},{"name":"David Dontoh"},{"name":"David TentKate Ashfield"},{"name":"Joseph Gordon Levitt Kendrick"},{"name":"Hyeong-cheol Kang"},{"name":"Kim Vũ Thành."},{"name":"Bailee Madison"},{"name":"Viola Davis"},{"name":"Octavia Spencer"},{"name":"Bryce Dallas Howard"},{"name":"Dave Bautista"},{"name":"Amy Smart and Dominic Purcell"},{"name":"Joel Silver"},{"name":"Lionel Wigram"},{"name":"Susan Downey"},{"name":"Dan Lin"},{"name":"Rachel McAdams and Kathy Bates"},{"name":"Kwon Sang woo"},{"name":"Theeradej Wongpuapan"},{"name":"Matthew Gray Gubler"},{"name":"Amy Poehler và Jesse McCartney"},{"name":"Doreamon"},{"name":"Chaien"},{"name":"Trần Đại Minh"},{"name":"Christopher Plummer and Mélanie Laurent"},{"name":"Preity ZiShah Rukh Khan"},{"name":"Elizabeth Banks and Zooey Deschanel"},{"name":"Pierce Brorsan"},{"name":"Yoo Joon Sang"},{"name":"Heo Joon Ho"},{"name":"Yoo Seon"},{"name":"Madhavan"},{"name":"Mona Singh"},{"name":"Lochlyn Munro"},{"name":"Park Min Young"},{"name":"Kim Dong Wook"},{"name":"Kim Ye Ron"},{"name":"Shin Da Eun"},{"name":"Trey Parker"},{"name":"Matt Stone"},{"name":"Kristen Miller"},{"name":"Bae Yong Joon"},{"name":"Im Sang Hyo"},{"name":"Kim Kwang Il"},{"name":"Stephen Chow Sing Chi"},{"name":"Anita Mui Yim Fong"},{"name":"Ng Man Tat"},{"name":"Maryam d"},{"name":"Kim Su Mi Shin"},{"name":"Hyun Jun"},{"name":"Tak Jae Hun"},{"name":"Lim Hyung Jun"},{"name":"Jung Jun Ha"},{"name":"HyunYung"},{"name":"Rick D. Wasserman"},{"name":"Lisa Ann Beley"},{"name":"Mark Hildreth"},{"name":"Iam O'brien"},{"name":"Lý Quảng"},{"name":"Khương Quang Vũ"},{"name":"Tô Vũ Huyền"},{"name":"Từ Khắc"},{"name":"Shin Dong Yup"},{"name":"Cheung Man"},{"name":"Shing Fui On"},{"name":"Vincent Wan"},{"name":"Roger Moore Roberts"},{"name":"Yang Dong Geun"},{"name":"Park Geun Hyeong"},{"name":"Ko Doo Sim"},{"name":"Park Sa Rang"},{"name":"Woo Hyeon"},{"name":"Baek Jong hak"},{"name":"Jo In Sung"},{"name":"Cho Seung Woo"},{"name":"Lee Ki Woo"},{"name":"Lee Sang In"},{"name":"Kang ho Song Lee Han kyu Dong won Kang Song Ji won"},{"name":"Sean Conneryuer"},{"name":"Im Soo jeong"},{"name":"Gong Yoo"},{"name":"Cheon Ho jin"},{"name":"Jeon Soo kyeong"},{"name":"Lee Cheong ah"},{"name":"Nick Cheung Ka FaiEddie Cheung Siu Fai"},{"name":"Ben Ng"},{"name":"Lois Chiles"},{"name":"Machel Lonsdate"},{"name":"Richard Kiel"},{"name":"Corinne Clery"},{"name":"Wong Chi"},{"name":"Brian Christopher O'Halloran"},{"name":"Jeff Anderson"},{"name":"Stephen Chow Sing ChiChau Sang"},{"name":"Anita Yuen"},{"name":"Law Kar Ying"},{"name":"Yammie Nam"},{"name":"Kong Yeuk"},{"name":"Yat Fei"},{"name":"Tin Kai Man"},{"name":"Lam Chi Sin"},{"name":"Lam Chi Chung"},{"name":"Teresa"},{"name":"Mo Sun Kwan"},{"name":"Wu Ma Amy"},{"name":"Yip Chi Mei"},{"name":"Yiu Yeung"},{"name":"Jin yeong Jeong"},{"name":"Mun shik Lee"},{"name":"Seung yong Ryoo"},{"name":"Jared Kusnitz"},{"name":"Greyson Chadwick"},{"name":"Chandler Darby"},{"name":"James Wong Jim"},{"name":"Deannie Yip"},{"name":"Athena Chu"},{"name":"Steven Chow Sing Chi"},{"name":"Roy Chiao (Kiu Wang)"},{"name":"Raymond Wong Bak Ming Francis Ng Chun Yu"},{"name":"Wu Chien Lien"},{"name":"(Ng Sin Lin)"},{"name":"Christine Ng"},{"name":"Wing Mei"},{"name":"Gigi Lai Chi"},{"name":"Châu tinh trì"},{"name":"Châu tinh trì﻿"},{"name":"Nina Li"},{"name":"Bành Thuận,Bành Phát"},{"name":"trương học hữu"},{"name":"Barbara Bach"},{"name":"Curd Jürgens"},{"name":"Ada Choi"},{"name":"Anthony Wong"},{"name":"Joseph Cross"},{"name":"John Pyper Ferguson"},{"name":"Brando Eaton"},{"name":"Nicole Badaan"},{"name":"Sherry Stringfield"},{"name":"Spencer Breslin"},{"name":"Jill St. John"},{"name":"Charles Gray"},{"name":"Châu Vận"},{"name":"Liêu Phàm"},{"name":"Harry Saltzmallbert R. Broccoli"},{"name":"Kitty Zhang"},{"name":"Xu Jiao"},{"name":"Akiko Wakabayashi"},{"name":"Mie Hama"},{"name":"Tetsuro Tamba"},{"name":"Teru Shimada"},{"name":"Gordon Chan Car-Seung Car Seung"},{"name":"Chung Chi Li,Jacky Wu"},{"name":"Liam Neeson Colonel Hannibal Smith Bradley Cooper"},{"name":"Lý Nhân Cảng"},{"name":"Châu Tinh TrìCarina Lau"},{"name":"Carman Lee"},{"name":"Sean Connery (James Bond)"},{"name":"Claudine Auger (Domino)"},{"name":"Adolfo Celi (Emilio Largo)"},{"name":"Luciana Paluzzi (Fiona Volpe)"},{"name":"Rik Van Nutter (Felix Leiter)"},{"name":"Max Moki"},{"name":"Ellen Chan"},{"name":"Wilson Yip,Donnie Yen"},{"name":"Eric Kot"},{"name":"Bowie Lam"},{"name":"Lee Kin Yan"},{"name":"Wong Yuk"},{"name":"Fennie Yuen"},{"name":"Sheila Chan"},{"name":"Jason Yee"},{"name":"Samantha Streets"},{"name":"Gary Stretch"},{"name":"Mạc Văn Úy"},{"name":"Natasha Yarovenko"},{"name":"Enrico Lo Verso"},{"name":"Najwa Nimri"},{"name":"Ann Bridgewater"},{"name":"Từ Phụ Quân"},{"name":"Kim Dong Won"},{"name":"Jon Foonthony Dale"},{"name":"Alice Taglioni"},{"name":"Stéphane Debac"},{"name":"Ami Can Mann"},{"name":"John Singleton"},{"name":"Elliott Lester"},{"name":"Prabhas"},{"name":"Johnny Trí Nguyễn"},{"name":"Hoàng Phúc"},{"name":"Lâm Minh Thắng"},{"name":"Hiếu Hiền"},{"name":"Taylor Lautner"},{"name":"Dustin Nguyễn"},{"name":"Nguyên Thân"},{"name":"Trần Mộc Thắng"},{"name":"Hồng Hân Hân"},{"name":"Eiichiro Funakoshi"},{"name":"Akiko Matsumoto"},{"name":"Ryohei Hirota"},{"name":"Mao Sasaki"},{"name":"Shin Ha kyun và Kim Ok bin"},{"name":"J. J Abrams"},{"name":"Jack Lord"},{"name":"Ursula Andress"},{"name":"Peter Burton"},{"name":"David R. Ellis"},{"name":"Nina Dobrevnd Kellan Lutz"},{"name":"Robert Fucilla"},{"name":"Kirsty Mitchell"},{"name":"Vas Blackwood"},{"name":"Rob James Collier & Geoff Bell"},{"name":"Jeong Jae Young"},{"name":"Samuel L Jackson"},{"name":"Asia Argento"},{"name":"Eve"},{"name":"Sidney Lumet"},{"name":"Bruce Willis50 cent"},{"name":"Albert Brooks"},{"name":"Daniel Aguirre"},{"name":"Luis Bredow"},{"name":"Anton Yelchinnt"},{"name":"America Ferrera"},{"name":"Christopher Mintz Plasse"},{"name":"Bruce WillisReila Aphrodite"},{"name":"Kevin Beard"},{"name":"Rongguang Yu"},{"name":"Iron Monkey / Dr. Yang Donnie Yen"},{"name":"Wong Kei Ying Jean Wang"},{"name":"Miss Orchid Shi Kwan Yen"},{"name":"Hiu Hing (as Yee Kwan Yan) James Wong"},{"name":"Governor Cheng Hou Hsiao"},{"name":"Disfigured Swordsman Sze Man Tsang"},{"name":"Young Wong Fei Hung Shun Yee Yuen"},{"name":"Frank Darabont"},{"name":"Brandon Routh"},{"name":"Anita Briem"},{"name":"Sam Huntington"},{"name":"Kim Han-Min"},{"name":"Danny McBride"},{"name":"Ha Ji Won"},{"name":"Mary Elizabeth WinsteadPaul BraunsteinStig Henrik Hoff"},{"name":"Kristofer Hivju"},{"name":"Jo Adrian Haavind"},{"name":"Carsten Bjørnlun"},{"name":"Sean Rogerson"},{"name":"Juan Riedinger"},{"name":"Ashleigh Gryzko"},{"name":"Lý Mạn Quân"},{"name":"Paz Vega"},{"name":"Janet McTeer"},{"name":"Michelle Lombardo"},{"name":"Branko Djuric"},{"name":"D.L. Hughley"},{"name":"Jelena Gavrilovic"},{"name":"Alphonso McAuley"},{"name":"Ana Sakic"},{"name":"Bill Perkins"},{"name":"Gordan Kicic"},{"name":"Dong Zhi Hua"},{"name":"Chiu Chi Ling"},{"name":"Boyd Holbrook"},{"name":"Michael Rispoli"},{"name":"Jack Conley"},{"name":"Rio Alexander"},{"name":"Robert Sheehan"},{"name":"Pete Postlethwaite"},{"name":"Michael ADeborah Aquila"},{"name":"Nicholas Braun"},{"name":"Ronnie Connell"},{"name":"Kaylee DeFer"},{"name":"Nathan FillioAdam Baldwin"},{"name":"Summer Glau"},{"name":"Isshin Chiba"},{"name":"Erik Scott Kimerer and Yuki Matsuoka"},{"name":"Nick Nolte and Joel Edgerton"},{"name":"Golo López Gallego"},{"name":"Rachel Nichols"},{"name":"Maeve Dermody"},{"name":"Toby Schmitz"},{"name":"Patrick Brammall"},{"name":"Matthew Macfadyen"},{"name":"Patrick Labyorteaux"},{"name":"Julie McCullough"},{"name":"Nick Afanasiev"},{"name":"Bradley CooperAbbie Cornish"},{"name":"RowaRosamund Pike"},{"name":"Tom Hughes"},{"name":"Freddie Highmorerano"},{"name":"Laxa Doig"},{"name":"Darren Shahlavi"},{"name":"Hayley Atwell"},{"name":"Justin Timberlake"},{"name":"Maggie Cheung Ho Yee"},{"name":"Candy Lo"},{"name":"Lei Lam"},{"name":"Jun Kung"},{"name":"Charlie Cho"},{"name":"Alan Chui Chung San"},{"name":"Elena Kong"},{"name":"King Kong Lam"},{"name":"Trình Tiểu Đông"},{"name":"Brooklyn Decker"},{"name":"Liam Neesonry Jones"},{"name":"Mary Kate Olsen"},{"name":"Ryan ReynoldsMircea MonroeMatt Cornwell"},{"name":"Bingbing Li"},{"name":"Winston Chao"},{"name":"Jaycee Chan"},{"name":"Duobuji"},{"name":"Simon Dutton"},{"name":"Ge Hu"},{"name":"Ming Hu"},{"name":"Zhi zhong Huang"},{"name":"Rachel Bilson"},{"name":"Tom Sturridge"},{"name":"Jennifer Yuh"},{"name":"Ben McKenzie and Eliza Dushku"},{"name":"Lee Pace"},{"name":"Son Byeong Ho"},{"name":"Im Ha Ryong"},{"name":"Choi Jeong Yoon"},{"name":"Kim Sae Ron"},{"name":"Cheon Seong Hoon"},{"name":"Maggie Smith"},{"name":"Gary McKendry"},{"name":"Jon Hewitt"},{"name":"Chris Hemsworth"},{"name":"En chun Chiao"},{"name":"Ye Liu"},{"name":"Zilin Zhang"},{"name":"MiLeighton Meester and Cam Gigandet"},{"name":"Chris Trebilcock"},{"name":"Giang Khải"},{"name":"Lưu Tử Vi"},{"name":"Chris Peckover"},{"name":"Jang Cheol Soo"},{"name":"Hứa An Hoa"},{"name":"Alain Desrochers"},{"name":"Diêm Học Khai"},{"name":"Ken Iizuka"},{"name":"Tưởng Trác Nguyên"},{"name":"Vương Bình Nguyên"},{"name":"Han Jae-Rim"},{"name":"Griff Furst"},{"name":"Tạ Đông Sân"},{"name":"Wang Ran"},{"name":"David Leitch"},{"name":"Holger Tappe"},{"name":"Claudio Fäh"},{"name":"Gary Rydstrom"},{"name":"Lý Á Đông"},{"name":"Antonio Negret"},{"name":"Aisling Walsh"},{"name":"Tham Hoa"},{"name":"Ka-Wai Kam"},{"name":"Tony Leondis"},{"name":"Toa Fraser"},{"name":"Alex SmithAndrew J. Smith"},{"name":"Yasuhiro Kawamura"},{"name":"Yuzo Asahara"},{"name":"Giả Khải"},{"name":"Depoyan Manuk"},{"name":"Rick Bieber"},{"name":"Don Mancini"},{"name":"Andrés Muschietti"},{"name":"Joe Miale"},{"name":"Chayanop Boonprakob"},{"name":"Nikolaj Arcel"},{"name":"Topel Lee"},{"name":"Ritesh Batra"},{"name":"Hyo-jin Kang"},{"name":"Matt Drummond"},{"name":"Taylor Sheridan"},{"name":"Mark Palansky"},{"name":"Sam Claflin"},{"name":"Darren Grant"},{"name":"Rich Ragsdale"},{"name":"Dương Lỗi"},{"name":"Taran Killam"},{"name":"Lý Hồng Kiến"},{"name":"Takeshi Furusawa"},{"name":"Lucia Aniello"},{"name":"Burlee VangAbel Vang"},{"name":"Tatsuma Minamikawa"},{"name":"Brian Fee"},{"name":"Jonathan MilottCary Murnion"},{"name":"Trey Edward Shults"},{"name":"Gregory Plotkin"},{"name":"William Oldroyd"},{"name":"Bong Joon Ho"},{"name":"Park Chul-Soo"},{"name":"Jussi Hiltunen"},{"name":"Quách Tử Kiện"},{"name":"Takashi Otsuka"},{"name":"Edward Neumeier"},{"name":"Lee Sa-Rang"},{"name":"Cho Jung-Rae"},{"name":"Byung-gil Jung"},{"name":"Lee Tim"},{"name":"Gabriela Cowperthwaite"},{"name":"Trương Kỷ Trung"},{"name":"J.d. Dillard"},{"name":"Allan Harmon"},{"name":"Richie Keen"},{"name":"Paul Currie"},{"name":"Leste Chen"},{"name":"Colin Theys"},{"name":"Kwak Ji-Kyun"},{"name":"Lưu Gia Lương"},{"name":"Matt Eskandari"},{"name":"Jon Watts"},{"name":"Jeffrey Lau"},{"name":"Patty Jenkins"},{"name":"Aaron Woodley"},{"name":"Khưu Lễ Đào"},{"name":"Jonathan Baker"},{"name":"Alex Kurtzman"},{"name":"Jin Hao"},{"name":"Atsushi Takahashi"},{"name":"Mark Cullen"},{"name":"Conor Allyn"},{"name":"Sha Xuezhou"},{"name":"Tomohiko Ito"},{"name":"Junya Sato"},{"name":"Lưu Huỳnh"},{"name":"Julia Ducournau"},{"name":"Deven Bhojani"},{"name":"Hiroyuki Seshita"},{"name":"Espen SandbergJoachim Rønning"},{"name":"David Leveaux"},{"name":"Wang Li"},{"name":"Blayne Weaver"},{"name":"Shen Xi"},{"name":"John MacCarthyJohn MacCarthy"},{"name":"Lê Kế Cường"},{"name":"Từ Phi"},{"name":"Phil Volken"},{"name":"Toshiyuki KubookaMichael Sinterniklaas"},{"name":"Toby Genkel"},{"name":"Tống Khiếu"},{"name":"Peter Malota"},{"name":"Toshiyuki Kubooka"},{"name":"Alex Merkin"},{"name":"Claude Barras"},{"name":"Cate Shortland"},{"name":"François Ozon"},{"name":"Jonathan Mostow"},{"name":"Minh Đạo"},{"name":"Đào Hải"},{"name":"Feng Baoning"},{"name":"Ry Russo-Young"},{"name":"Steve Beck"},{"name":"Kim Bong-han"},{"name":"Eon-hie Lee"},{"name":"S.s. Rajamouli"},{"name":"Quách Đại Lôi"},{"name":"Nick Jongerius"},{"name":"Nacho Vigalondo"},{"name":"Jack Fessenden"},{"name":"Lưu Quốc Nam"},{"name":"Ash Brannon"},{"name":"Robert Kirbyson"},{"name":"Pierre Coré"},{"name":"Hồng Thăng Dương"},{"name":"Jesse Gustafson"},{"name":"Adam Leon"},{"name":"Svyatoslav Podgayevskiy"},{"name":"Gi Dae-ho"},{"name":"Sean Foley"},{"name":"Tom Sands"},{"name":"Fernando Coimbra"},{"name":"Minoru Mizoguchi"},{"name":"Ngụy Ngọc Hải"},{"name":"Olivier Assayas"},{"name":"Martin Koolhoven"},{"name":"Jeremy GillespieSteven Kostanski"},{"name":"Diệp Vĩ Dân"},{"name":"Hồ Tuyết Hoa"},{"name":"Aaron Kim"},{"name":"Abhinay Deo"},{"name":"Từ Gia Huy"},{"name":"Eric D. Howell"},{"name":"David SalzbergChristian Tureaud"},{"name":"Ahn Yong-Hoon"},{"name":"Stephen Gaghan"},{"name":"Dean Israelite"},{"name":"Jordan Peele"},{"name":"Steven Shainberg"},{"name":"Shaad Ali"},{"name":"Aaron HannMario Miscione"},{"name":"Cao Hy Hy"},{"name":"Naruhide Mizuta"},{"name":"Lý Uyên"},{"name":"Ohtomo Keishi"},{"name":"Salamat Mukhammed-Ali"},{"name":"George Mendeluk"},{"name":"Eric SummerEric Warin"},{"name":"Hàn Hàn"},{"name":"Sevé Schelenz"},{"name":"Satoshi Kuwabara"},{"name":"Phil Gorn"},{"name":"Đàm Tiếu"},{"name":"John Hamburg"},{"name":"Johnny Martin"},{"name":"Từ Sĩ Hưng"},{"name":"Joo-young LeeZoo-Young Lee"},{"name":"Robert Dyke"},{"name":"Joey Klein"},{"name":"Gaelan Connell"},{"name":"Michael Mann"},{"name":"Park Kwang Hyun"},{"name":"Quách Tại Dung"},{"name":"Karyn Kusama,Roxanne Benjamin,St. Vincent,Jovanka Vuckovic"},{"name":"Chris Nahon"},{"name":"Ajay Devgn"},{"name":"Stewart Sparke"},{"name":"Chris McKay"},{"name":"Damien MacéAlexis Wajsbrot"},{"name":"Carles Torrens"},{"name":"Fedor Bondarchuk,Oleg Malovichko"},{"name":"David Feiss"},{"name":"Lin Yuhsien"},{"name":"Kwok Shing Lo"},{"name":"Julie Estelle"},{"name":"David Hendrawan"},{"name":"Chelsea Islan"},{"name":"Epy Kusnandar"},{"name":"Zack Lee"},{"name":"Sunny Pang"},{"name":"Very Tri Yulisman"},{"name":"Eom Tae Hwa"},{"name":"Emilis Velyvis"},{"name":"Kevin Breslin"},{"name":"Trần Ngọc Huân"},{"name":"David Frankel"},{"name":"Fabio GuaglioneFabio Resinaro"},{"name":"Macon Blair"},{"name":"Tony Elliott"},{"name":"Adam Randall"},{"name":"Farren Blackburn"},{"name":"Barry Jenkins"},{"name":"Jesse Holland"},{"name":"Thomas J. Churchill"},{"name":"Alberto RodríguezNacho La Casa"},{"name":"Abe Noriyuki"},{"name":"Ashley Pearce"},{"name":"Patrick Durham"},{"name":"Garth Davis"},{"name":"Đinh Thịnh"},{"name":"Aleksey Tsitsilin"},{"name":"Song Min-Gyu"},{"name":"Yasushi KawamuraKeiichi Saitô"},{"name":"Châu Tinh TrìTừ Khắc"},{"name":"Park Jong Woo"},{"name":"Kim Tae-Gon"},{"name":"Kim Druzhinin"},{"name":"F. Javier Gutiérrez"},{"name":"Lâm Lĩnh Đông"},{"name":"Hong Ji-young"},{"name":"Ju Ji Hong"},{"name":"Stanley Tong"},{"name":"Jian Yong Guo"},{"name":"Min Gyoo Dong"},{"name":"Nhĩ Đông Thăng"},{"name":"Mike MitchellWalt Dohrn"},{"name":"Alex BrewerBenjamin Brewer"},{"name":"Martin Owen"},{"name":"Kwon Soo-Kyung"},{"name":"Benny Boom"},{"name":"Colm McCarthy"},{"name":"Trần Ngọc Giàu"},{"name":"Sheldon Wilson"},{"name":"G.J. Echternkamp"},{"name":"Michael Dudok de Wit"},{"name":"Hiroaki Miyamoto"},{"name":"D.J. Caruso"},{"name":"Sebastian Gutierrez"},{"name":"Artyom Aksenenko"},{"name":"Greg Mottola"},{"name":"Stewart Hendler"},{"name":"Đới Duệ"},{"name":"Huck Botko"},{"name":"Denis Chernov"},{"name":"Steve Carr"},{"name":"Ngô Phẩm Nho"},{"name":"Sean Ellis"},{"name":"Anna Foerster"},{"name":"Neal Wu"},{"name":"Tom Mcgrath"},{"name":"Jonathan Jakubowicz"},{"name":"Howard J. Ford"},{"name":"Jake Szymanski"},{"name":"Garth Jennings"},{"name":"Lâm Đức Lộc"},{"name":"Devon Downs,Kenny Gage"},{"name":"Thanakorn Pongsuwan"},{"name":"Ron Clements và John Musker"},{"name":"Jonás Cuarón"},{"name":"Greg Tiernan,Conrad Vernon"},{"name":"Jeremy Profe"},{"name":"Lưu Trấn Vỹ"},{"name":"Daniel Ragussis"}]

/***/ }),
/* 117 */
/***/ (function(module, exports) {

module.exports = [{"name":"Chúa Tể Godzilla","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/chua-te-godzilla_11859/xem-phim/"},"nameOrigin":"Godzilla: King of the Monsters","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fchua-te-godzilla-godzilla-king-of-the-monsters-2019.jpg%3Fsize%3D300"},"directors":["Michael Dougherty"],"actors":["Kyle Chandler","Millie Bobby Brown","Sally Hawkins","Vera Farmiga"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Kinh Dị","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":3,"desc":"Đây là tác phẩm thứ ba thuộc vũ trụ điện ảnh quái vật của hãng Legendary và Warner Bros..Theo đó, bộ phim có bối cảnh diễn ra vài năm sau sự kiện của phần trước. Lúc này, Godzilla phải đối mặt với những quái vật hết sức mạnh mẽ như Rồng ba đầu King Ghidorah, Rodan và sâu bướm Mothra.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-5hne6nsy.googlevideo.com/videoplayback?expire=1557783445&ei=NY_ZXOLvJc35-gb41K_oDQ&ip=134.19.186.201&id=o-AAWpzMZQhId9X2L6eNLvGNgIfdgan1ro4T97gJydU77y&itag=22&source=youtube&requiressl=yes&mm=31%2C26&mn=sn-5hne6nsy%2Csn-4g5edn7e&ms=au%2Conr&mv=u&pl=24&mime=video%2Fmp4&ratebypass=yes&dur=186.015&lmt=1550482223386459&mt=1557761507&fvip=5&c=WEB&txp=5535432&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cmime%2Cratebypass%2Cdur%2Clmt&sig=ALgxI2wwRAIgf4M5cptKDNoJGXn-knJS2eghMPtF5rTFJYU5mcCky04CIBo7A7wHXeNBqLEULY9ilrcEtFUqs656gtn4A5jKE622&lsparams=mm%2Cmn%2Cms%2Cmv%2Cpl&lsig=AHylml4wRQIhALtAsjE4pPrSTJE67MM6NYs19i0npupch8MiL5ubjbdRAiA1p4ba5r9-mGmPuvRLh5_99bdDyIO9qapibuEsJyU62A%3D%3D","default":true},{"resolution":720,"embedUrl":"https://r5---sn-5hne6nsy.googlevideo.com/videoplayback?expire=1557783445&ei=NY_ZXOLvJc35-gb41K_oDQ&ip=134.19.186.201&id=o-AAWpzMZQhId9X2L6eNLvGNgIfdgan1ro4T97gJydU77y&itag=43&source=youtube&requiressl=yes&mm=31%2C26&mn=sn-5hne6nsy%2Csn-4g5edn7e&ms=au%2Conr&mv=u&pl=24&mime=video%2Fwebm&gir=yes&clen=14296063&ratebypass=yes&dur=0.000&lmt=1550488289965432&mt=1557761507&fvip=5&c=WEB&txp=5511222&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cmime%2Cgir%2Cclen%2Cratebypass%2Cdur%2Clmt&sig=ALgxI2wwRAIgTbhiVaWskYyTsShmLbxDZTmMPL6EgbZe6EEk_cz6qEwCIHti1e4u3hxD_RD9VaZg2Xnaa2IFN1WfUnG8sYdxO7zj&lsparams=mm%2Cmn%2Cms%2Cmv%2Cpl&lsig=AHylml4wRQIhALtAsjE4pPrSTJE67MM6NYs19i0npupch8MiL5ubjbdRAiA1p4ba5r9-mGmPuvRLh5_99bdDyIO9qapibuEsJyU62A%3D%3D","default":false},{"resolution":1080,"embedUrl":"https://r5---sn-5hne6nsy.googlevideo.com/videoplayback?expire=1557783445&ei=NY_ZXOLvJc35-gb41K_oDQ&ip=134.19.186.201&id=o-AAWpzMZQhId9X2L6eNLvGNgIfdgan1ro4T97gJydU77y&itag=18&source=youtube&requiressl=yes&mm=31%2C26&mn=sn-5hne6nsy%2Csn-4g5edn7e&ms=au%2Conr&mv=u&pl=24&mime=video%2Fmp4&gir=yes&clen=9882473&ratebypass=yes&dur=186.015&lmt=1550480810246476&mt=1557761507&fvip=5&c=WEB&txp=5531432&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cmime%2Cgir%2Cclen%2Cratebypass%2Cdur%2Clmt&sig=ALgxI2wwRAIgXHVbz0P7s9nxTUt3bfsQwXolA2hhYT0SoHXN3wd3mVgCIGSY_ASJ91mqVEPQi0n8gPNS8tCEW0pciutJrhGfurGT&lsparams=mm%2Cmn%2Cms%2Cmv%2Cpl&lsig=AHylml4wRQIhALtAsjE4pPrSTJE67MM6NYs19i0npupch8MiL5ubjbdRAiA1p4ba5r9-mGmPuvRLh5_99bdDyIO9qapibuEsJyU62A%3D%3D","default":false}]},{"name":"Câu Chuyện Lego (Phần 2)","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cau-chuyen-lego-phan-2_11887/xem-phim/"},"nameOrigin":"The Lego Movie 2","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcau-chuyen-lego-phan-2-the-lego-movie-2-2019.jpg%3Fsize%3D300"},"directors":["Mike Mitchell"],"actors":["Alison Brie","Chris Pratt","Elizabeth Banks","Tiffany Haddish"],"genres":["Phim Hành Động","Phim Chiến Tranh","Phim Hài Hước","Phim Hoạt Hình","Phim Phiêu Lưu","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":105,"desc":"Trong The Lego Movie 2, thần dân xứ sở Lego lại phải đối diện với một kẻ thù khủng đến mức khiến cả Người dơi cũng bó tay chịu trói. Phim lấy bối cảnh ngày tận thế Lego sau khi thế giới bị một con quái vật tàn phá. Cuộc sống của người dân trở nên khó khăn và điêu đứng trừ Emmet. Anh chàng vẫn luôn lạc quan, yêu đời và chào hỏi mọi thành phần dù là đáng sợ nhất. Song, đây là lúc mối đe dọa mới từ không gian mang tên Lego Duplo xuất hiện và nhăm nhe hủy diệt mọi thứ. Dù được xem là anh hùng của phần phim trước nhưng chàng nam chính của chúng ta vẫn khá vô dụng và phải phụ thuộc vào Lucy hay Batman. Hậu quả là khi kẻ thù đòi giao nộp thủ lĩnh thì tất cả đều bị bắt đi trừ Emmet. Giờ đây, anh chàng buộc phải tự lực cánh sinh để cứu tất cả mọi người. The Lego Movie 2 vẫn sẽ theo phong cách hài bựa đặc trưng với những tình huống hết sức lầy lội cùng dàn nhân vật đông đảo tới từ vô số thương hiệu.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/1c1bb67689b47be0f1925cb9f4ee41bb/1c1bb67689b47be0f1925cb9f4ee41bb.playlist.m3u8","default":true}]},{"name":"Thiếu Hiệp Hảo Công Phu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/thieu-hiep-hao-cong-phu_11870/xem-phim/"},"nameOrigin":"Swordsman Nice Kung fu","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fthieu-hiep-hao-cong-phu-swordsman-nice-kung-fu-2019.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Đang cập nhật"],"genres":["Phim Hài Hước","Phim Võ Thuật"],"countries":["Trung Quốc"],"duration":62,"desc":"Được chiếu online trên mạng iQiyi vào đúng dịp Tết nguyên đán 2019, Thiếu Hiệp Hảo Công Phu là bộ phim võ thuật trung quốc khá thú vị với sự kết hợp giữa võ thuật, hài hước pha trộn chút giả tưởng, nó được chỉ đạo bởi đạo diễn Lữ Lỗi cùng sự hợp tác của nhiều nhà sản xuất khác nhau. Phim không có dàn sao đình đám, đảm nhiệm vai nam chính không phải là một ngôi sao võ thuật nhưng sự góp mặt của nam diễn viên từng nhiều lần thủ vai Qủy cước Thất – Hùng Hân Hân là bảo chứng phần nào cho những màn đánh võ mãn nhãn. Nội dung của phim Thiếu Hiệp Hảo Công Phu xoay quanh chàng trai Diệp Thiếu Hiệp, một thiếu niên quyết tâm học võ để trả thù cho cha. Câu chuyện này sau đó đã mở rộng thành một câu chuyện truyền cảm hứng chống lại các thế lực xấu xa và bảo vệ lợi ích của các thành viên trong gia đình. Trải qua bao khổ nạn, cuối cùng cậu cũng trở thành một Nhất Đại Tông Sư. Nhân vật chính ngoài thể hiện phẩm chất Nho gia Trung Hiếu Nhân Nghĩa, còn mang theo quan niệm bình đẳng bác ái của phương Tây.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5ednle.googlevideo.com/videoplayback?id=5203c66ff03b788d&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednle&ms=nxu&mv=m&pl=25&sc=yes&ei=jorZXKu_JIf31gKYyp-YDg&susc=ph&app=fife&mime=video/mp4&dur=3764.279&lmt=1557654221094934&mt=1557760550&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767854&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=900E9C986973313F0B274B617CB4C244B04D75D5C979F5334D8F32540EF14CDD.D342F5906ECAFBC92C62CD96E6807DC4716680E5298E168E81A4551528A7632B&key=us0","default":false}]},{"name":"Cửa Hàng Kỳ Lân","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cua-hang-ky-lan_11866/xem-phim/"},"nameOrigin":"Unicorn Store","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcua-hang-ky-lan-unicorn-store-2019.jpg%3Fsize%3D300"},"directors":["Brie Larson"],"actors":["Bradley Whitford","Brie Larson","Joan Cusack","Samuel L. Jackson"],"genres":["Phim Hài Hước","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":92,"desc":"Unicorn Store là bộ phim thuộc thể loại hài, tâm lí xoay quanh cuộc đời \"ẩm ương\" của Kit (Brie Larson) - một người phụ nữ gần 30 tuổi, sống cùng với bố mẹ và có niềm đam mê lớn dành cho 7 sắc cầu vồng và kì lân. Sau khi bị loại khỏi trường nghệ thuật vì góc sáng tạo bị đánh giá là kì quái, Kit trải qua chuỗi ngày thất nghiệp, nằm dài trên ghế sô pha chỉ để xem phim truyền hình. Một ngày nọ, cô quyết định nộp đơn xin làm công việc văn phòng, không phải vì thiếu tiền hay đam mê, mà chỉ vì không muốn trở thành \"nỗi thất vọng\" lớn của cha mẹ.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5e6nzl.googlevideo.com/videoplayback?id=c234f8a55050f777&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzl&ms=nxu&mv=u&pl=25&sc=yes&ei=koPZXJ6WJ5G01wKllZHoCA&susc=ph&app=fife&mime=video/mp4&dur=5513.903&lmt=1555865554271013&mt=1557758120&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557766066&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=3522A8CA622E1D63C698140C1C2B03DAEAC1E55B7385C8EC3AB9E87DDC6B9FA5.B7AB1CEC54FE9AC39A4C7532654019721F5E452D86C2B9DD816D3B817E9164C9&key=us0","default":false},{"resolution":720,"embedUrl":"https://r5---sn-4g5e6nzl.googlevideo.com/videoplayback?id=c234f8a55050f777&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzl&ms=nxu&mv=u&pl=25&sc=yes&ei=koPZXPqMJ4rH1wLxyrLwBQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5513.903&lmt=1555867352425867&mt=1557758120&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557766066&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=58596CAD9859060A22211E25480F0FFC3C03DE3FA4DEEE6AED80793781A54D47.CC60FEF52F8166FF97F15C573F0640537235E3BEE99A7F94908D9903E0B63518&key=us0","default":true}]},{"name":"Cuộc Hôn Nhân Đẫm Máu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cuoc-hon-nhan-dam-mau_11874/xem-phim/"},"nameOrigin":"The Russian Bride","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcuoc-hon-nhan-dam-mau-the-russian-bride-2019.jpg%3Fsize%3D300"},"directors":["Michael S. Ojeda"],"actors":["Corbin Bernsen","Kristina Pimenova","Michael Robert Brandon","Oksana Orlan"],"genres":["Phim Kinh Dị"],"countries":["Mỹ"],"duration":101,"desc":"Một người phụ nữ Nga chuyển tới Mỹ cùng con gái để kết hôn với một tỷ phú ẩn dật, người hóa ra là một kẻ tâm thần. Hắn khiến cuộc sống của hai mẹ con trở thành vòng xoáy địa ngục.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/0be1f2e55c225f95586c5cbc557bc002/0be1f2e55c225f95586c5cbc557bc002.playlist.m3u8","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/the-russian-bride-2019/1"},{"name":"Truyền Thuyết Đảo Cocain","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/truyen-thuyet-dao-cocain_11814/xem-phim/"},"nameOrigin":"The Legend of Cocaine Island","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftruyen-thuyet-dao-cocain-the-legend-of-cocaine-island-2019.jpg%3Fsize%3D300"},"directors":["Theo Love"],"actors":["Andy Culpepper","Bo Butterworth","Bri Bryant","Greg Engleberg"],"genres":["Phim Hài Hước","Phim Tâm Lý"],"countries":["Mỹ"],"duration":83,"desc":"The Legend of Cocaine Island (Truyền Thuyết Về Đảo Cocaine) kể rằng có một người chủ doanh nghiệp nhỏ tình cờ nghe được truyền thuyết về \"kho báu\" cocaine trị giá 2 triệu USD được giấu ở vùng Caribbean. Vì gánh nợ trong cuộc Đại suy thoái, anh ta ấp ủ một kế hoạch để lấy lại các chiến lợi phẩm bị chôn vùi. Nhưng vì không có kinh nghiệm buôn ma túy trước đó, các rắc rối bắt đầu ập đến với anh chàng \"gà mờ\".","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5edn7z.googlevideo.com/videoplayback?id=94d4c1f300be5f54&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7z&ms=nxu&mv=u&pl=25&sc=yes&ei=oZDZXNTRLJiJ1wL0yIXQDA&susc=ph&app=fife&mime=video/mp4&dur=5223.746&lmt=1554594902803033&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557769409&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=889250BAC3CC2960A7352639A86CABC2DBAABCCB4BA310F4663DEADBB28AFB26.E1CF9DF5E4AB6089036D0937EEC913369A645EEF95FD1ECD2E7DA13E9C459DE9&key=us0","default":false},{"resolution":720,"embedUrl":"https://r4---sn-4g5e6nzs.googlevideo.com/videoplayback?id=f62784e28fedc2a2&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzs&ms=nxu&mv=u&pl=25&sc=yes&ei=oZDZXPPFLJqJ1gKvwrPIDw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5223.746&lmt=1554597090952995&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557769409&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=9BBDBD7A3F0C8D042550C89631D600A94EB73B559C3F899492925A73BE7D0EC2.D24790C20BD10339A7FFF33D83BEF5A4C58BC1E455E99088026666CC7C5FC465&key=us0","default":true}]},{"name":"Đại Úy Marvel","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/dai-uy-marvel_11845/xem-phim/"},"nameOrigin":"Captain Marvel","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fdai-uy-marvel-captain-marvel-2019.jpg%3Fsize%3D300"},"directors":["Anna Boden"],"actors":["Ben Mendelsohn","Brie Larson","Jude Law","Samuel L. Jackson"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":123,"desc":"Lấy bối cảnh những năm 90s, Captain Marvel là một cuộc phiêu lưu hoàn toàn mới đến với một thời kỳ chưa từng xuất hiện trong vũ trụ điện ảnh Marvel. Bộ phim kể về con đường trở thành siêu anh hùng mạnh mẽ nhất vũ trụ của Carol Danvers. Bên cạnh đó, trận chiến ảnh hưởng đến toàn vũ trụ giữa tộc Kree và tộc Skrull đã lan đến Trái Đất, liệu Danvers và các đồng minh có thể ngăn chặn binh đoàn Skrull cũng như các thảm họa tương lai?","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/106f7627dcf29af140c7d7cc645ab5a3/106f7627dcf29af140c7d7cc645ab5a3.playlist.m3u8","default":true}]},{"name":"Con Nuôi Bất Đắc Dĩ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/con-nuoi-bat-dac-di_11810/xem-phim/"},"nameOrigin":"Instant Family","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcon-nuoi-bat-dac-di-instant-family-2018.jpg%3Fsize%3D300"},"directors":["Sean Anders"],"actors":["Isabela Moner","Mark Wahlberg","Octavia Spencer","Rose Byrne"],"genres":["Phim Hài Hước"],"countries":["Mỹ"],"duration":119,"desc":"Câu chuyện hài hước về cặp vợ chồng Pete và Ellie khi quyết định trở thành ba mẹ nuôi của 3 đứa trẻ với 3 độ tuổi và tính cách khác nhau: Cô gái tuổi teen Lizzy, cậu bé ngốc nghếch Juan và cô út luôn la hét Lita.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/4dcddb7001ba8600b9b27289e561b842/4dcddb7001ba8600b9b27289e561b842.playlist.m3u8","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/instant-family-2018/1"},{"name":"Bộ Ba Vệ Sĩ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/bo-ba-ve-si_11808/xem-phim/"},"nameOrigin":"Triple Threat","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbo-ba-ve-si-triple-threat-2019.jpg%3Fsize%3D300"},"directors":["Jesse V. Johnson"],"actors":["Iko Uwais","Scott Adkins","Tiger Hu Chen","Tony Jaa"],"genres":["Phim Hành Động"],"countries":["Trung Quốc"],"duration":96,"desc":"Ba nhân vật chính Payu (Tony Jaa), Jaka (Iko Uwais), Long Fei (Tiger Chen) sẽ kết hợp cùng với nhau trong nhiệm vụ bảo vệ cô gái có cha là tỷ phú, chủ của một tập đoàn lớn. Trong khi đó sát thủ Collin (do Scott Adkins) dẫn đầu một băng nhóm tội phạm được cử đi để hạ sát cô ta....","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/a017f1cec973b07d44d37e6081180c27/a017f1cec973b07d44d37e6081180c27.playlist.m3u8","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/triple-threat-2019/1"},{"name":"Cậu Bé và Sứ Mệnh Thiên Tử","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cau-be-va-su-menh-thien-tu_11805/xem-phim/"},"nameOrigin":"The Kid Who Would Be King","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcau-be-va-su-menh-thien-tu-the-kid-who-would-be-king-2019.jpg%3Fsize%3D300"},"directors":["Joe Cornish"],"actors":["Joey Ansah","Louis Ashbourne Serkis","Rebecca Ferguson","Tom Taylor"],"genres":["Phim Hài Hước","Phim Tâm Lý","Phim Viễn Tưởng"],"countries":["Anh"],"duration":120,"desc":"Cậu nam sinh người Anh Alexander Elliot, người đã rút thanh kiếm Excalibur của vua Arthur khỏi lòng đất, khiến cõi trần gian gặp lâm nguy. Cậu bé đã tập hợp những những người bạn thân nhất của mình, để cùng nhau chống lại kẻ phản diện từ thời Trung Cổ Morgana. Ả ta đang triệu hồi đội quân quái vật cổ xưa nhằm âm mưu thống trị thế giới.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/42b888ff630f2b6b9977e949a0d81714/42b888ff630f2b6b9977e949a0d81714.playlist.m3u8","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/the-kid-who-would-be-king-2019/1"},{"name":"Đòi Nợ Thuê","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/doi-no-thue_11773/xem-phim/"},"nameOrigin":"The Debt Collector","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fdoi-no-thue-the-debt-collector-2018.jpg%3Fsize%3D300"},"directors":["Jesse V. Johnson"],"actors":["Louis Mandylor","Scott Adkins","Tony Todd","Vladimir Kulich"],"genres":["Phim Tâm Lý"],"countries":["Mỹ"],"duration":95,"desc":"Một võ sĩ được đào tạo bài bản sẽ đi làm công việc đòi nợ cho tổ chức đen. Công việc có vẻ dễ dàng, cho đến khi một \"khách hàng\" kéo anh ta vào một tình huống khó nhằn hơn bao giờ hết...","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/9b4b8fd7e18e8695f63c32bcc097a15c/9b4b8fd7e18e8695f63c32bcc097a15c.playlist.m3u8","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/the-debt-collector-2018/1"},{"name":"Bạch Xà: Duyên Khởi","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/bach-xa-duyen-khoi_11769/xem-phim/"},"nameOrigin":"White Snake","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbach-xa-duyen-khoi-white-snake-2019.jpg%3Fsize%3D300"},"directors":["đang cập nhập"],"actors":["đang cập nhập"],"genres":["Phim Hoạt Hình","Phim Thần Thoại"],"countries":["Trung Quốc"],"duration":99,"desc":"Nối tiếp thành công của tác phẩm Tiểu Môn Thần tại Trung Quốc vào năm 2016, năm nay hãng Light Chaser lại cho ra mắt một bộ phim hoạt hình 3D về chủ đề huyền huyễn, thần thoại mang tên Bạch Xà: Duyên Khởi (Bạch Xà: Khởi đầu duyên phận).Phim lấy bối cảnh những năm cuối thời Đường, quốc sư vì mối hận với xà tộc nên đã phát động dân chúng bắt rắn. Bạch Xà - Tiểu Bạch trên đường ám sát quốc sư không may mất trí nhớ, được người bắt rắn A Tuyên cứu giúp, A Tuyên chính là tiền kiếp của Hứa Tiên.Dưới sự giúp đỡ của A Tuyên, Tiểu Bạch bắt đầu dấn thân vào con đường mạo hiểm tìm lại kí ức. Hai người dần dần nảy sinh tình cảm với nhau, thế nhưng lúc này thân phận xà yêu của nàng cũng được hé lộ. Người và yêu vốn khác biệt, liệu họ có vượt qua được thử thách này?","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5e6nzs.googlevideo.com/videoplayback?id=e1403ee1874321da&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzs&ms=nxu&mv=u&pl=25&sc=yes&ei=bpfZXKL-AZfP1wKPqJ6YAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5922.086&lmt=1553487084075103&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557771150&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=6BD9028FBC313C838AAC0BAF0690C12837B8B2988427CD35F4E7FF3A97D7A3AE.685DCD4FBFF0B86D0AF179BD1DE1FAF2F939012B94A3A97541B3D3930D7D06E4&key=us0","default":true},{"resolution":720,"embedUrl":"https://r5---sn-4g5e6nzs.googlevideo.com/videoplayback?id=e1403ee1874321da&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzs&ms=nxu&mv=u&pl=25&sc=yes&ei=bpfZXP7wAdKZ8gOw9qWABg&susc=ph&app=fife&mime=video/mp4&dur=5922.086&lmt=1553484500928458&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557771150&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=9AE39FFAC542AF572E5A2CCCD01EAD720516B730F139FF6EC173AEA6A441923D.07331BA7DC13AC59B7DF098F7F831F9480226791F6816CE223EA58913BD6D086&key=us0","default":false}]},{"name":"Bí Kíp Luyện Rồng 3: Vùng Đất Bí Ẩn","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/bi-kip-luyen-rong-3-vung-dat-bi-an_11806/xem-phim/"},"nameOrigin":"How to Train Your Dragon 3: The Hidden World","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbi-kip-luyen-rong-3-vung-dat-bi-an-how-to-train-your-dragon-3-the-hidden-world-2019.jpg%3Fsize%3D300"},"directors":["Dean DeBlois"],"actors":["America Ferrera","Cate Blanchett","F. Murray Abraham","Jay Baruchel"],"genres":["Phim Hành Động","Phim Hài Hước","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":104,"desc":"Sau khi Hiccup tạo ra một thế giới hòa bình cho loài rồng, Răng Sún phát hiện ra một người bạn mới đầy bí hiểm. Lúc này Hiccup đã trở thành người lãnh đạo của cả làng gánh trên vai trọng trách gìn giữ sự an nguy cho mọi người. Vì vậy, cậu không thể mãi bị cuốn theo những cuộc phiêu lưu bất tận với Răng Sún. Và khi nguy hiểm ập đến ngôi làng, cả Hiccup và Răng Sún đều đã đứng lên, anh dũng bảo vệ giống loài của mình.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/dfe7f7ebfde6d4d2dbc8a775ca969d86/dfe7f7ebfde6d4d2dbc8a775ca969d86.playlist.m3u8","default":true}]},{"name":"Zombie Đại Hạ Giá","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/zombie-dai-ha-gia_11766/xem-phim/"},"nameOrigin":"The Odd Family: Zombie On Sale","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fzombie-dai-ha-gia-the-odd-family-zombie-on-sale-2019.jpg%3Fsize%3D300"},"directors":["Lee Min-Jae"],"actors":["Jung Jae Young","Kim Nam Gil","Lee Soo kyung","Uhm Ji Won"],"genres":["Phim Hành Động","Phim Hài Hước","Phim Tâm Lý"],"countries":["Hàn Quốc"],"duration":112,"desc":"Gia đình ông Park vốn dĩ đã kỳ quặc nay còn kỳ quái hơn khi nhận nuôi zombie trong nhà. Trái ngược với nỗi sợ khi phải đối mặt với zombie thì gia đình ông Park đã tận dụng kiếm tiền một cách triệt để từ thành viên mới này. Từ đây nảy sinh những tình huống hài hước khó đỡ cùng chuyện tình đáng yêu giữa Zombie và cô con út của gia đình ông Park.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/eabeb4a52f7194e3f26d6f31295995f8/eabeb4a52f7194e3f26d6f31295995f8.playlist.m3u8","default":true}]},{"name":"Băng Cướp Bất Đắc Dĩ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/bang-cuop-bat-dac-di_11767/xem-phim/"},"nameOrigin":"Triple Frontier","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbang-cuop-bat-dac-di-triple-frontier-2019.jpg%3Fsize%3D300"},"directors":["J.C. Chandor"],"actors":["Adria Arjona","Ben Affleck","Charlie Hunnam","Oscar Isaac"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Phiêu Lưu"],"countries":["Mỹ"],"duration":125,"desc":"Một sĩ quan đặc nhiệm chống ma túy tên Pope (Oscar Isaac) đánh hơi thấy nơi giấu tiền của tên trùm ma túy Colombia. Anh quyết định tập hợp một đội gồm những cựu binh thiện chiến với kế hoạch đột nhập vào hang ổ của tên mafia, cướp tiền và rút êm. Tham gia vào nhóm của \"Giáo Hoàng\" có \"Thiết Thủ\" Ironhead (Charlie Hunnam) từng giết 43 mạng người, em trai Ben (Garrett Hedlund) của Ironhead, phi công \"Cá Mèo\" (Pedro Pascal) cùng tay lính kỳ cựu \"Ruồi Đỏ\" (Ben Affleck) bị bắn 5 lần... không chết. Tất nhiên mọi chuyện không dễ dàng như thế và 5 con người phải đối mặt với hậu quả mà mình gây ra.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/84a0373c1def0047947a39d33e9b666a/84a0373c1def0047947a39d33e9b666a.playlist.m3u8","default":true}]},{"name":"Mãi Bên Cháu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/mai-ben-chau_11780/xem-phim/"},"nameOrigin":"Stand by Me / Deok Goo","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fmai-ben-chau-stand-by-me-deok-goo-2018.jpg%3Fsize%3D300"},"directors":["Bang Soo-In"],"actors":["Jang Gwang","Jung Ji Hoon","Lee Soon Jae","Sung Byoung Sook"],"genres":["Phim Tâm Lý"],"countries":["Hàn Quốc"],"duration":91,"desc":"Một người ông 70 tuổi đã một tay nuôi lớn hai đứa cháu của mình. Ông cố để lại cho các cháu một thứ đặc biệt khi ông biết mình không còn sống được bao lâu nữa.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5e6nzl.googlevideo.com/videoplayback?id=37c9fc6c5917ca2e&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzl&ms=nxu&mv=m&pl=25&sc=yes&ei=VZnZXLf_B4e11gLou7m4CQ&susc=ph&app=fife&mime=video/mp4&dur=5488.616&lmt=1552843763493129&mt=1557764317&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557771637&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=D2B9C94D553616720822BD87F5874C1B0EA41739F1ADAFD45D460EBF028B3B74.974C5C5679EE1D1AA0C1754E1B70367C133D23E3359B75D517C087D1252ADCF4&key=us0","default":false},{"resolution":720,"embedUrl":"https://r1---sn-4g5edne7.googlevideo.com/videoplayback?id=210c75db03e22f8a&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edne7&ms=nxu&mv=m&pl=25&sc=yes&ei=VZnZXPT4B5bg1wK2oo-ACg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5488.616&lmt=1552846288833062&mt=1557764317&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557771637&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=3B22C03498A428850DAF07E743B479193BCA6FA5A7B09A816C3D31AC8106D1C6.680A8953349EF906C42C65BF97998E6DB3980EB28046AC98DD86792C79BEB0FD&key=us0","default":true}]},{"name":"Ma Thổi Đèn: Trùng Cốc Vân Nam","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ma-thoi-den-trung-coc-van-nam_11771/xem-phim/"},"nameOrigin":"Mojin: The Worm Valley","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fma-thoi-den-trung-coc-van-nam-mojin-the-worm-valley-2018.jpg%3Fsize%3D300"},"directors":["Xing Fei"],"actors":["Chih Wei Tang","Hang Cai","Heng Yu","Xuan Gu"],"genres":["Phim Phiêu Lưu"],"countries":["Trung Quốc"],"duration":110,"desc":"Để tự cứu mình khỏi lời nguyền của Động Quỷ Tinh Tuyệt, Hồ Bát Nhất cùng Tuyền béo và Shirley Dương lên đường đến Trùng cốc, Vân Nam để tìm Mộc Trần Châu ẩn trong mộ Hiến Vương, vị vua bí hiểm, đầy phép phù thủy của nước Điền cổ hai ngàn năm trước. Đến vùng núi Già Long gần Trùng cốc, trước mắt ba Mô kim Hiệu úy, một loạt chuyện kỳ quái đã xảy ra: những nô lệ bị thành xác khô bởi tà thuật cả ngàn năm trước, bọn cá ăn thịt người hung hãn, con sâu khổng lồ bất tử trong bộ giáp vảy rồng... Và chuyến đi lần này, họ không chỉ gặp những cạm bẫy âm hiểm hay đám cương thi trong mộ cổ, mà còn có thứ đáng sợ hơn gấp bội phần ...","embeds":[{"resolution":360,"embedUrl":"https://r6---sn-4g5ednle.googlevideo.com/videoplayback?id=112cb1e4c67ea338&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednle&ms=nxu&mv=u&pl=25&sc=yes&ei=BYfZXMGQK8vJ1wL45ongCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6611.882&lmt=1555496124034385&mt=1557758994&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557766949&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=A75BDD6CB0ED17631AF54603CE904F53E757C6B6759E9FCA83CF5FD822E3C2BE.4CB7A93C81F04CF1318D827E340280963B5BC0DC8F5D046E839CAA9252C7C1BC&key=us0","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6nss.googlevideo.com/videoplayback?id=112cb1e4c67ea338&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nss&ms=nxu&mv=u&pl=25&sc=yes&ei=BYfZXMaZK5iJ1wL0yIXQDA&susc=ph&app=fife&mime=video/mp4&dur=6611.882&lmt=1555492206008775&mt=1557758994&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557766949&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=B9ABC9BD06D61A35F93F9794C314F6D1E78901481C327BF0D232D1BDE6845AA2.C000260534F4C9C9207A22A34E69A2F5C09B4032BC6337A4977DAA8DBE20E3AD&key=us0","default":false}]},{"name":"Ảo Ảnh","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ao-anh_11809/xem-phim/"},"nameOrigin":"Mirage (Durante la Tormenta)","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fao-anh-mirage-durante-la-tormenta-2018.jpg%3Fsize%3D300"},"directors":["Oriol Paulo"],"actors":["Adriana Ugarte","Albert Pérez","Francesc Orella","Javier Gutiérrez"],"genres":["Phim Tâm Lý"],"countries":["Khác"],"duration":128,"desc":"Mirage (Ảo Ảnh) bắt đầu với những hình ảnh của năm 1989, xoay quanh cậu bé 12 tuổi Nico Lasarte thích đàn hát và thường thu âm lại chúng bằng đầu băng VHS. Hai mươi lăm năm sau, ngôi nhà của Nico đã trở thành tổ ấm mới của đôi vợ chồng Vera Roy (Adriana Urgate) và David Ortiz (Alvaro Morte), cùng cô con gái nhỏ Gloria.Hai cuộc đời hoàn toàn xa lạ, ở hai thời điểm cách biệt lại tình cờ \"va\" vào nhau thông qua một cơn bão âm u, với mây đen giăng đầy trời. Cơn bão lặp lại sau 25 năm. Nhưng số phận của những con người nhỏ bé, vì nó mà đã thay đổi tới mức không thể ngờ.Hai năm sau thời điểm The Invisible Guest (2017) ra mắt và làm công chúng thế giới sững sờ, thích thú trước hành trình vạch trần tội ác của tay doanh nhân trẻ điển trai Adrian Doria, đạo diễn Oriol Paulo lại tiếp tục mang đến một câu chuyện trinh thám mới Mirage (Ảo Ảnh) là sự kết hợp của nhiều yếu tố, từ khoa học - viễn tưởng, rùng rợn, bí ẩn xen lẫn với những bi kịch và một chút lãng mạn kì ảo.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/599e7ae843c2aa22828c829470012662/599e7ae843c2aa22828c829470012662.playlist.m3u8","default":true}]},{"name":"Mirai: Em Gái Đến Từ Tương Lai","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/mirai-em-gai-den-tu-tuong-lai_11784/xem-phim/"},"nameOrigin":"Mirai Of the Future / Mirai no Mirai","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fmirai-em-gai-den-tu-tuong-lai-mirai-of-the-future-mirai-no-mirai-2018.jpg%3Fsize%3D300"},"directors":["Mamoru Hosoda"],"actors":["Crispin Freeman","Daniel Dae Kim","John Cho","Rebecca Hall"],"genres":["Phim Hoạt Hình","Phim Phiêu Lưu","Phim Viễn Tưởng"],"countries":["Nhật Bản"],"duration":98,"desc":"Từ một cậu bé bướng bỉnh được cưng chiều nhất gia đình, Kun bỗng thấy vị trí của mình bị lung lay khi em gái cậu – Mirai, ra đời. Đố kỵ xen lẫn tủi thân, cậu bé 4 tuổi cảm thấy tình thương của bố mẹ dành cho mình bị giảm sút và cậu hoàn toàn bị choáng ngợp với việc phải trở thành một người anh. Mọi thứ dường rắc rối hơn khi Kun tình cờ phát hiện ra một cánh cổng kỳ lạ nơi đưa cậu đến gặp mẹ mình lúc bà còn là một cô bé và em gái mình – Mirai lại là một học sinh tuổi teen. Trải qua rất nhiều cuộc phiêu lưu, liệu Kun có dần thay đổi bản thân và học được cách trở thành một người anh trai đúng nghĩa?","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/5bf140b85e2ab9d91d995f525ab2dc37/5bf140b85e2ab9d91d995f525ab2dc37.playlist.m3u8","default":true}]},{"name":"Kẻ Cướp Vùng Hindostan","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ke-cuop-vung-hindostan_11772/xem-phim/"},"nameOrigin":"Thugs of Hindostan","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fke-cuop-vung-hindostan-thugs-of-hindostan-2018.jpg%3Fsize%3D300"},"directors":["Vijay Krishna Acharya"],"actors":["Aamir Khan","Amitabh Bachchan","Fatima Sana Shaikh","Katrina Kaif"],"genres":["Phim Hành Động","Phim Phiêu Lưu"],"countries":["Ấn Độ"],"duration":164,"desc":"Phim Thugs of Hindostan (Kẻ Cướp Vùng Hindostan) dựa trên tiểu thuyết Confessions of a Thug của nhà văn Philip Meadows Taylor, kể về tên cướp Ameer Ali, băng nhóm của Ameer đã đặt ra một thách thức nghiêm trọng cho Đế Quốc Anh ở Ấn Độ ( vùng Ấn Độ là thuộc địa của Anh- gọi là Hindustan hoặc Hindostan ) vào đầu thế kỉ 19...","embeds":[{"resolution":360,"embedUrl":"https://r6---sn-4g5ednll.googlevideo.com/videoplayback?id=c23060cee52baaa2&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednll&ms=nxu&mv=m&pl=25&sc=yes&ei=V4bZXP7UOaSK8gOIx6ngAg&susc=ph&app=fife&mime=video/mp4&dur=49.876&lmt=1552460352282063&mt=1557759426&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557766775&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=7D6A649C2F9260891CB9ED3BF996561E490DCC4EC9C62344DFE802153F371517.B81E36299192C585354D91C644D2AF368D32546189BFB627619E338F6723411E&key=us0","default":false},{"resolution":720,"embedUrl":"https://r6---sn-4g5ednll.googlevideo.com/videoplayback?id=c23060cee52baaa2&itag=22&source=picasa_otf&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednll&ms=nxu&mv=m&pl=25&sc=yes&ei=V4bZXMvIOcvJ1wL45ongCA&susc=ph&app=fife&mime=video/mp4&otf=1&otfp=1&dur=0.000&lmt=1552461664041923&mt=1557759426&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557766775&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,otf,otfp,dur,lmt&signature=1583CC9FF5EA5C6E61A2E7A7636E4E04A071822C6FF1C12820892C3160206292.41C890C5BBB5C3655E14DD33D191FBEB8C739740CA58C5D3B9AF09BC482034B0&key=us0","default":true}]},{"name":"Hãy Để Em Yêu Anh","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/hay-de-em-yeu-anh_11781/xem-phim/"},"nameOrigin":"Live Again, Love Again","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fhay-de-em-yeu-anh-live-again-love-again-2018.jpg%3Fsize%3D300"},"directors":["Han Sang-Hee"],"actors":["Chi Pu","Jung Chae Yeon","Lee Su Ryeon","San E"],"genres":["Phim Chiến Tranh","Phim Hình Sự","Phim Tâm Lý"],"countries":["Hàn Quốc"],"duration":97,"desc":"LALA: HÃY ĐỂ EM YÊU ANH kể về những người trẻ theo đuổi đam mê, cùng nhau chia sẻ tình bạn, tình yêu, những tổn thương trong cuộc sống. Nhân vật Hà Mi (Chi Pu) là một nhạc sĩ trẻ đam mê sáng tác. Còn G-Feel (San E) là nhạc sĩ thiên tài của Hàn Quốc nhưng đang phải đối mặt với áp lực từ sự nổi tiếng. Giữa hai con người xa lạ, sống ở hai đất nước có một sợi dây liên kết là cô gái Yoon Hee (Chae Yeon). Câu chuyện về mối quan hệ kỳ lạ của 3 người được hé mở khi G-Feel quyết định sang Việt Nam sau một biến cố lớn.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5e6nls.googlevideo.com/videoplayback?id=e2b24448ccf2ffba&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nls&ms=nxu&mv=m&pl=25&sc=yes&ei=EZzZXKGMMpfP1wKPqJ6YAQ&susc=ph&app=fife&mime=video/mp4&dur=3847.801&lmt=1552843325360723&mt=1557764994&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557772337&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=9AC1A828BD087BBBABAA403D32536F730809E7BCCE864B86943CD5F5006DF227.867C35233012E590FC6C474F76EEEE7A6FEEC27E6A9255B5DD4D4248455C80EE&key=us0","default":false},{"resolution":720,"embedUrl":"https://r5---sn-4g5e6nls.googlevideo.com/videoplayback?id=e2b24448ccf2ffba&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nls&ms=nxu&mv=m&pl=25&sc=yes&ei=EZzZXKCUMs-R8gPliLj4DQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=3847.801&lmt=1552845045932651&mt=1557764994&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557772337&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=918F189FB152770256F290710E90F4F1943A78301CE1E2D28E86DCEB1A17FE8C.9AE04293972134DEDABF6D3551D51FFAC5A5DE6584FAA9ABEB5318773017EE20&key=us0","default":true}]},{"name":"Điệp Vụ XXXL","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/diep-vu-xxxl_11717/xem-phim/"},"nameOrigin":"Fat Buddies","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fdiep-vu-xxxl-fat-buddies-2018.jpg%3Fsize%3D300"},"directors":["Bao Bối Nhĩ"],"actors":["Bao Bối Nhĩ","Clara Lee","Tiểu Tống Giai","Yasuaki Kurata"],"genres":["Phim Hành Động","Phim Hài Hước"],"countries":["Trung Quốc"],"duration":109,"desc":"phim xoay quanh cặp đôi cảnh sát cồng kềnh, bồng bềnh và hành trình phá án vạch trần một công ty sản xuất thuốc phiện. Trong đó, một người là Hách Anh Tuấn, 175 kg và đang làm nhân viên bảo vệ, anh luôn mơ ước trở thành một thám tử thực thụ và người còn lại là đại úy J, một cựu nhân viên đặc vụ cao cấp.J vốn từng là một điệp vụ hoàn hảo nhưng sau vụ tai nạn khiến não bị tổn thương nặng, anh đánh mất dần đi chính mình, cơ thể béo lên và chậm chạp đi rất nhiều nhưng trong tâm trí anh vẫn chưa bao giờ quên mình là một đặc vụ. Sau nhiều lỗ lực, J đã được nhận một nhiệm vụ mật, đó là đi đến Nhật Bản lấy tài liệu mật. Nhưng không may mắn anh gặp phải rắc rối sau khi lấy được tài liệu, nhờ sự giúp đỡ của anh chàng bảo vệ Anh Tuấn, J mới thoát nạn và 2 người tiếp tục hành trình hoàn thành nhiệm vụ.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/bdc5e0042dc7c8c5a80ed25073ca4567/bdc5e0042dc7c8c5a80ed25073ca4567.playlist.m3u8","default":true}]},{"name":"Ráp phờ Đập Phá 2: Phá đảo thế giới ảo","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/rap-pho-dap-pha-2-pha-dao-the-gioi-ao_11730/xem-phim/"},"nameOrigin":"Wreck It Ralph 2: Ralph Breaks the Internet","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Frap-pho-dap-pha-2-pha-dao-the-gioi-ao-wreck-it-ralph-2-ralph-breaks-the-internet-2018.jpg%3Fsize%3D300"},"directors":["Phil Johnston"],"actors":["Gal Gadot","John C. Reilly","Sarah Silverman","Taraji P. Henson"],"genres":["Phim Hoạt Hình"],"countries":["Mỹ"],"duration":112,"desc":"Sáu năm sau phần 1, một sự kiện thay đổi hoàn toàn cuộc sống của đôi bạn thân Ralph và Vanellope. Máy tính đã kết nối wifi, giờ đây họ bắt đầu cuộc phiêu lưu mới trên mạng Internet.Vì thiết bị trò chơi bị hỏng, anh chàng đập phá Ralph và cô bé Vanellope phải vào thế giới internet để mua đồ mới. Tất nhiên, muốn được như ý thì họ phải làm nhiều việc để kiếm đủ tiền. Cũng chính vì thế mà hai anh em được gặp gỡ và biết được nhiều điều mới lạ cùng một số người bạn vô cùng đặc biệt.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednse.googlevideo.com/videoplayback?id=0a11f102cb12811c&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednse&ms=nxu&mv=u&pl=25&sc=yes&ei=QInZXLDcCJrj1wLHyrjYAQ&susc=ph&app=fife&mime=video/mp4&dur=6805.699&lmt=1556235517703104&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767520&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=90CB5EA4DED2B1E9F17A672FD6D34B7ADF198D25FFE0FF30FCFA89B679552793.387AA4626C45BFC7B50F9FB7FB7D37C1BDA824A73466F65FB0923586C8BAB49E&key=us0","default":false}]},{"name":"Hoa Lý Dạ Hương Tháng 10","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/hoa-ly-da-huong-thang-10_11731/xem-phim/"},"nameOrigin":"October","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fhoa-ly-da-huong-thang-10-october-2018.jpg%3Fsize%3D300"},"directors":["Shoojit Sircar"],"actors":["Alex","Banita Sandhu","Nikita Anand","Varun Dhawan"],"genres":["Phim Tâm Lý"],"countries":["Ấn Độ"],"duration":115,"desc":"Một nhóm thực tập sinh đang trải qua những ngày bình thường ở viện. Đột nhiên có một ca, môt vụ tai nạn đã làm thay đổi cuộc sống của họ. một câu chuyện ám ảnh nhưng cũng lấy đi nhiều nước mắt....","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5e6nze.googlevideo.com/videoplayback?id=83eee13d9a883a56&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nze&ms=nxu&mv=u&pl=25&sc=yes&ei=QInZXI6eEsSD8gPjka6oAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6934.964&lmt=1548838607678138&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767520&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=EB4DB6851F2A22C5E5FF92DCEE3E7A7126F7285E17EE5EA7751705A4A07E1EFA.363D63F4B47C3492B7A1474E1797372777CF670963064147C7A1FEF179CD328E&key=us0","default":false},{"resolution":720,"embedUrl":"https://r2---sn-4g5edned.googlevideo.com/videoplayback?id=366553d9c08efd1d&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edned&ms=nxu&mv=u&pl=25&sc=yes&ei=QInZXKyvEtCJ1wLo47_YAw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6934.964&lmt=1548837001603225&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767520&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=DA36E07C79DBBF1D15464538308F05E1F5693A2D91163ED980746D1AC3983268.1BAAD416C8E2A54D71D14B2334C7C452AB9CAF0445BC52C6EC17C82D43B3B073&key=us0","default":true},{"resolution":1080,"embedUrl":"https://r6---sn-4g5ednle.googlevideo.com/videoplayback?id=83eee13d9a883a56&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednle&ms=nxu&mv=u&pl=25&sc=yes&ei=QInZXPvLEpaw1wKDxYKgDw&susc=ph&app=fife&mime=video/mp4&dur=6934.964&lmt=1548833179701839&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767520&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=22693336EFF4339823B304824A86C95A8AA500F8204F6F599CF2DFF0F59901A7.B7E46509B4439E746B4D73DAEC99DC91EB5B9BD2E191F4B62C60796A576AB767&key=us0","default":false}]},{"name":"Robot Đại Chiến: Bumblebee","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/robot-dai-chien-bumblebee_11543/xem-phim/"},"nameOrigin":"Bumblebee","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbumblebee-bumblebee-2018.jpg%3Fsize%3D300"},"directors":["Travis Knight"],"actors":["Hailee Steinfeld","John Cena","Kenneth Choi"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":1,"desc":"Trên đường đi vào năm 1987, Bumblebee được tìm thấy trong một bãi phế liệu ở một thị trấn nhỏ thuộc California. Charlie, một cô gái 18 tuổi và cố gắng tìm kiếm vị trí của mình trên thế giới này đã phát hiện ra Bumblebee tổn thương và gãy nát...","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/670001013578f52dc2e51d3d6c93723d/670001013578f52dc2e51d3d6c93723d.playlist.m3u8","default":true}]},{"name":"Chết Để Hồi Sinh","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/chet-de-hoi-sinh_11529/xem-phim/"},"nameOrigin":"Dying to Survive","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fchet-de-hoi-sinh-dying-to-survive-2018.jpg%3Fsize%3D300"},"directors":["Muye Wen"],"actors":["Từ Tranh","Chuan jun Wang","Yiwei Zhou","Xinming Yang","Beibi Gong"],"genres":["Phim Hài Hước"],"countries":["Trung Quốc"],"duration":120,"desc":"Phim Chết Để Hồi Sinh: Dying to Survive quy tụ dàn diễn viên Từ Tranh, Chu Nhất Vi, Vương Truyền Quân, Đàm Trác, kể chuyện một chủ cửa hàng mắc nợ lớn, liều lĩnh tổ chức đường dây nhập thuốc Ấn Độ giá rẻ vào Trung Quốc. Anh đổi đời, được các bệnh nhân tôn sùng như thần thánh nhưng gặp rắc rối với luật pháp. Kịch bản dựa trên câu chuyện có thật về một thương gia mắc bệnh ung thư được xem như người hùng khi đưa thuốc từ Ấn Độ về Trung Quốc.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5edns7.googlevideo.com/videoplayback?id=7055dcc7d4812423&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns7&ms=nxu&mv=u&pl=25&sc=yes&ei=GpzZXP66KYeA1gK60JEo&susc=ph&app=fife&mime=video/mp4&dur=6972.998&lmt=1552485963501030&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772346&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=642A8D4DBD25EA284E911720ECE5EA0CE4AB5C5012EC1C8E154C7EAB654B55B5.2AB63A510F0FD53B7CAC455838FAED95CFED9175F80FBE5B68CE1ACF7DD78D04&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5e6nzs.googlevideo.com/videoplayback?id=7055dcc7d4812423&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzs&ms=nxu&mv=u&pl=25&sc=yes&ei=GpzZXISkNZaw1wKDxYKgDw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6972.998&lmt=1552489813589630&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772346&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=E31472AEC8EF76F1FB898F854E5B494FFC7226AFF86C0E8ACE36E04A58F0D05C.5D62C6384C3FA99D19B6B3496F23A76268A3A8F41799FC238CFA3C22C941E35C&key=us0#f720p","default":true}]},{"name":"Phi Vụ Tiền Giả","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/phi-vu-tien-gia_11524/xem-phim/"},"nameOrigin":"Project Gutenberg","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fphi-vu-tien-gia-project-gutenberg-2018.jpg%3Fsize%3D300"},"directors":["Felix Chong"],"actors":["Quách Phú Thành","Châu Nhuận Phát"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":130,"desc":"Phim Phi Vụ Tiền Giả Cảnh sát Hồng Kông đã phá vỡ một phi vụ tiền giả động trời và bắt được Lee Man, một thành viên chủ chốt của đường dây tiền giả khi hắn đang chạy trốn sang Thái Lan. Các thanh tra cảnh sát đang nỗ lực tìm ra chân tưóng của Painter, kẻ chủ mưu đứng đầu băng đảng làm tiền giả từ lời khai của Lee Man. Bất chấp sự truy đuổi mạnh mẽ của cảnh sát, băng đảng của Painter lừa mua được giấy in tiền và cướp được một xe tải chở mực bảo mật để sản xuất hàng loạt các tờ tiền đô giả có thể qua mặt được cả những chuyên gia tiền tệ. Sở cảnh sát nhận ra họ phải đối mặt với một kẻ thù mạnh hơn họ tưởng...","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5ednsl.googlevideo.com/videoplayback?id=607e010cd5cefb87&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsl&ms=nxu&mv=u&pl=25&sc=yes&ei=GpzZXObeIdKZ8gOw9qWABg&susc=ph&app=fife&mime=video/mp4&dur=7777.036&lmt=1552824781218217&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772346&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=B65E4A0158CC88C04CF0A82C52B5F64A729D5F5B151861E8D036498854126D27.984628A72CF72043522B0E948697DA57861B685C1B1E8167BA15F55D2C4605C9&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5e6nzz.googlevideo.com/videoplayback?id=607e010cd5cefb87&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzz&ms=nxu&mv=u&pl=25&sc=yes&ei=GpzZXP_EJZqJ1gKvwrPIDw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7777.036&lmt=1552829147280423&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772346&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=E8A8C7E1881CC9704C2530A3AE35C6F5836E4EB02D31523E7E1ED42557DA97BC.25FE957B6F42F41420338A7A06EA5B05D043A44FD4B51119010662A7ABD68DAF&key=us0#f720p","default":true}]},{"name":"Sinh Tồn Nơi Hoang Đảo","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/sinh-ton-noi-hoang-dao_11542/xem-phim/"},"nameOrigin":"The Island","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fsinh-ton-noi-hoang-dao-the-island-2018.jpg%3Fsize%3D300"},"directors":["Hoàng Bột"],"actors":["Hoàng Bột","Thư Kỳ","Vương Bảo Cường","Trương Nghệ Hưng","Hewei Yu","Xun Wang","Qinqin Li","Hu Guan","Jing Liang","You Lin Lee","Teddy Chan","Xiaohang Fang","Wenting Hao","Yanqing Liu","Hao Ning"],"genres":["Phim Hài Hước","Phim Phiêu Lưu","Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":134,"desc":"The Island là phim hài do Hoàng Bột đạo diễn với sự tham gia của Hoàng Bột, Thư Kỳ, Vương Bảo Cường, Trương Nghệ Hưng (EXO)... lấy chủ đề tận thế, thuật lại câu chuyện về một nhóm người bị lạc ra đảo hoang sau khi sao chổi va chạm với địa cầu. Tác phẩm là lời đáp cho câu hỏi: Con người ta sẽ ứng xử thế nào ở một thế giới nơi quy tắc, pháp luật cùng những thứ vô cùng quen thuộc với con người như điện hay tiền bạc đều trở nên vô nghĩa? Khi ấy tình yêu có còn là tình yêu, quyền lực có còn là quyền lực?The Island là câu chuyện của một người đàn ông luôn mơ ước một lần chiến thắng xổ số. Nhưng khi chưa kịp giành được ước mơ này, ông và những người bạn, đồng nghiệp của mình lại bị mắc kẹt ở một hòn đảo hoang. Trong hoàn cảnh đối mặt với sự sống cái chết nơi đây, ông được chỉ ra ước mơ viển vông của mình và ý nghĩa của cuộc sống.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5e6nsk.googlevideo.com/videoplayback?id=9684506a7560ddd8&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsk&ms=nxu&mv=u&pl=25&sc=yes&ei=DZ_ZXK3rCprj1wLHyrjYAQ&susc=ph&app=fife&mime=video/mp4&dur=8003.918&lmt=1552253490939550&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773101&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=8F233205019C6E5610398BEF0BA0C12007CF0FF8862B195D3D13EFDF0025C9E2.6640C03FB7CC4DF6E8F34A4A4B60E9CE4FC478D03290EC090DBDB2F644E34777&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5edn7l.googlevideo.com/videoplayback?id=9684506a7560ddd8&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7l&ms=nxu&mv=u&pl=25&sc=yes&ei=DZ_ZXN7hFMnF1gL-mYdw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=8003.918&lmt=1552257587811840&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773101&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=486D719A046720E2252A34AB8EB8FA39C8919E1D1EAE6D7752A9A76EAECC24C9.0229A7D5BFE684B2756F22F794C77ECC19692815D6FB078FAF9FE0A091189279&key=us0#f720p","default":true}]},{"name":"Người Băng (Phần 2): Du Hành Thời Gian","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/nguoi-bang-phan-2-du-hanh-thoi-gian_11541/xem-phim/"},"nameOrigin":"IceMan 2","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fnguoi-bang-phan-2-ice-man-2-2018.jpg%3Fsize%3D300"},"directors":["Wai Man Yip"],"actors":["Chung Tử Đơn","Vương Bảo Cường","Huỳnh Thánh Y","Nhậm Đạt Hoa","Yasuaki Kurata"],"genres":["Phim Hành Động","Phim Cổ Trang","Phim Võ Thuật","Phim Viễn Tưởng"],"countries":["Trung Quốc"],"duration":120,"desc":"Người Băng (Phần 2) : Du Hành Thời Gian /  Ice Man 2 tiếp nối câu chuyện của người bằng 1 về chuyến phiêu lưu của 1 Cẩm y vệ đời nhà Minh do Chân Tử Đan đóng vai chính vào thế giới hiện đại. Câu chuyện bắt đầu khi anh vô tình bị đóng băng trong một trận đánh, cơ thể của được lưu giữ gần 4 thế kỷ. Sau khi bị phát hiện, cơ thể của người băng đã được gửi tới Hong Kong để tiến hành nghiên cứu. Tại đây, họ được giải thoát khỏi lớp băng, tái sinh và bắt đầu cuộc sống ở một thế giới hoàn toàn lạ lẫm.Xem Người Băng (Phần 1)","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5ednsk.googlevideo.com/videoplayback?id=3ea72bb7348290a2&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsk&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=NI3ZXOn6I5iJ1wL0yIXQDA&susc=ph&app=fife&mime=video/mp4&dur=5226.277&lmt=1551347220590130&mt=1557760963&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557768532&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=DA17086FA30CC50563615EF483B514D37E2C4DE72A852545449D3C48DF2AE8BB.2F6C915B487F2B15BDA25183087C2DC2050C680251B03F46ADD990131B7911D5&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5e6nzl.googlevideo.com/videoplayback?id=3ea72bb7348290a2&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzl&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=NI3ZXJOiJsnF1gL-mYdw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5226.277&lmt=1551350855331547&mt=1557760963&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557768532&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=A48AC4BB89353DAF22375AC00F274183774F769234139F4F5A3A56A4AABB8B1A.5D913784505B3098AC422E00721ADA3784F4A19762F6027283A391727B2BAE34&key=us0#f720p","default":true}]},{"name":"Cận Vệ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/can-ve_11555/xem-phim/"},"nameOrigin":"Close","year":"2019","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcan-ve-close-2019.jpg%3Fsize%3D300"},"directors":["Vicky Jewson"],"actors":["Noomi Rapace","Sophie Nélisse","Indira Varma","Charley Palmer Rothwell","Eoin Macken","Akin Gazi","George Georgiou","Olivia Jewson","Abdellatif Chaouqi","Huw Parmenter","Cherise Silvestri","Sargon Yelda","Robin Kermode","Jonathan Jude","Anna Marie Sullivan"],"genres":["Phim Hành Động"],"countries":["Mỹ"],"duration":94,"desc":"Nữ vệ sĩ và chuyên gia chống khủng bố Sam nhận một công việc bảo vệ Zoe - một nữ thừa kế trẻ giàu có. Cả hai bên đều không quan tâm đến việc sắp xếp cho đến khi một vụ bắt cóc bạo lực buộc họ phải trốn chạy.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5e6nsd.googlevideo.com/videoplayback?id=c10a0562b949601e&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsd&ms=nxu&mv=u&pl=25&sc=yes&ei=TYnZXKSoMoHA8gOosrGwCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5678.370&lmt=1552334590027870&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767533&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=5332978F627C9B04025A1A4FA5895A78E2FC024BD86F792BB78928E16D8FD849.D4F347E96B73A247BCCF3CF7D971BAFF58F5057E38D9B946BEA1F6D91F73B710&key=us0","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5ednsz.googlevideo.com/videoplayback?id=c10a0562b949601e&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsz&ms=nxu&mv=u&pl=25&sc=yes&ei=TYnZXLSjMoqk8gPW1pCgCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5678.370&lmt=1552334695238459&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767533&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=04A2277E1DAFCBF778AB200825BAC5A8C92B83117011AFF7FF16ADFF519C03EC.6E76B8AF3A62AA987011AEE47FA14512E007F5F991F6FDD67D2AD6385C890CB1&key=us0","default":false},{"resolution":1080,"embedUrl":"https://r4---sn-4g5e6nsd.googlevideo.com/videoplayback?id=c10a0562b949601e&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsd&ms=nxu&mv=u&pl=25&sc=yes&ei=TYnZXNClMq2S8gOI07awBA&susc=ph&app=fife&mime=video/mp4&dur=5678.370&lmt=1552331043880240&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767533&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=B7A07F455A90A7BF1B938D2555CC7E9D5420741D8F2DBC6D27C97576500C45D0.4CB0ABE30114644DCFB56D638128A530111E5D1452B219A60CD9755E4B4C32DE&key=us0","default":false}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/close-2019/1"},{"name":"Ngày Em Đẹp Nhất","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ngay-em-dep-nhat_11538/xem-phim/"},"nameOrigin":"On Your Wedding Day","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fngay-em-dep-nhat-on-your-wedding-day-2018.jpg%3Fsize%3D300"},"directors":["Lee Seok-Geun"],"actors":["Park Bo Young","Kim Young Kwang","Kang Ki Young","Ko Kyu Pil"],"genres":["Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Hàn Quốc"],"duration":100,"desc":"Seung Hee (Park Bo Young) và Woo Yeon (Kim Young Kwang) quen nhau từ khi còn là học sinh trung học. Woo Yeon thích Seung Hee nhưng không biết cô bạn của mình có thích mình hay không. Sau khi tốt nghiệp đại học, cả hai bắt đầu đi làm và rồi, Woo Yeon nhận được thiệp mời đám cưới từ mối tình đầu của mình.Những kỷ niệm ngọt ngào về mối tình đầu xen lẫn với những tiếc nuối về tình yêu không đúng thời điểm. Liệu Woo-yeon sẽ có những cảm xúc và hành động như thế nào khi cầm trên tay tấm thiệp cưới của người con gái mà mình thương yêu nhất?","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednle.googlevideo.com/videoplayback?id=67ddb3e73ffb9c4d&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednle&ms=nxu&mv=u&pl=25&sc=yes&ei=GJ_ZXLPiCtKZ8gOw9qWABg&susc=ph&app=fife&mime=video/mp4&dur=6632.617&lmt=1552606578516438&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773112&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=9B2C57DC13F71A09E7ADB0EB0DEE7EC741141E7B5666A39AD0BF8D6939AF5144.0585C71CF2C2ED7E3E6640B83C6FA39FDFB011A9F22A7281035D84706C9B0D18&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5e6nle.googlevideo.com/videoplayback?id=67ddb3e73ffb9c4d&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nle&ms=nxu&mv=u&pl=25&sc=yes&ei=GJ_ZXJa7EJrj1wLHyrjYAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6632.617&lmt=1552609419724717&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773112&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=DDE46FF611A44A784DA036DCF769C5BCEC5CDFE58B362DAFC47EF839D5A5EE86.06726D8F38774C7D2C12BD0F32B73E4703E847573FE1CD05A76DBFAAC7B460DB&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r4---sn-4g5ednle.googlevideo.com/videoplayback?id=67ddb3e73ffb9c4d&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednle&ms=nxu&mv=u&pl=25&sc=yes&ei=GJ_ZXI6EE8eA1wL10ruYCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6632.617&lmt=1552609672763979&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773112&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=5D08D6C6A0E3D7F263F7D4FD4F218D83E1A1F716084ED407F72F47E4035E57B1.797B21CAD144ACEE7AC85DC104F997A9CABBDFFF40F29FC05400D08A0466A35D&key=us0#f1080p","default":true}]},{"name":"Mật Vụ Giải Cứu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/mat-vu-giai-cuu_11495/xem-phim/"},"nameOrigin":"Hunter Killer","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fmat-vu-giai-cuu-hunter-killer-2018.jpg%3Fsize%3D300"},"directors":["Donovan Marsh"],"actors":["Common","Gary Oldman","Gerard Butler"],"genres":["Phim Hành Động","Phim Chiến Tranh","Phim Phiêu Lưu"],"countries":["Mỹ"],"duration":122,"desc":"Phim Mật Vụ Giải Cứu: kể về âm mưu bắt cóc Tổng thống Nga bởi một vị tướng phản trắc. Để giải cứu nhà lãnh đạo của Nga cũng như ngăn ngừa xung đột giữa hai nước, thuyền trưởng tàu ngầm Mỹ Joe Glass đã phải hợp lực cùng đội Đặc nhiệm Hải quân Mỹ để thực hiện công cuộc cứu nguy căng thẳng đến nghẹt thở","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/f6412a4ad39e2530b753dec7cc64f777/f6412a4ad39e2530b753dec7cc64f777.playlist.m3u8","default":true}]},{"name":"Gặp Được Bạn Thật Tốt","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/gap-duoc-ban-that-tot_11454/xem-phim/"},"nameOrigin":"Nice To Meet You","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fgap-duoc-ban-that-tot-nice-to-meet-you-2018.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Đang cập nhật"],"genres":["Phim Tâm Lý"],"countries":["Trung Quốc"],"duration":100,"desc":"Phim Gặp Được Bạn Thật Tốt Là Một bộ phim điện ảnh dễ thương vừa được công chiếu ngày 29/3, với sự góp mặt của Tào Tuấn và Lam Doanh Oánh.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednld.googlevideo.com/videoplayback?id=f66c1083a6147f0e&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednld&ms=nxu&mv=u&pl=25&sc=yes&ei=HZ_ZXNMZia7XAtuaqpgM&susc=ph&app=fife&mime=video/mp4&dur=5989.053&lmt=1551043440496278&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773117&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=8000ECC46C71EA092E287E8E07B23BF8191FA17AB866262DC5CB8E8D45014006.11BA9B2F56E8B0E549CB228BC01F604A720403DBA6BEC3F88AA38F6C6275367F&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5ednld.googlevideo.com/videoplayback?id=f66c1083a6147f0e&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednld&ms=nxu&mv=u&pl=25&sc=yes&ei=HZ_ZXMHKAsvJ1wL45ongCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5989.053&lmt=1551047441320699&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773117&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=85E20681F34211552CE1AEDBF41A5398E49496F047E2855BF695A1BFCDD21EE0.3B96DA6EFE9BEC80E30B234E633419B907767CBA68A74EE0BFC1D4B18C49186A&key=us0#f720p","default":true}]},{"name":"Thống Đốc Trẻ Tuổi","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/thong-doc-tre-tuoi_11489/xem-phim/"},"nameOrigin":"The Vision of Bharat","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fthong-doc-tre-tuoi-the-vision-of-bharat-2018.jpg%3Fsize%3D300"},"directors":["Koratala Siva"],"actors":["Prakash Raj","Mahesh Babu","Sarath Kumar","Kiara Advani","Devaraj","Rajsekhar Aningi"],"genres":["Phim Hành Động","Phim Phiêu Lưu"],"countries":["Ấn Độ"],"duration":173,"desc":"Phim Thống Đốc Trẻ Tuổi: Bharat là con trai của một Thống Đốc Bang, đang du học tại Anh. Nghe tin bố mất nên anh đã từ bên London trở về chịu tang. Khi về đến nơi thì bố đã được chôn cất, trong thời gian này nội bộ của Đảng Cầm Quyền tranh giành chức Thống Đốc chưa có chủ. Vì muốn đảng yên ổn trở lại, Bhrat bất ngờ được làm Thống Đốc. Khi làm Thống Đốc, Bharat đã có 1 cuộc cách mạng khi trừng trị tham nhũng và nâng cao đời sống xã hội. Rồi chuyện gì đến cũng phải đến, những tên quan chức tham nhũng liên thủ tìm cách triệt hạ Bharat.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/8813311e319693ca030ea8359ecf341b/8813311e319693ca030ea8359ecf341b.playlist.m3u8","default":true}]},{"name":"Quỷ Dữ Đưa Lối","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/quy-du-dua-loi_11457/xem-phim/"},"nameOrigin":"May The Devil Take You","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fquy-du-dua-loi-may-the-devil-take-you-2018.jpg%3Fsize%3D300"},"directors":["Timo Tjahjanto"],"actors":["Ray Sahetapy","Chelsea Islan","Pevita Pearce","Karina Suwandhi","Samo Rafael","Hadijah Shahab"],"genres":["Phim Kinh Dị","Phim Tâm Lý"],"countries":["Mỹ"],"duration":110,"desc":"Phim Quỷ Dữ Đưa Lối: tựa gốc Sebelum Iblis Menjemput là một bộ phim kinh dị siêu nhiên máu me của Indonesia dựa trên Evil Dead được đánh giá rất cao. Bộ phim theo chân Alfie (Chelsea Islan; Headshot) một người phụ nữ trẻ độc thân đã sống tách khỏi cha mình từ rất lâu. Bỗng một ngày cô phát hiện ra cha mình vẫn còn sống nhưng trong tình trạng nằm liệt giường. Cô đã tìm đến căn nhà của cha mình nhằm tìm hiểm nguyên nhân thật sự khiến cha mình ra nông nổi này và liệu xem có manh mối nào dẫn đến cái chết bí ẩn năm xưa của mẹ cô hay không. Mọi chuyện càng trở nên phức tạp hơn khi Maya, người chị kế của Alfie xuất hiện. Cả hai cô gái rơi vào một cái bẫy khủng khiếp của một con quỷ trong ngôi nhà này đã khiến mọi người gần như phát điên và giết chóc lẫn nhau.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/99f5d8241a8ac6d1b6644790332a3298/99f5d8241a8ac6d1b6644790332a3298.playlist.m3u8","default":true}]},{"name":"Mowgli: Cậu Bé Rừng Xanh","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/mowgli-cau-be-rung-xanh_11476/xem-phim/"},"nameOrigin":"Mowgli: Legend of the Jungle","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fmowgli-cau-be-rung-xanh-mowgli-legend-of-the-jungle-2018.jpg%3Fsize%3D300"},"directors":["Andy Serkis"],"actors":["Christian Bale","Cate Blanchett","Benedict Cumberbatch"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Tâm Lý"],"countries":["Mỹ"],"duration":104,"desc":"Phim Mowgli: Cậu Bé Rừng Xanh: được xây dựng dựa trên tác phẩm văn học kinh điển của tác giả Rudyard Kipling, The \"Jungle Book\" kể lại cuộc phiêu lưu của Mowgli - cậu bé mồ côi được đàn sói nuôi dưỡng trong một khu rừng già Ấn Độ. Nội dung của câu chuyện đã mang lại cho khán giả nhiều cảm xúc về cuộc đời của một cậu bé đáng thương phải đứng giữa cuộc chiến của hai thế giới muôn thú và loài người.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednls.googlevideo.com/videoplayback?id=2885a043f9ade8eb&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednls&ms=nxu&mv=u&pl=25&sc=yes&ei=JIjZXJ7BAYqk8gPW1pCgCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6293.048&lmt=1551840004208285&mt=1557758994&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767236&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=891071E8F4FF57E03AE1059429F36497C640FBA96DAFC956A9871C5014671ACD.63C80682FE60A06F9AA968EA9756E337CD6E98A9887D6C4F9C0869ED461587F5&key=us0","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5e6nsz.googlevideo.com/videoplayback?id=2885a043f9ade8eb&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsz&ms=nxu&mv=u&pl=25&sc=yes&ei=JIjZXPOfAdLM1wLQyZz4Bg&susc=ph&app=fife&mime=video/mp4&dur=6293.048&lmt=1551837505794741&mt=1557758994&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767236&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=BAC6F9BCB6D13FB26B7734DD40E5F4AD880F43ED970887AFF020DF587D76D7D8.C5A157B0492E4C43B744E28D5EFF83A08EB99649F1418F55A51633DA5FB99B7F&key=us0","default":false},{"resolution":1080,"embedUrl":"https://r4---sn-4g5ednls.googlevideo.com/videoplayback?id=2885a043f9ade8eb&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednls&ms=nxu&mv=u&pl=25&sc=yes&ei=JIjZXL-gAY-T8gP_uZzIAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6293.048&lmt=1551840023439921&mt=1557758994&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767236&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=25A1695F9FFA4E79F50632BBA5352094B4D000C670089CC839B6C8424384AF13.2BA09ACD748A3BA7BB861961A800BB3997D8C83ECEB6A8FE8EDCB2B46EC6567B&key=us0","default":false}]},{"name":"Vua Lừa Đảo","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/vua-lua-dao_11492/xem-phim/"},"nameOrigin":"The Polka King","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fvua-lua-dao-the-polka-king-2018.jpg%3Fsize%3D300"},"directors":["Maya Forbes"],"actors":["Jack Black","Jason Schwartzman","Robert Capron","Jenny Slate","Jacki Weaver","J.b. Smoove"],"genres":["Phim Hài Hước"],"countries":["Mỹ"],"duration":95,"desc":"Phim Vua Lừa Đảo: là một bộ phim hài tiểu sử của Mỹ do Maya Forbes đạo diễn và được viết bởi Forbes và Wallace Wolodarsky. Bộ phim dựa trên câu chuyện có thật kể về người đứng đầu ban nhạc Polka gốc Ba Lan, người Mỹ gốc Phi Jan Lewan, người đã bị bắt giam năm 2004 vì đã điều hành một mô hình Ponzi lừa đảo. Jan Lewan (Jack Black) là một người nhập cư Ba Lan với giấc mơ Mỹ. Sau khi làm một số công việc tay chân, anh gặp một nhạc công tên là Mickey (Schwartzman) và họ thành lập một ban nhạc Polka ở Pennsylvania.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/0e1e27454297449d8712ea81b17c7dd7/0e1e27454297449d8712ea81b17c7dd7.playlist.m3u8","default":true}]},{"name":"Huyền Thoại Kung Fu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/huyen-thoai-kung-fu_11491/xem-phim/"},"nameOrigin":"Kung Fu League","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fhuyen-thoai-kung-fu-kung-fu-league-2018.jpg%3Fsize%3D300"},"directors":["Lưu Trấn Vĩ"],"actors":["Trần Quốc Khôn","Triệu Văn Trác"],"genres":["Phim Cổ Trang","Phim Võ Thuật"],"countries":["Trung Quốc"],"duration":105,"desc":"Phim Huyền Thoại Kung Fu Diệp Vấn, Trần Chân, Hoàng Phi Hồng, Hoắc Nguyên Giáp - 4 vị tôn sư võ thuật của Trung Quốc - sẽ cùng góp mặt trong Huyền Thoại Kung Fu. Bốn võ sư, bốn môn phái, đại diện cho bốn thời đại khác nhau gặp nhau và gây ra vô số tình huống dở khóc dở cười. Liệu những rắc rối của thời hiện đại có khiến tứ đại tôn sư lừng danh thiên hạ trong quá khứ phải chùn bước? Huyền Thoại Kung Fu là câu chuyện của Phi Hùng - cậu trai bất mãn với tình yêu vì không dám tỏ tình với cô gái mà anh ta thầm thương trộm nhớ bấy lâu nay. Thế rồi anh ta ao ước rằng những vị đại hiệp Diệp Vấn, Trần Chân, Hoàng Phi Hồng, Hoắc Nguyên Giáp có thể xuyên không đến với năm 2018 nhằm cứu vãn cuộc tình. Và với khả năng sáng tạo vô hạn của biên kịch thì 1 phút 30 giây sau là các vị sư phụ kia đã lập tức bay cái vèo đến thời hiện đại và giúp đỡ Phi Hùng chiếm lấy trái tim người con gái anh yêu.","embeds":[{"resolution":360,"embedUrl":"https://hls.hydrax.net/7UAqLipleBxTOUmJSA4YVzRtViIPD3nY7SexLqOtLS9p6I/0/playlist.m3u8#f720","default":true}]},{"name":"Dạ Quỷ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/da-quy_11443/xem-phim/"},"nameOrigin":"Rampant","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fda-quy-rampant-2018.jpg%3Fsize%3D300"},"directors":["Kim Sung-Hoon"],"actors":["Jang Dong Gun","Hyun Bin"],"genres":["Phim Hành Động","Phim Cổ Trang","Phim Phiêu Lưu","Phim Kinh Dị"],"countries":["Hàn Quốc"],"duration":129,"desc":"Phim Dạ Quỷ là câu chuyện về hoàng tử Lee ở triều đại Joseon, người nổi tiếng có võ thuật cao cường. Trở về sau khoảng thời gian dài bị đày ải bởi nhà Thanh, Ngài đau lòng chứng kiến cả quê hương chìm trong một đại dịch của những “ác quỷ bóng đêm”. Liệu rằng vị hoàng tử Lee có ngăn được cơn cuồng nộ của đội quân quỷ dữ này và cứu được giang sơn?","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5edn7s.googlevideo.com/videoplayback?id=6304e3009fad1cca&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7s&ms=nxu&mv=u&pl=25&sc=yes&ei=GZnZXLnaKsby1gKk_62QCg&susc=ph&app=fife&mime=video/mp4&dur=7298.612&lmt=1551202288885238&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771577&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=6A13A0E00CB18DB53AFB685B93A420F756739DD0BE2DB9D441EFB47184636FF4.02FCAEBA760702649FC8DC5419F554DC9016166AF9A16657C5BD4A12AD569F86&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r5---sn-4g5edn7s.googlevideo.com/videoplayback?id=6304e3009fad1cca&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7s&ms=nxu&mv=u&pl=25&sc=yes&ei=GZnZXNXSM5aw1wKDxYKgDw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7298.612&lmt=1551206082580458&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771577&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=8AF3EEABE7C17CCAA7B92949EA212B3BEA49BF036BF0BD32CDD2A3733C8B2BE7.C17B144A0A2B68F275D31CC7DAEF6E48A76C4A51978363FFE1A2D7EFE6AB9B5E&key=us0#f720p","default":true}]},{"name":"Cảnh Báo Tình Yêu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/canh-bao-tinh-yeu_11441/xem-phim/"},"nameOrigin":"Fluttering Warning","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcanh-bao-tinh-yeu-fluttering-warning-2018.jpg%3Fsize%3D300"},"directors":["Yoon Eun HyeChun Jung Myung"],"actors":["Han Go Eun","Kim Byung Gi","Joo Woo Jae","Lee Hye Ran","Kim Ye Ryung"],"genres":["Phim Tâm Lý"],"countries":["Hàn Quốc"],"duration":45,"desc":"Phim Cảnh Báo Tình Yêu:là Bộ phim dựa trên tểu thuyết mạng “Seolremjoouibo” của tác giả Seo Han-Kyeol. Câu chuyện “Fluttering Warning” theo sau bác sĩ phẫu thuật chỉnh hình (Chun Jung-Myung) và nữ diễn viên nổi tiếng (Yoon Eun-Hye) lập một bản hợp đồng rằng họ phải hành động như hai người yêu nhau.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5ednsy.googlevideo.com/videoplayback?id=f3feceeeb356d15a&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsy&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=Hp_ZXNHJPIzn1wLMsZmIAg&susc=ph&app=fife&mime=video/mp4&dur=3530.245&lmt=1551194882822051&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773119&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=0CAFC2CF7722222A7349B1FA52DCB6B2B0B62F0CE084E926023233EB7F19EE2D.79E752B2E42A402D7DC09863C172C43738B679D358C372B369DD5BD23D234823&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5ednsy.googlevideo.com/videoplayback?id=f3feceeeb356d15a&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsy&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=H5_ZXK21Coqk8gPW1pCgCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=3530.245&lmt=1551198196918920&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773119&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=A931FE94CD2FFE937C316EAD24316B9AD6D21D44D1F90F7FC9B38563956038FC.AA5338C894F58A975CF63F1861C6E119A18A34E34778176B9B81D66A9D36EB34&key=us0#f720p","default":true}]},{"name":"Quái Vật Venom","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/quai-vat-venom_11365/xem-phim/"},"nameOrigin":"Venom","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fquai-vat-venom-venom-2018.jpg%3Fsize%3D300"},"directors":["Ruben Fleischer"],"actors":["Tom Hardy","Riz Ahmed","Michelle Williams"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":121,"desc":"Quái Vật Venom là một kẻ thù nguy hiểm và nặng ký của Người nhện trong loạt series của Marvel. Chàng phóng viên Eddie Brock (do Tom Hardy thủ vai) bí mật theo dõi âm mưu xấu xa của một tổ chức và đã không may mắn khi nhiễm phải loại cộng sinh trùng ngoài hành tinh (Symbiote) và từ đó đã không còn làm chủ bản thân về thể chất lẫn tinh thần. Điều này đã dần biến anh thành quái vật đen tối và nguy hiểm nhất chống lại người Nhện - Venom.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/50687b27cddebe90732f7c8b9c2177c1/50687b27cddebe90732f7c8b9c2177c1.playlist.m3u8","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/venom-2018/1"},{"name":"Cuộc Gọi Bạc Tỷ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cuoc-goi-bac-ty_11370/xem-phim/"},"nameOrigin":"The Big Call","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcuoc-goi-bac-ty-the-big-call-2018.jpg%3Fsize%3D300"},"directors":["Bành Thuận"],"actors":["Trương Hiếu Toàn","Quế Luân Mỹ","Trần Học Đông","Tưởng Mộng Điệp"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":123,"desc":"phim Cuộc Gọi Bạc Tỷ xoay quanh cảnh sát trẻ Đinh Tiểu Điền (Trần Học Đông thủ vai) vừa được nhận chức gia nhập vào tổ trọng án chuyên phụ trách về tội phạm thông tin. Tại đây, anh và nữ đặc vụ lành nghề Tiểu Thỏ (Tưởng Mộng Điệp thủ vai) được giao nhiệm vụ trà trộn vào tổ chức lừa đảo xuyên quốc gia do bộ đôi A Hải (Trương Hiếu Toàn thủ vai) và A Phương (do Quế Luân Mỹ) đứng đầu. Dù đã nắm trong tay nhiều bằng chứng phạm tội, nhưng khó ai có thể nắm bắt được ý nghĩ khó lường của Hải, hắn đắm mình vào cuộc cá cược đánh cắp ngày càng khổng lồ.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/2abab7ba6fe9606c3bbfdbcbd824af10/2abab7ba6fe9606c3bbfdbcbd824af10.playlist.m3u8","default":true}]},{"name":"Thiên Hạ Đệ Nhất Tiêu Cục","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/thien-ha-de-nhat-tieu-cuc_11376/xem-phim/"},"nameOrigin":"The Bravest Escort Group (2018)","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fthien-ha-de-nhat-tieu-cuc-the-bravest-escort-group-2018-2018.jpg%3Fsize%3D300"},"directors":["Đào Minh Hỷ"],"actors":["Phàn Thiếu Hoàng","Thích Ngạn Năng","Xa Vĩnh Lợi"],"genres":["Phim Cổ Trang","Phim Võ Thuật","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":100,"desc":"Phim Thiên Hạ Đệ Nhất Tiêu Cục Ngô Tam Quới qua đời, tướng Mã Bảo vì bảo vệ truyền nhân của chủ tử đành phải nhờ giang hồ giúp sức. Chứng tỏ được năng lực, Thái Bình tiêu cục được Mã Bảo ủy thác hộ tống một người thần bí đến nới an toàn. Nhóm tiêu sư quả cảm do tiêu đầu Lục An chỉ huy phấn khởi lên đường nhưng không biết mình sẽ đối mặt với mối nguy hiểm khôn lường.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5ednle.googlevideo.com/videoplayback?id=fde649dd8a704198&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednle&ms=nxu&mv=u&pl=25&sc=yes&ei=s5bZXKTrGJqJ1gKvwrPIDw&susc=ph&app=fife&mime=video/mp4&dur=5404.792&lmt=1552241380276729&mt=1557762830&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557770963&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=8EF507222A1DC551F98A328BA8A7CCFC4F9E1FEA3143186C51BC0EB07C6895DB.912E7519B7AC444D57B2A6D9F2FC922B1203DECC36399DD380D44FBF974FF0F3&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5ednle.googlevideo.com/videoplayback?id=fde649dd8a704198&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednle&ms=nxu&mv=u&pl=25&sc=yes&ei=s5bZXIGYG8Kt8gOsnpT4Bg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5404.792&lmt=1552243592718139&mt=1557762830&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557770963&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=26285155A8DAD12BB558BF3E96B8B68773BC0B8707030B11C8AA8F3E59F848C5.555DA7850EE06CB1CA3D818DAC95FD51BF73DBBD1E3614D45D5DEA38B8483DB4&key=us0#f720p","default":true}]},{"name":"Săn Bão","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/san-bao_11394/xem-phim/"},"nameOrigin":"L Storm / Biệt đội chống tham nhũng 3","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fsan-bao-l-storm-biet-doi-chong-tham-nhung-3-2018.jpg%3Fsize%3D300"},"directors":["David Lam"],"actors":["Cổ Thiên Lạc","Julian Cheung","Stephy Tang","KAI CHUNG CHEUNG","Kevin Cheng","Chung Chi Cheung"],"genres":["Phim Hành Động","Phim Phiêu Lưu"],"countries":["Hồng Kong"],"duration":90,"desc":"Phim Săn Bão: là phần 3 của series Biệt đội chống tham nhũng. Sự thành công và được mong chờ của Săn bão còn đến từ màn tái xuất của Cổ Thiên Lạc, Trịnh Gia Dĩnh, Trương Trí Lâm cùng dàn sao TVB không chỉ đình đám một thời mà còn thu hút bởi vẻ ngoài soái ca lịch lãm, phong độ. Trong một vụ án tưởng chừng như đi vào bế tắc của điều tra viên Lục Chí Liêm (Cổ Thiên Lạc) cùng đồng nghiệp, thì anh ta bị cáo buộc dính đến vụ việc quan liêu nhũng nhiễu ngay trong chính vụ án của mình. Để minh oan cho bản thân, Lục Chí Liêm đã dấn thân điều tra và phát hiện hàng loạt những đường dây bất hợp pháp. Từ đó, anh bắt đầu bước vào nhiều phen hiểm nguy cũng như những màn đấu trí đến nghẹt thở.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednse.googlevideo.com/videoplayback?id=0701e4070d46aefb&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednse&ms=nxu&mv=u&pl=25&sc=yes&ei=M5DZXLNxycXWAv6Zh3A&susc=ph&app=fife&mime=video/mp4&dur=6004.215&lmt=1551898803837751&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769299&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=990FB9685E34502BD8BDF921A23FC8C39C438400173DBD0AF6FBC7BA33FCEA8E.8116FAC09E713C238F1F39B3E0EE5637FFEDF7E82A1EBA4F1B1E093ACCDDE3B6&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5e6nle.googlevideo.com/videoplayback?id=0701e4070d46aefb&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nle&ms=nxu&mv=u&pl=25&sc=yes&ei=M5DZXIqyA9LM1wLQyZz4Bg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6004.215&lmt=1551912087321223&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769299&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=7E7B159CFF73212B5A9207F9F09DB6D564644C588A0971EA667E06B339BEBC20.D5C5503A038211AEDEC478D2C73AAE13E4EE0561FFC96D73DBC2848F49FC88AE&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r4---sn-4g5ednse.googlevideo.com/videoplayback?id=0701e4070d46aefb&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednse&ms=nxu&mv=u&pl=25&sc=yes&ei=M5DZXLu5DrGL8gPr66LYBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6004.215&lmt=1551911977718833&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769299&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=A5196F3A83FB1032AD3E5801297B0D0E9DB02450855B7226CBF3D75439652745.DCE75CD4BAA149DA2DCE8991604141084A075A246805D2A5E3A2340E3AD415BE&key=us0#f1080p","default":true}]},{"name":"Quái Thú Vô Hình","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/quai-thu-vo-hinh_11364/xem-phim/"},"nameOrigin":"The Predator","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fquai-thu-vo-hinh-the-predator-2018.jpg%3Fsize%3D300"},"directors":["Shane Black"],"actors":["Keegan Michael Key","Boyd Holbrook","Sterling K. Brown"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":100,"desc":"Phim Quái Thú Vô Hình 2018 Những thợ săn bí ẩn từ không gian bỗng xuất hiện ở Trái Đất. Chính quyền cử một đội đặc nhiệm truy tìm và lùng bắt những thợ săn này nhưng liệu ai mới thật sự là kẻ đi săn. Bí ẩn về giống loài tiên tiến này dần được hé lộ.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5edns6.googlevideo.com/videoplayback?id=7c9303e880256eb9&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns6&ms=nxu&mv=u&pl=25&sc=yes&ei=EJ_ZXLKZFYe11gLou7m4CQ&susc=ph&app=fife&mime=video/mp4&dur=6408.521&lmt=1552396258681145&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773104&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=1EBBB91B5456315ECBB7D1FA348D5C02AAE21E8CEB9D296F7C3D2EB5243A4428.A85E9AA812667B2B9705A73250CD1A76B6FBBD5D410A3D7463CCE25BAB556124&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5edns6.googlevideo.com/videoplayback?id=7c9303e880256eb9&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns6&ms=nxu&mv=u&pl=25&sc=yes&ei=EJ_ZXOWyF62S8gOI07awBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6408.521&lmt=1552398477008258&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773104&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=96FF844465074546DE1090F1666350DDD03B3A0FDB2D416643C6B73AEE2519BF.A404D797E4010F63265C49590F6BB003D0A113E6C53490FBAC999AD1144F7AAD&key=us0#f720p","default":true}]},{"name":"A X L Chú Chó Robot","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/a-x-l-chu-cho-robot_11375/xem-phim/"},"nameOrigin":"A X L","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fa-x-l-chu-cho-robot-a-x-l-2018.jpg%3Fsize%3D300"},"directors":["Oliver Daly"],"actors":["Alex Neustaedter","Becky G","Alex MacNicoll"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":100,"desc":"A-X-L Chú Chó Robot, A-X-L 2018 Phim A-X-L Chú Chó Robot tiếp tục giúp khán giả có dịp tái ngộ tình bạn thiêng liêng đó trên màn ảnh rộng với A-X-L (tựa Việt hóa: A-X-L Chú Chó Robot) khi người bạn bốn chân của chúng ta nay đã trở thành một chú siêu khuyển bằng máy móc. Chúc các bạn xem phim vui vẻ!","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5edns7.googlevideo.com/videoplayback?id=0f7bdda6437d6f19&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns7&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=JJ_ZXNf6G82j8gOgkJagBA&susc=ph&app=fife&mime=video/mp4&dur=5936.367&lmt=1551321153296221&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773124&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=CC684AD7F66B1F9FE477CCDDDDA6E540B61B44D995E16881C16CFCDE8B62B0EE.65A2F0BFD1814B32C7DA2BF8DBD4B23D26A6B35FFECF430286BE7091B49DE31C&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5edns7.googlevideo.com/videoplayback?id=0f7bdda6437d6f19&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns7&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=JJ_ZXMy_HvmY8gP-1IS4Cg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5936.367&lmt=1551323170870780&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773124&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=DCF40D72AB9A6BBD75C612A181E8EC40D592D3B2785F71F84EB13016ECEAE3A6.2AC99E165795C083A9DCCE85EB2302ED307A7F11CDB3ABE5D1182E878D27D7D1&key=us0#f720p","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/a-x-l-2018/1"},{"name":"Cuộc Đàm Phán Sinh Tử","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cuoc-dam-phan-sinh-tu_11391/xem-phim/"},"nameOrigin":"The Negotiation","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcuoc-dam-phan-sinh-tu-the-negotiation-2018.jpg%3Fsize%3D300"},"directors":["Lee Jong-suk"],"actors":["Son Ye Jin","Hyun Bin"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Phiêu Lưu","Phim Tâm Lý"],"countries":["Hàn Quốc"],"duration":115,"desc":"Phim Cuộc Đàm Phán Sinh Tử Ha Chae-youn (Son Ye-jin) là cảnh sát giỏi nhất của đội Đàm phán khủng hoảng, cô luôn giữ một cái đầu lạnh trong mọi tình huống. Tuy nhiên cô rơi vào một cú sốc lớn khi một vụ bắt cóc đã kết thúc trong thảm kịch, cô chứng kiến kẻ bắt cóc và con tin bị giết ngay trước mắt mình. Chỉ 10 ngày sau đó, Min Tae-gu (Hyun Bin), một kẻ buôn bán vũ khí khét tiếng bị cảnh sát truy nã, bắt cóc một phóng viên và một cảnh sát người Hàn và chỉ định Chae-youn là người đàm phán. Tình huống nguy hiểm chưa từng có khiến Chae-youn không thể lùi bước, và sự thật kinh hoàng đằng sau dần được hé lộ.","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5e6nzl.googlevideo.com/videoplayback?id=667b33547a8d4218&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzl&ms=nxu&mv=u&pl=25&sc=yes&ei=MJDZXP6eEoKC8gOPhZOwDQ&susc=ph&app=fife&mime=video/mp4&dur=6790.489&lmt=1552201405679284&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769296&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=74B2640C273F9583104426EAAE0962225B867B8B1DEE982620018334D46DD05D.D3CA914FEF9EA1DB7F94715039EBEA845B45DD542AFC94341AB832F5029BF1DB&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5ednsr.googlevideo.com/videoplayback?id=667b33547a8d4218&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsr&ms=nxu&mv=u&pl=25&sc=yes&ei=MJDZXPeXFceo8gOiw4WoCQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6790.489&lmt=1552203070360508&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769296&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=8C6AD3CBEA2999012046BE3157EE8B46F899B969EC9BCC8F2B888600111B4223.BAC241F30AF748FD9CD05164EB8185FC90C05A868B0D3A7D1B7F5D28C2817119&key=us0#f720p","default":true}]},{"name":"Huynh Đệ Hoàng Kim","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/huynh-de-hoang-kim_11387/xem-phim/"},"nameOrigin":"Golden Job","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fhuynh-de-hoang-kim-golden-job-2018-2018.jpg%3Fsize%3D300"},"directors":["Kar Lok Chin"],"actors":["Trịnh Y Kiện","Xa Thi Mạn","Trần Tiểu Xuân","Michael Tse","Kar Lok Chin","Jerry Lamb"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Hồng Kong"],"duration":100,"desc":"Phim Huynh Đệ Hoàng Kim: đánh dấu sự tái ngộ của dàn diễn viên đình đám Hong Kong trong một bộ phim sau 20 năm. Lần đầu tiên lên sóng vào năm 1996, bộ phim Người trong giang hồ (Young and Dangerous) đã nhận được sự quan tâm của dư luận. Năm anh em Sư Vương (Trịnh Y Kiện), Hỏa Sơn (Trần Tiểu Xuân), Bill (Tạ Thiên Hoa), Đàm Định (Tiền Gia Lạc), Lão Thử (Lâm Hiểu Phong), dưới sự chỉ đạo của ân sư Tào Sir (Tăng Chí Vĩ) cùng nhau vào sinh ra tử. Vì muốn cứu sống những đứa trẻ với số phận đáng thương nên năm anh em đã quyết định ăn trộm một loại thuốc đặc hiệu, không may mắc bẫy của kẻ địch, rơi vào một màn mưa bom bão đạn. Cả năm người đều biết không thể quay đầu lại được nữa, nhưng họ vẫn quyết chí hoàn thành.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5ednz7.googlevideo.com/videoplayback?id=d367cce869f26308&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednz7&ms=nxu&mv=u&pl=25&sc=yes&ei=JZ_ZXKz5IseA1wL10ruYCw&susc=ph&app=fife&mime=video/mp4&dur=5960.330&lmt=1552292645762189&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773125&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=040FD115DCC4992E20EBD765452A1A7B58F6FFB38373C91C41D51193C86F285C.614DD0D2565A91ED7B79DF3D9223A07784D0F170A356F0199980BC856CA311BC&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5e6nsk.googlevideo.com/videoplayback?id=d367cce869f26308&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsk&ms=nxu&mv=u&pl=25&sc=yes&ei=JZ_ZXK2lKoHA8gOosrGwCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5960.330&lmt=1552294324973596&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773125&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=2772FF146DD2468595B5480791CE898838F76E77C731E5D9BC598B5E21F0D4F4.D010CBDB4A0F0EE29833C32C32255D3424FB877AB9E1B6DBC1D3E8A302E641B6&key=us0#f720p","default":true}]},{"name":"Giải Cứu Người Đẹp 2","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/giai-cuu-nguoi-dep-2_11296/xem-phim/"},"nameOrigin":"Baaghi 2","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fgiai-cuu-nguoi-dep-2-baaghi-2-2018.jpg%3Fsize%3D300"},"directors":["Ahmed Khan"],"actors":["Disha Patani","Deepak Dobriyal","Darshan Kumaar","Indraneel Bhattacharya"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng"],"countries":["Ấn Độ"],"duration":143,"desc":"Phim Giải Cứu Người Đẹp 2 Sau thành công vang dội của phần 1 ra mắt vào năm 2016, bom tấn hành động Bollywood mang tên Baaghi tiếp tục cho ra mắt phần 2 vào năm 2018 và Ahmed Khan là cái tên đảm nhiệm vai trò “cầm trịch” cho Giải Cứu …","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/c5dcbe027d4fb183d0d7131d7f591f57/c5dcbe027d4fb183d0d7131d7f591f57.playlist.m3u8","default":true}]},{"name":"Phản Đòn","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/phan-don_11276/xem-phim/"},"nameOrigin":"Reprisal","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fphan-don-reprisal-2018.jpg%3Fsize%3D300"},"directors":["Brian A Miller"],"actors":["Bruce Willis","Frank Grillo","Johnathon Schaech"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":89,"desc":"Jacob ( Frank Grillo ), một người quản lý ngân hàng bị ám ảnh bởi một vụ cướp bạo lực đã lấy mạng sống của một đồng nghiệp, lập nhóm với người hàng xóm cũ của mình, James ( Bruce Willis ), để hạ gục kẻ tấn công. Trong khi hai người đàn ông làm việc cùng nhau để tìm ra động thái tiếp theo của tên trộm, Gabriel ( Johnathon Schaech ), một tên tội phạm được đào tạo xuất sắc. Khi Gabriel bắt cóc vợ của Jacob ( Olivia Culpo ) và con gái, Jacob trở nên điên cuồng quyết tâm trả lại món nợ máu","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/82f9b4058c9da94dfd0f2e20066ed626/82f9b4058c9da94dfd0f2e20066ed626.playlist.m3u8","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/reprisal-2018/1"},{"name":"Đế Chế Bất Diệt","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/de-che-bat-diet_11304/xem-phim/"},"nameOrigin":"Furious / Legenda o Kolovrate","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fde-che-bat-diet-furious-legenda-o-kolovrate-2018.jpg%3Fsize%3D300"},"directors":["Dzhanik Fayziev,Ivan Shurkhovetskiy"],"actors":["Ilya Malakov","Aleksey Serebryakov","Aleksandr Ilin","Timofey Tribuntsev","Yuliya Khlynina","Andrey Burkovskiy","Igor Savochkin","Polina Chernyshova","Aleksandr Tsoy","Viktor Proskurin","Sergey Koltakov","Julia Pisarenko","Fedor Starykh"],"genres":["Phim Chiến Tranh","Phim Cổ Trang"],"countries":["Mỹ"],"duration":107,"desc":"Đế Chế Bất Diệt đặt trong bối cảnh nước Nga vào giữa thế kỷ 13 Trung Cổ, bị phân chia thành các quân khu đang lần lượt thất thủ khi quân đội Mông Cổ dẫn đầu bởi tướng Bạt Đô hiện thực hóa giấc mộng bá chủ thế giới của Thành Cát Tư Hãn. Sợ hãi trước sức mạnh và sự tàn bạo của quân xâm lược, hầu hết các thái tử Nga đều xin hàng và giao nộp vùng đất của họ cho kẻ thù. Những kẻ xâm lược cướp bóc và đốt cháy các thành phố, nhuộm đất Nga bằng máu, cho đến khi một kiếm sĩ Ryazan Evpaty Kolovrat đứng lên ngăn chặn chúng. Kolovrat dẫn đầu một đội ngũ của hàng trăm chiến binh dũng cảm để trả thù cho gia đình thân yêu, cho dân tộc, và quê hương của anh.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/261692c9f0efde59a7a1307e8c686842/261692c9f0efde59a7a1307e8c686842.playlist.m3u8","default":true}]},{"name":"Chiến Binh Mexico","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/chien-binh-mexico_11274/xem-phim/"},"nameOrigin":"Sicario: Day Of The Soldado","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fchien-binh-mexico-sicario-day-of-the-soldado-2018.jpg%3Fsize%3D300"},"directors":["Stefano Sollima"],"actors":["Josh Brolin","Benicio Del Toro","Isabela Moner","Jeffrey Donovan"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":122,"desc":"Phim Chiến Binh Mexico Bắt đầu một chương mới, Chiến binh Mexico (Sicario: Day of the Soldado) sẽ là một cuộc chiến bất chấp luật lệ giữa chính phủ Mỹ và các băng đảng ma tuý Mexico. Không chỉ ma tuý, các băng đảng này còn vận chuyển người trái phép để thực hiện các vụ khủng bố tại Mỹ. Trước tình hình chính trị căng thẳng, đặc vụ liên bang Matt Graver (Josh Brolin) liên lạc với người đàn ông bí ẩn Alejandro (Benicio Del Toro), đưa cuộc chiến lên giai đoạn mới bằng cách bắt cóc con gái Isabela của tay trùm băng đảng lớn nhất để các phe phái quay sang hạ bệ lẫn nhau. Bắt đầu cuộc chiến nhưng không lường trước được hậu quả, số phận của cô bé bị đe doạ trầm trọng và họ buộc đưa ra lựa chọn: mạng sống của Isable hay chiến thắng cuộc chiến?","embeds":[{"resolution":360,"embedUrl":"https://r6---sn-4g5e6nl7.googlevideo.com/videoplayback?id=7f7aa7e9f69ee521&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nl7&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=Kp_ZXJqKMJiJ1wL0yIXQDA&susc=ph&app=fife&mime=video/mp4&dur=7343.821&lmt=1551252977374738&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773130&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=598730E558DCAA53CCE0627A1E6AE37ADF8A5904C4947DC2BA7B833BD8C55DF4.045475F871391B2A33FE7E0B4F8F4061D04290A5B9ABF6E0B71DB7EDF7F8AE04&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5edn7z.googlevideo.com/videoplayback?id=7f7aa7e9f69ee521&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7z&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=Kp_ZXJLrNdLM1wLQyZz4Bg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7343.821&lmt=1551255765069965&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773130&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=65B6CF0E2E437AEC3D9909255829C3E1C8405FAFFE085C0910BDE31FA9FA8E36.546C2725F2C23D39DCEF3718C5177B57A5A61044C33F17587E6F41223E99B50F&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r6---sn-4g5edn7z.googlevideo.com/videoplayback?id=7f7aa7e9f69ee521&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7z&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=Kp_ZXIHIOoKC8gOPhZOwDQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7343.821&lmt=1551255813778528&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773131&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=72CF4477AB0E74746D50A0B588C64663CCC7B8A87BD05F748A74A1BC93D1A4F9.2AE077806FD42153768555F6E95202816367B9C3FB6AE3B2F26D1BCE7C58CB75&key=us0#f1080p","default":true}]},{"name":"Thám tử Conan Movie 22: Kẻ Hành Pháp Zero","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tham-tu-conan-movie-22-ke-hanh-phap-zero_11269/xem-phim/"},"nameOrigin":"Detective Conan Movie 22: Zero the Enforcer","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftham-tu-conan-movie-22-ke-hanh-phap-zero-detective-conan-movie-22-zero-the-enforcer-2018.jpg%3Fsize%3D300"},"directors":["Yuzuru Tachikawa"],"actors":["Tôru Furuya","Megumi Hayashibara","Rikiya Koyama","Ryôtarô Okiayu","Minami Takayama","Kappei Yamaguchi","Wakana Yamazaki","Ken'ichi Ogata"],"genres":["Phim Hình Sự","Phim Hoạt Hình","Phim Phiêu Lưu","Phim Tâm Lý","Phim Thiếu nhi"],"countries":["Nhật Bản"],"duration":120,"desc":"Conan Movie 22 xoay quanh nhân vật Tooru \"Zero\" Amuro và nghi vấn cảnh sát trưởng Kuroda là một trong những thành phần của tổ chức áo đen.\"Edge of Ocean\", một cơ sở mới của Vịnh Tokyo sẽ là nơi tổ chức Hội nghị Thượng đỉnh Tokyo. Hội nghị sẽ được tổ chức vào ngày 1/5 và có tới 22.000 cảnh sát được huy động, nhưng một vụ nổ bom cực lớn đột ngột xảy ra tại cơ sở siêu hoành tráng này! Tại nơi đó, vào lúc xảy ra vụ việc, lại nhìn thấy bóng dáng của Amuro Tooru thuộc tổ chức bí mật của Cảnh sát Quốc gia với bí danh là \"Zero\" đang điều khiển các cảnh sát an ninh trên toàn quốc. Tại hiện trường, cảnh sát đã phát hiện dấu vân tay của Mori Kogoro và ông bị bắt. Để chứng minh ông Mori vô tội, Conan đã bắt tay vào điều tra nhưng liên tục bị \"kẻ 3 mặt\" Amuro cản đường.Bộ phim dự kiến sẽ được gắn mác 13+ và công chiếu từ ngày 17/8 tại tất cả hệ thống rạp trên toàn quốc.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5ednss.googlevideo.com/videoplayback?id=ba5dce64efbe67b4&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednss&ms=nxu&mv=u&pl=25&sc=yes&ei=Kp_ZXNOgNJfP1wKPqJ6YAQ&susc=ph&app=fife&mime=video/mp4&dur=6615.690&lmt=1552619460681827&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773130&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=E7C8EA19899DFC18FBB45E42C36C442F10ECECE08A33BCCD880F8F1EA6B59568.B30688D5BD0C2045737CD3CB9976E92F7D770C494FA69FBA4379AD0CE6B984D9&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5e6nsk.googlevideo.com/videoplayback?id=ba5dce64efbe67b4&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsk&ms=nxu&mv=u&pl=25&sc=yes&ei=K5_ZXPo8zaPyA6CQlqAE&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6615.690&lmt=1552625649474572&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773131&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=2777E88563CCF48E33F311C443E18F48ACC6A865DB6DB5F1A7B01B7BB9DAE9DD.1E60C00B8A741D902A741D9F81CC4D0C82F9670E5D1C4A3760FE37CEB17D670C&key=us0#f720p","default":true}]},{"name":"Chung Cư Tình Yêu (Bản Điện Ảnh)","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/chung-cu-tinh-yeu-ban-dien-anh_11303/xem-phim/"},"nameOrigin":"iPartment The Movie","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fchung-cu-tinh-yeu-ban-dien-anh-ipartment-the-movie-2018.jpg%3Fsize%3D300"},"directors":["Vi Chính"],"actors":["Lâu Nghệ Tiêu","Tôn Nghệ Châu","Trần Hách","Viên Hoằng"],"genres":["Phim Hài Hước","Phim Tâm Lý","Phim Viễn Tưởng"],"countries":["Trung Quốc"],"duration":120,"desc":"Chung Cư Tình Yêu bản điện ảnh với những nhân vật quen thuộc như Tăng Tiểu Hiền, Hồ Nhất Phi, Lữ Tử Kiều, Trương Vĩ, Đường Du Du sẽ trở lại với khán giả sau 10 năm kỷ niệm. Dàn nhân vật Chung Cư Tình Yêu tình cờ lấy nhầm hào quang nhân vật chính của Thiết Tam Giác trong thế giới Đạo Mộ Bút Kí của tác giả Nam Phái Tam Thúc, xuyên qua thế giới trộm mộ đầy hiểm nguy, phá tan âm mưu tà ác.Vẫn là những con người quen thuộc đó, tiếng cười chưa từng ngừng nghỉ, bạn bè gặp nhau, tiếp tục phát triển câu chuyện, chứng minh câu nói chủ đề của bản truyền hình: “Bạn bè tốt nhất ở cạnh bên, người mình yêu nhất ngay trước mắt”.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5e6ne6.googlevideo.com/videoplayback?id=2c6b4c0a12ca49cf&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ne6&ms=nxu&mv=u&pl=25&sc=yes&ei=WY3ZXMqPG8yX8gOqvqXIDw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6933.966&lmt=1549103107910917&mt=1557760963&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557768569&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=A71B2826EC0141E5F9B2F2F273DCD3DEC9CFFF1062794966D6201FBA8204A771.BB1BEDAFC64DCBDC8EC849F7508B6A19EA776715044955E9BCF95098E61F1FBE&key=us0","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5ednse.googlevideo.com/videoplayback?id=2c6b4c0a12ca49cf&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednse&ms=nxu&mv=u&pl=25&sc=yes&ei=WY3ZXJCTG8-R8gPliLj4DQ&susc=ph&app=fife&mime=video/mp4&dur=6933.966&lmt=1549099308690642&mt=1557760963&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557768569&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=E6B15F2DEDB20B55762BBB231D400A6CBA053067F97F8DB9C70156A4D546138D.D5D8E1562C89388F812E4A5D5C9BAACC2B2A56C48D1B19970DCFA307245C6548&key=us0","default":false}]},{"name":"Đặc Vụ Bất Chấp","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/dac-vu-bat-chap_11245/xem-phim/"},"nameOrigin":"Agent Mr. Chan","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fdac-vu-bat-chap-agent-mr-chan-2018.jpg%3Fsize%3D300"},"directors":["Jeff Cheung"],"actors":["Xa Thi Mạn","Trịnh Trung Cơ","Sammi Cheng","Kai Chung Cheung","Kwok Keung Cheung","Sui Man Chim","Ada Choi","Philippe Joly","Colin David Herbert Blackwell","Chi Wah Wong","Cecilia So","Sze Kwan Cheng","Lawrence Cheng","Justin Cheung","Michael Hui"],"genres":["Phim Hành Động","Phim Hài Hước","Phim Phiêu Lưu"],"countries":["Hồng Kong"],"duration":101,"desc":"Hào hoa và lịch lãm chẳng kém gì James Bond, Mr.Chan là một điệp viên đẳng cấp hàng đầu. Anh chàng được một nữ cảnh sát ngỏ lời giúp đỡ cô trong một vụ án đầy gian nan. Trong suốt hành trình truy tìm ra câu trả lời, cả hai đã gặp phải vô số những pha đụng độ nguy hiểm nhưng cũng không kém phần hài hước.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5e6nze.googlevideo.com/videoplayback?id=326fada39ea410d2&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nze&ms=nxu&mv=u&pl=25&sc=yes&ei=MZ_ZXPa_BsnF1gL-mYdw&susc=ph&app=fife&mime=video/mp4&dur=5990.748&lmt=1552695151595065&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773137&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=A7E47887F19670226B94CA284671D7F7C71303091DDBE1336CC75EDD3F4B0A5C.48D40060C7E4CC9930C257E6B1E4C4309541B228938E49B4F6CAC17BBD97239D&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5e6nze.googlevideo.com/videoplayback?id=326fada39ea410d2&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nze&ms=nxu&mv=u&pl=25&sc=yes&ei=MZ_ZXN7zCJWd1wKq87T4Bw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5990.748&lmt=1552697178732627&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773137&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=20C874A1EFFE98359040A5113E55BBF7382D64E5757A50CAD4C81A3683BC1602.6B72B51FB00F319A832F1155C22F436A78A70F35CA3452B7978997427E2304FF&key=us0#f720p","default":true}]},{"name":"Nhiệm Vụ Bất Khả Thi 6: Sụp Đổ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/nhiem-vu-bat-kha-thi-6-sup-do_11163/xem-phim/"},"nameOrigin":"Mission: Impossible Fallout","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fnhiem-vu-bat-kha-thi-sup-do-mission-impossible-fallout-2018.jpg%3Fsize%3D300"},"directors":["Christopher McQuarrie"],"actors":["Tom Cruise","Vanessa Kirby","Rebecca Ferguson"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":120,"desc":"Phim Nhiệm Vụ Bất Khả Thi: Sụp Đổ Ba năm sau Mission: Impossible – Rogue Nation, chàng đặc vụ điển trai và hào hoa bậc nhất trên màn ảnh rộng Ethan Hunt sẽ tái xuất màn bạc trong mùa hè 2018. Trailer đầu tiên của Nhiệm Vụ Bất Khả Thi: Sụp Đổ (Tựa gốc: Mission: Impossible - Fallout) vừa được hãng phát hành Paramount tung ra ngay lập tức trở thành tâm điểm của đại chúng bởi sự trở lại của ngôi sao hành động hàng đầu thế giới Tom Cruise cùng những khoảnh khắc nghẹt thở bắt nguồn từ pha hành động đẳng cấp mang đậm dấu ấn cá nhân anh.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5ednsl.googlevideo.com/videoplayback?id=a4808244ff6b0247&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsl&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=U43ZXM_9AZfP1wKPqJ6YAQ&susc=ph&app=fife&mime=video/mp4&dur=8861.384&lmt=1551874250066531&mt=1557760963&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557768563&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=AF55CB6131DCCD084E03EF487A53B556A0BD98E0D0F7F190B7AE5675F88D7CA3.33364A49CCB1BE7E734DA764853C3B52A344E2E07F6FBFC65577F4FF411E41&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5e6nzs.googlevideo.com/videoplayback?id=a4808244ff6b0247&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzs&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=U43ZXJvDCpnY1wLIyaLwBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=8861.384&lmt=1551880843546747&mt=1557760963&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557768563&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=69C025FFAA1C895FE96319D4B07DAB192194DF78CC829EE99914AAF6460358CA.DC95F107EA67393F67448269A338123B0FFD30779E757CE3DF224A2DCC866606&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r1---sn-4g5ednsl.googlevideo.com/videoplayback?id=a4808244ff6b0247&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsl&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=U43ZXMCWDZqJ1gKvwrPIDw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=8861.384&lmt=1551880534158453&mt=1557760963&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557768563&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=CFB21CFEBF52CE36669F7216DDCE5B5E4E6357AA55EBC6FC2DAFDF9354F5A353.332EAEB8BA732026B0C2FF97474C47D2BAC99FD719095E1ADB26C9502F6FCA88&key=us0#f1080p","default":true}]},{"name":"Cá Mập Siêu Bạo Chúa","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ca-map-sieu-bao-chua_11248/xem-phim/"},"nameOrigin":"The Meg","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fca-map-sieu-bao-chua-the-meg-2018.jpg%3Fsize%3D300"},"directors":["Jon Turteltaub"],"actors":["Jason Statham","Rainn Wilson","Ruby Rose"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Kinh Dị","Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":113,"desc":"Phim Cá Mập Siêu Bạo Chúa Trong chuyến thám hiểm đại dương, đoàn thủy thủ đã khám phá ra Mariana - khu vực biển sâu nhất Trái Đất. Tuy nhiên, cả đoàn bị mắc kẹt dưới đáy Thái Bình Dương, khi đó tính mạng của họ bị đe dọa trước kẻ săn mồi ám ảnh đầy kinh hãi nhất lịch sử - siêu cá mập bạo chúa khổng lồ, thường được biết đến với cái tên Megalodon. Trước tình hình ngàn cân treo sợi tóc, một đội chuyên gia gồm Jonas Taylor (Jason Statham), nhà đại dương và con gái ông đã được tập hợp để đến giải cứu đoàn tàu. Jonas cùng đồng đội sẽ xoay sở ra sao? Liệu họ có thể giải cứu mọi người thoát khỏi sinh vật đáng sợ này?","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5e6ns6.googlevideo.com/videoplayback?id=aec3c65ec7e7dae0&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ns6&ms=nxu&mv=u&pl=25&sc=yes&ei=MZ_ZXKSACsKt8gOsnpT4Bg&susc=ph&app=fife&mime=video/mp4&dur=6791.581&lmt=1552616955091288&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773137&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=9E92021F8F93FDE247073FE722BBACE443E1BD1B9D6C051FEBDF481A4C9A6CF0.4BCD9E0BF171EE58A0B4E7F64ECCDD77C95AAC275D8925C8E22F431D3F382000&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5edned.googlevideo.com/videoplayback?id=aec3c65ec7e7dae0&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edned&ms=nxu&mv=u&pl=25&sc=yes&ei=MZ_ZXLvYD4mu1wLbmqqYDA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6791.581&lmt=1552619234467165&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773137&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=8A9483AD2E7B0A06A0371F69AEBDD547DEAD8E4685F76535B8F14852618AA838.19DAB97540EF874B8AAF1FC502AD963F428C33142C18BF8275033F864BD80386&key=us0#f720p","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/the-meg-2018/1"},{"name":"Alpha: Người Thủ Lĩnh","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/alpha-nguoi-thu-linh_11246/xem-phim/"},"nameOrigin":"Alpha","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Falpha-nguoi-thu-linh-alpha-2018.jpg%3Fsize%3D300"},"directors":["Albert Hughes"],"actors":["Natassia Malthe","Leonor Varela","Kodi Smit McPhee","Jóhannes Haukur Jóhannesson"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":100,"desc":"Alpha” lấy bối cảnh 20.000 năm trước, đưa người xem theo chân một cậu bé thuộc tộc người hang động tại Châu Âu (do Kodi Smit-McPhee thủ vai) vào thời Đồ Đá Cũ. Trong lúc cùng các đồng bào của mình đi săn bò rừng, cậu đã bị rơi khỏi vách đá và lạc mất đoàn. Trong hành trình trở về bộ tộc đầy cam go, người chiến binh trẻ đã có một tình bạn kỳ lạ cùng một con sói tuyết hung dữ.","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5ednsz.googlevideo.com/videoplayback?id=f2c199ab9e855dab&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsz&ms=nxu&mv=u&pl=25&sc=yes&ei=MZ_ZXNLYKseA1wL10ruYCw&susc=ph&app=fife&mime=video/mp4&dur=5790.499&lmt=1552654433023480&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773137&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=3589B238C7621AC3A52F082C00F43C2D36E11019A76C8A2570C0F2883F8C80B9.61B933C8808B07B732FB3AC5A89B5FED79D4D79E50B801D6585B57DCF874CEFD&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6nsz.googlevideo.com/videoplayback?id=f2c199ab9e855dab&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsz&ms=nxu&mv=u&pl=25&sc=yes&ei=MZ_ZXOH9LIKC8gOPhZOwDQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5790.499&lmt=1552657792257094&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773137&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=2B905CBA1F9A62CB17D0708942768C25D595D8118354082E2CE3798D9AE4D0E8.A7C3C11B6945BE2F0AE80F3F5618992EFAB0D8EEF13FF520D0F5C08878260610&key=us0#f720p","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/alpha-2018/1"},{"name":"Tế Công 2: Thần Long Tái Xuất","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/te-cong-2-than-long-tai-xuat_11212/xem-phim/"},"nameOrigin":"The Incredible Monk: Dragon Return","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fte-cong-2-than-long-tai-xuat-the-incredible-monk-dragon-return-2018.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Đang cập nhật"],"genres":["Phim Cổ Trang","Phim Hài Hước","Phim Thần Thoại","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":100,"desc":"Phim Tế Công 2: Thần Long Tái Xuất Tế Công và các liên minh anh hùng, lại một lần nữa hóa giải thảm họa của nhân gian, phàm là không gian đều không thể nhận được an toàn, tranh chấp, chiến tranh vẫn không ngừng. Tướng quân Cao Nhân Kiệt chính là danh tiếng triều đình, đã tham gia nhiều trận lớn nhỏ và giành nhiều chiến thắng, lập được không ít công lao hiển hách, trở thành người anh hùng dân tộc. Cao Bân và Tự Thiếu phải lòng thanh mai trúc mã Phượng Nghi, nhưng ý trời lại lệnh Phượng Nghi bị ép phải xuống biển làm kỹ nữ.Cao Nhân Kiệt yêu Phượng Nghi, lại bị mọi người chỉ trích lại không dám cưới Phượng Nghi làm thê tử. Cao Nhân Kiệt cầu Tế Công giúp, Tế Công trải qua bao nhiêu khó khăn, thề phải làm mối cho hai người mệnh khổ này! Khi tất cả đã thành công, thuộc hạ của Cao lại hạ độc thủ, giết chết Phượng Nghi, muốn Cao Nhân Kiệt quên đi tình cảm trai gái, dốc lòng vì nước vì dân. Tế Công phẫn nộ, oán hận ông trời vì sao lại chia cách uyên ương? Lẽ trời ở đâu? Giận dữ biến thành rồng thần, thề phải thay đổi vận mệnh, đi ngượi thiên ý, trực tiếp đi xuống địa phủ, chiến đầu chống lại các linh hồn tà ác, cướp lại nguyên thần của Phượng Nghi","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5e6ne6.googlevideo.com/videoplayback?id=74e4eb9fcaa1cf04&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ne6&ms=nxu&mv=u&pl=25&sc=yes&ei=Mp_ZXJTWC4KC8gOPhZOwDQ&susc=ph&app=fife&mime=video/mp4&dur=5303.391&lmt=1552553977662866&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773138&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=9E6B7764A0AB180F9FDC2812C47E56B35A112C2B09D43F079E008AE60B7A1BC2.3E6FBFE306737BE88902B843769586AABFBB7D3425BF1E699358F740B499C698&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5ednz7.googlevideo.com/videoplayback?id=74e4eb9fcaa1cf04&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednz7&ms=nxu&mv=u&pl=25&sc=yes&ei=Mp_ZXPT8EZbg1wK2oo-ACg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5303.391&lmt=1552555417650192&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773138&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=E2C52D146F3122CC23849846174EB378C99ED7F4207319EEE059A70780DA4CE6.79EBA8948D1574DEC6FA235D46051F27977271AD0035561B6804A52841C63AB0&key=us0#f720p","default":true}]},{"name":"Tập Yêu Pháp Hải Truyện","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tap-yeu-phap-hai-truyen_11185/xem-phim/"},"nameOrigin":"Fa Hai","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftap-yeu-phap-hai-truyen-fa-hai-2018.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Bạch Vũ","Hoàng Dung","Khương Chấn Hạo"],"genres":["Phim Cổ Trang","Phim Thần Thoại"],"countries":["Trung Quốc"],"duration":90,"desc":"Trong phim Tập Yêu Pháp Hải Truyện, thời kì hưng thịnh, yêu quái hoành hành. Triều đình lập ra tổ chức “Tập Yêu Ti” chuyên lùng bắt yêu quái, từng thành viên đều phải uống máu yêu, để chống lại yêu ma. Nhưng nếu không thể giữ được tấm lòng trong sạch như nước, thì sẽ bị máu yêu phản phệ, hóa thành bán yêu.Ban đêm, thủ lĩnh Tập yêu ti Bùi Văn Đức dẫn người ra ngoài thành tìm kiếm yêu khí lạ xuất hiện. Tại nơi đó phát hiện một thiếu nữ tên Bạch Thanh Thanh thực chất là một con cự xà, trong lúc hai bên giao chiến, hoàng cung bị Quỷ Vương tập kích, tính mạng hoàng đế như chỉ mành treo chuông. Bùi Văn Đức phụng mệnh dẫn theo “nội ứng” của yêu vương Bạch Thanh Thanh bước lên con đường tìm kiếm Quỷ Vương, dọc đường đi Bùi Văn Đức phát hiện thì ra Bạch Thanh Thanh bị yêu vương uy hiếp, hai người hóa giải hiềm nghi lúc trước bắt đầu nảy sinh một chút tình cảm khác thường.Trải qua khó khăn trùng trùng, rốt cục Bùi Văn Đức đã tìm được chỗ ẩn náu của Yêu vương, nhưng thực lực đôi bên chênh lệch quá rõ, hắn phải làm sao đây ?","embeds":[{"resolution":360,"embedUrl":"https://content.googleapis.com/drive/v2/files/1FTnx6FI1pWcK-CIcceB4AJ8S61rYJuRy?alt=media&key=AIzaSyBMqv4dXnTJOGQtZZS3CBjvf748QvxSzF0","default":true}]},{"name":"Toà Tháp Chọc Trời","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/toa-thap-choc-troi_11119/xem-phim/"},"nameOrigin":"Skyscraper","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftoa-thap-choc-troi-skyscraper-2018.jpg%3Fsize%3D300"},"directors":["Rawson Marshall Thurber"],"actors":["Dwayne Johnson","Roland Møller"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":120,"desc":"Phim Toà Tháp Chọc Trời Dwayne Johnson (The Rock) sẽ vào vai cựu quân nhân và cựu trưởng nhóm đặc nhiệm giải cứu của FBI Will Ford đầy dũng cảm. Không may trong một nhiệm vụ nguy hiểm, tai nạn khủng khiếp xảy đến với Will làm anh mất đi chân trái của mình. Kể từ đó, Will Ford từ bỏ công việc tại FBI và trở thành chuyên gia đánh giá an ninh cho các tòa nhà. Trong một lần làm việc, Tòa nhà cao 240 tầng với hệ thống an ninh tối tân đột nhiên bị cháy lớn ở tầng 96. Những con người, cạm bẫy và thế lực nào đứng sau thảm họa này chắc chắn đang nhắm vào cựu quân nhân và lấy gia đình anh ra làm con tin. Với kinh nghiệm, sự gan dạ của một người lính cùng tình yêu gia đình mãnh liệt, liệu Will Ford có tìm ra được kẻ chủ mưu và cứu lấy gia đình của anh?","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednsd.googlevideo.com/videoplayback?id=e274518e371b340a&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsd&ms=nxu&mv=u&pl=25&sc=yes&ei=3JbZXLusHYzn1wLMsZmIAg&susc=ph&app=fife&mime=video/mp4&dur=6146.182&lmt=1552397873943678&mt=1557762830&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771004&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=76826CADD817D270B7EB5413AD61707E13BFB70AD378D2EAEF59ED24B4AAE53E.19B39957F219A542E64DC8A9C4F0C2D2133305DE113CF20CB833FE55D6F3489D&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5e6nzl.googlevideo.com/videoplayback?id=e274518e371b340a&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzl&ms=nxu&mv=u&pl=25&sc=yes&ei=3JbZXK64JceA1wL10ruYCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6146.182&lmt=1552401757817090&mt=1557762830&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771004&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=5E8CE93FAA1A3CEA9DA17C68734EC9632952C2759ABFD80DDD4BD604509471AD.A935AA86B9BB9F089CE00EF4123BAA68CB9E451052787A73D625787257FD3A94&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r3---sn-4g5e6nzl.googlevideo.com/videoplayback?id=e274518e371b340a&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzl&ms=nxu&mv=u&pl=25&sc=yes&ei=3JbZXO7iJ8-R8gPliLj4DQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6146.182&lmt=1552401772042745&mt=1557762830&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771004&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=C3812EBBF3FB55F525ADC1603129383EB0CC3AB9059108B1BF32F015E5907487.ECFDE15DE8FD07265D3B9D1FD0A8A9D4C643758018F9F33390D31B2CBB186AB9&key=us0#f1080p","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/skyscraper-2018/1"},{"name":"Tiết Mật Hành Giả","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tiet-mat-hanh-gia_11146/xem-phim/"},"nameOrigin":"The Leakers","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftiet-mat-hanh-gia-the-leakers-2018.jpg%3Fsize%3D300"},"directors":["Herman Yau"],"actors":["Julian Cheung","Chrissie Chau","Francis Ng","Kent Cheng","Sam Lee"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Phiêu Lưu","Phim Tâm Lý"],"countries":["Hồng Kong"],"duration":100,"desc":"Phim Tiết Mật Hành Giả thuộc thể loại hành động, ly kỳ có bối cảnh chủ yếu ở Malaysia và HongKong. Phim khai thác đề tài dịch bệnh do bị phát tán 1 loài virus nguy hiểm ảnh hưởng đến toàn nhân loại và cuộc chiến khắc nghiệt của hình cảnh quốc tế cùng chống lại những kẻ đứng sau vụ này.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5e6ns7.googlevideo.com/videoplayback?id=efa2ab15e6e2d2a9&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ns7&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=OJ_ZXPavEIOd8gOAxbGoAw&susc=ph&app=fife&mime=video/mp4&dur=6166.453&lmt=1551274395256404&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773144&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=6F3EF73243DB383C18D38EA3F85CA22290E259973ED9C0CC24E8DD98FFB57F69.97B817C75DE7CD6C4532E0329AEBBE599E8A6864BD979CE75FA093F4F63CDBB5&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5edn7e.googlevideo.com/videoplayback?id=efa2ab15e6e2d2a9&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7e&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=OJ_ZXODaEoOd8gOAxbGoAw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6166.453&lmt=1551277812740312&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773144&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=B408B60415F375583BAAC8CE265904A380F34D25829F3664BB9EADF411457CE4.0E514EE73C3D84D7DB353A519D2D3D4EA158A3EEB9A659B76FBA3F00B52E43BF&key=us0#f720p","default":true}]},{"name":"Ngự Thiên Thần Đế 3: Chi U Yến Kinh Hồn","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ngu-thien-than-de-3-chi-u-yen-kinh-hon_11058/xem-phim/"},"nameOrigin":"Ngu Thien Than De","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fngu-thien-than-de-3-chi-u-yen-kinh-hon-ngu-thien-than-de-2018.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Lý Hân Trạch","Phó Dương Dương","Trương Duyệt Nam"],"genres":["Phim Cổ Trang","Phim Thần Thoại","Phim Võ Thuật"],"countries":["Trung Quốc"],"duration":90,"desc":"Phim Ngự Thiên Thần Đế 3: Chi U Yến Kinh Hồn 2018: Diệp thanh vũ - Con trai tuyết quốc đại tướng quân, trong 1 đêm cả nhà gặp nạn, trở thành tên ăn mày. Để trở lại triều đình điều tra rõ chân tướng, hắn ghi danh vào học viện võ đạo. Mong muốn báo thù. Trong thời gian ở học viện, hắn được nhiều người không để ý sống chết bản thân ra sức giúp đỡ, khiến thân thế của hắn thành bí ẩn. Diệp thanh vũ không muốn liên lụy tới Tống Tiểu Quân (người yêu hắn), nhưng hắn lại yêu Bạch Ngọc Khanh, Quận chúa bạch ngọc khanh lại là yêu tộc nằm vùng tại nhân tộc. Yêu tộc không ngừng dùng thủ đoạn gia hại Diệp Thanh Vũ, nhưng hắn ở trong nghịch cảnh không ngừng mạnh mẽ hơn. Bạch Ngọc Khanh yêu hắn, nhưng hắn lại trúng bấy của Yêu tộc, Tống tiểu quân dùng tình mệnh cứu hắn... Hắn sẽ ra sao ?","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/54fa9bcadc849e6f19750e6d88daa424/54fa9bcadc849e6f19750e6d88daa424.playlist.m3u8","default":true}]},{"name":"Đôi Bạn Trổ Tài","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/doi-ban-tro-tai_11047/xem-phim/"},"nameOrigin":"Đôi Bạn Tri Kỷ 2 / Mad Mission Part / Aces Go Places 2","year":"1983","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fdoi-ban-tro-tai-doi-ban-tri-ky-2-mad-mission-part-aces-go-places-2-1983.jpg%3Fsize%3D300"},"directors":["Tăng Chí Vĩ"],"actors":["Trương Ngải Gia","Karl Maka","Sam Hui (Hứa Quán Kiệt)","Yasuaki Kurata"],"genres":["Phim Hành Động","Phim Hài Hước","Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":100,"desc":"Phim Đôi Bạn Trổ Tài - Đôi Bạn Tri Kỷ 2 / Mad Mission Part / Aces Go Places 2 kể về hai nhân vật King Kong - Đầu Trọc quyết tâm phá án vụ cướp hà băng, đưa bọn người xấu ra ánh sáng.","embeds":[{"resolution":360,"embedUrl":"http://zingtv-video-12.zadn.vn/Video480/2015/1112/30/211fbb3b16a10ea01090f8df70b94541.mp4?authen=exp=1557852351~acl=211fbb3b16a10ea01090f8df70b94541~hmac=191f1be64aeae853b2b83353094e28cc","default":false},{"resolution":720,"embedUrl":"http://zingtv-video-12.zadn.vn/2015/1112/30/1309f74323a77f3f0ce9224fc581e3ff.mp4?authen=exp=1557852351~acl=1309f74323a77f3f0ce9224fc581e3ff~hmac=cbdb320833fe87a863b2ba20e4e02dc0","default":false}]},{"name":"Em Trai Tôi Là Găng Tơ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/em-trai-toi-la-gang-to_10986/xem-phim/"},"nameOrigin":"Brothers in Heaven","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fem-trai-toi-la-gang-to-brothers-in-heaven-2018.jpg%3Fsize%3D300"},"directors":["Park Hee Joon"],"actors":["Sung Hoon","Jo Han Sun"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Tâm Lý"],"countries":["Hàn Quốc"],"duration":114,"desc":"phim Em Trai Tôi Là Găng Tơ - Brothers in Heaven 2018 kể về Tae-Joo (Jo Han-Sun đóng) một cảnh sát giỏi, có nhiệm vụ truy bắt những băng đảng trộm cổ vật khét tiếng ở Busan. Trong lúc truy đuổi tội phạm, anh lại phải đối đầu với Tae-Sung (Sung Hoon đóng) - người em trai sinh đôi của mình, một thành viên “máu mặt” trong thế giới ngầm Găng Tơ.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5e6ns7.googlevideo.com/videoplayback?id=c29418ea69d18fa4&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ns7&ms=nxu&mv=m&pl=25&sc=yes&ei=xYbZXPvDDseA1wL10ruYCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6845.776&lmt=1550176934850922&mt=1557759518&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557766885&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=4761076E330FA28746F80C46CE9171B6113B7CF8E7928203335E8937BDC3532C.101FA66886A211D4388184C0706A8EE65147A7281A215F369459727C75BBFCCA&key=us0","default":true},{"resolution":720,"embedUrl":"https://r5---sn-4g5edney.googlevideo.com/videoplayback?id=c29418ea69d18fa4&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edney&ms=nxu&mv=u&pl=25&sc=yes&ei=xYbZXOO4DsyX8gOqvqXIDw&susc=ph&app=fife&mime=video/mp4&dur=6845.776&lmt=1550171082145295&mt=1557758994&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557766885&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=62A15C8FEBEEE66065960A8F535AC6687DEADAE4A0115E94F85A3C4CC379A2FF.354DCFEDF93A38F66CEDF52510F47F11778E4F487014DAEB22F55B745347346B&key=us0","default":false}]},{"name":"Rồng Đất: Ngày Lạnh Giá Ở Địa Ngục","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/rong-dat-ngay-lanh-gia-o-dia-nguc_10947/xem-phim/"},"nameOrigin":"Tremors: A Cold Day in Hell","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Frong-dat-ngay-lanh-gia-o-dia-nguc-tremors-a-cold-day-in-hell-2018.jpg%3Fsize%3D300"},"directors":["Don Michael Paul"],"actors":["Jamie Kennedy","Tanya van Graan","Jamie Lee Money"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Kinh Dị","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":98,"desc":"Phim Rồng Đất: Ngày Lạnh Giá Ở Địa Ngục - Tremors: A Cold Day in Hell Phần tiếp theo tìm thấy Burt Gummer và con trai Travis tại một trạm nghiên cứu từ xa, nơi họ phải chiến đấu với quái vật Graboids đã được biến thành vũ khí sống.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5e6nz7.googlevideo.com/videoplayback?id=f197ca592dd91b8f&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nz7&ms=nxu&mv=u&pl=25&sc=yes&ei=2JDZXO_MMZmV1wL9qaHgDA&susc=ph&app=fife&mime=video/mp4&dur=5878.619&lmt=1552397688456199&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769464&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=067AFF7BAAE15CFE9266E91339AE94D263B243E7A6F1EF2A8A3AF0D4F311F409.A0E23815CD9625CB85589466F67C72319F848437FFD94960BDD4B04633604841&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5edne6.googlevideo.com/videoplayback?id=f197ca592dd91b8f&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edne6&ms=nxu&mv=u&pl=25&sc=yes&ei=2JDZXM-_NInG1wL4lbfwDg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5878.619&lmt=1552400386537296&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769464&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=984735FDF76316F998046373C634E075F8EEAE69287890134CDC65DDDB184D07.2B77749E9AC4D891CD10155216EF1E62D30B39B5B69E30703D7122CD3C3A5D51&key=us0#f720p","default":true}]},{"name":"Siêu Thú Cuồng Nộ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/sieu-thu-cuong-no_10914/xem-phim/"},"nameOrigin":"Rampage","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fsieu-thu-cuong-no-rampage-2018.jpg%3Fsize%3D300"},"directors":["Brad Peyton"],"actors":["Dwayne Johnson","Jeffrey Dean Morgan","Malin Akerman","Joe Manganiello"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":107,"desc":"phim Siêu Thú Cuồng Nộ - Rampage nói về nhà sinh vật học Davis Okoye (Dwayne Johnson) đã kết bạn với George, một con khỉ đột thông minh, người đã được chăm sóc từ khi sinh ra. Tuy nhiên, một thí nghiệm di truyền giả mạo đã biến đổi con khỉ nhuyễn thành một con quái vật. Khi các con quái vật mới được tạo ra này tràn ngập khắp Bắc Mỹ, phá hủy mọi thứ trên con đường của họ, Okoye đã làm việc với một kỹ sư di truyền bị để tìm ra thuốc giải độc, chiến đấu để vượt qua một chiến trường luôn thay đổi, không chỉ để ngăn chặn một thảm hoạ toàn cầu mà còn cứu được sinh vật đã từng là bạn của mình.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednsl.googlevideo.com/videoplayback?id=489f5382321840d6&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsl&ms=nxu&mv=m&pl=25&sc=yes&ei=jIbZXNi1Iozn1wLMsZmIAg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6436.223&lmt=1555269872464189&mt=1557759518&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557766828&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=6A85944EEFC379D7F7F9BA51EF49C1BFD2F31013860443555DCC4BCB3982E889.4D9E313574AEAF50232BC89F15CD60EB4A76294E8705E9CC0EC8B5724C0F96D9&key=us0","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5e6n7d.googlevideo.com/videoplayback?id=489f5382321840d6&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6n7d&ms=nxu&mv=m&pl=25&sc=yes&ei=jIbZXJnBIpmV1wL9qaHgDA&susc=ph&app=fife&mime=video/mp4&dur=6436.223&lmt=1555265902811136&mt=1557759518&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557766828&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=C5596BFE1BF799AF9D56D53FCED54AE7F3C8E5765BCCD389289946EA36F9C902.E4988F6DBAA31842EE98DEE78D4859CAF7F682281A2E809F38A8EC29BF213AB8&key=us0","default":false}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/rampage-2018/1"},{"name":"Vinh Quang Thích Khách Kinh Kha","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/vinh-quang-thich-khach-kinh-kha_10912/xem-phim/"},"nameOrigin":"Assassin Glory","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fvinh-quang-thich-khach-kinh-kha-assassin-glory-2018.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Tạ Miêu"],"genres":["Phim Cổ Trang","Phim Võ Thuật"],"countries":["Trung Quốc"],"duration":75,"desc":"Phim Vinh Quang Thích Khách - Kinh Kha phim - Assassin Glory thể hiện nửa đời trước của Kinh Kha, trước khi hành thích tần vương","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5e6nsr.googlevideo.com/videoplayback?id=fcca1a7ceb37b642&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsr&ms=nxu&mv=u&pl=25&sc=yes&ei=6ZbZXKnXGqyj8gODuIrIBQ&susc=ph&app=fife&mime=video/mp4&dur=4459.694&lmt=1551262958134832&mt=1557762830&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771017&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=132A495D02E746107A5790F095B2902A115F9A26B09C4734391F6CA0C6081C07.C161C52CD25E97BEDDEF9584C16BF59F89AD29B67A2FCE2E5DF40F93058C75F3&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6nsr.googlevideo.com/videoplayback?id=fcca1a7ceb37b642&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsr&ms=nxu&mv=u&pl=25&sc=yes&ei=6ZbZXPiIH5rj1wLHyrjYAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4459.694&lmt=1551264972417202&mt=1557762830&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771017&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=592E35D8E1A0E5957400EF29B9EFA982BD15D5C1F37F7A98D6764D96A6F2D7F2.99C229EE5D754C38D8E603210D8BF313A8D74E7F70020474A195A3294D296B43&key=us0#f720p","default":true}]},{"name":"Cuộc Gọi Cuối Cùng","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cuoc-goi-cuoi-cung_10936/xem-phim/"},"nameOrigin":"The Last Call","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcuoc-goi-cuoi-cung-the-last-call-2018.jpg%3Fsize%3D300"},"directors":["Vương Ninh"],"actors":["Lý Tuấn Vĩ","Triệu Tân","Triệu Văn Kỳ"],"genres":["Phim Hành Động","Phim Phiêu Lưu"],"countries":["Trung Quốc"],"duration":100,"desc":"Phim Cuộc Gọi Cuối Cùng - The Last Call khi tỉnh lại, bác sĩ Tần Phong phát hiện bị nhốt trong một chiếc hòm kín. Kẻ bắt anh cho biết để thoát khỏi đây, anh chỉ được cung cấp một chiếc điện thoại cài sẵn 3 số điện để liên lạc cầu cứu. Vỏn vẹn 60 phút trong một không gian thiếu oxi, liệu anh có được cứu thoát kịp thời và người âm mưu chuyện này là ai?","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5edn7e.googlevideo.com/videoplayback?id=698718f7fac25c15&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7e&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=SJ_ZXMi9FYHA8gOosrGwCA&susc=ph&app=fife&mime=video/mp4&dur=4978.892&lmt=1551336900291791&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773160&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=C8B1F107763332773F24524103A80CDCB47A2EB56750A5997F6BB321A26D0E8A.C60CF85C7D7C513FC7BDCD92AD3E5584622C5B5761E1F42F3A6CADF7A53846A0&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6nlk.googlevideo.com/videoplayback?id=698718f7fac25c15&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nlk&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=SJ_ZXM-nH4zn1wLMsZmIAg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4978.892&lmt=1551340196010749&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773160&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=C7757A00D74980F84D7D8EB3A5E174ADAAFA995C14F246DF9085C72A6866DDEA.9A88C37B248B7E0D024EFEC37D747CB9DA2AAB6FFB334C464AAEE2370EFDD68A&key=us0#f720p","default":true}]},{"name":"Cô Nàng Xui Xẻo","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/co-nang-xui-xeo_10859/xem-phim/"},"nameOrigin":"Fairy Tale Of Love","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fco-nang-xui-xeo-fairy-tale-of-love-2017.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Lý Tương","Phan Nguyễn","Lý Tử"],"genres":["Phim Tâm Lý"],"countries":["Trung Quốc"],"duration":100,"desc":"Phim Cô Nàng Xui Xẻo / Fairy Tale Of Love Cuộc sống giản đơn của anh chàng Trần Mạch bỗng chốc bị xáo trộn bởi sự xuất hiện của Tịnh Ly – một cô gái kỳ lạ, có phép thuật. Thật ra, Tịnh Ly chính là Suy Thần – một vị thần mang đến xui xẻo – trốn từ tiên giới xuống trần gian. Rốt cuộc giữa hai người họ có cơ duyên gì mà có thể khiến Tịnh Ly quyết định hạ phàm như vậy?","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5ednll.googlevideo.com/videoplayback?id=83b45e12024d1558&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednll&ms=nxu&mv=u&pl=25&sc=yes&ei=8JbZXPrHKc-R8gPliLj4DQ&susc=ph&app=fife&mime=video/mp4&dur=4587.659&lmt=1552483003579810&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771024&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=725D107D713CD0D42BD7D6DF91B6F60F22948E93971745F20CCC548ACCF465DD.676149DB60987389EF23137B762D6D45475C97B22BB9F8AEA2A270CCA290DFB0&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5e6nez.googlevideo.com/videoplayback?id=83b45e12024d1558&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nez&ms=nxu&mv=u&pl=25&sc=yes&ei=8JbZXP7sK4qk8gPW1pCgCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4587.659&lmt=1552488212558914&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771024&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=828ACC879DB0483AE701ED992903C67AB72F04042784022DB0B71F1963F238D6.8867B3D1C551A26853EC6FA455AB17ACFE2E2C22A39F9C613F5196CA601CE657&key=us0#f720p","default":true}]},{"name":"Chiến Dịch Đen","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/chien-dich-den_10807/xem-phim/"},"nameOrigin":"China Salesman","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fchien-dich-den-china-salesman-2017.jpg%3Fsize%3D300"},"directors":["Tan Bing"],"actors":["Steven Seagal","Mike Tyson","Dong xue Li","Janicke Askevold","Eriq Ebouaney"],"genres":["Phim Hành Động","Phim Phiêu Lưu"],"countries":["Mỹ"],"duration":110,"desc":"phim Chiến Dịch Đen / China Salesman kể về Yan Jian, một kỹ sư công nghệ thông tin người Trung Quốc tình nguyện đi đến Bắc Phi. Điệp viên Pháp Michael theo mệnh lệnh đi đến Bắc Phi để đánh chiếm khoáng sản. Yan đã phát hiện ra âm mưu của họ, liệu anh có thể ngăn chặn được âm mưu này ?","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5edne6.googlevideo.com/videoplayback?id=bc3dd9e59638219c&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edne6&ms=nxu&mv=u&pl=25&sc=yes&ei=UJ_ZXN_mFpbg1wK2oo-ACg&susc=ph&app=fife&mime=video/mp4&dur=6615.040&lmt=1552384283993998&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773168&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=0468C381D1B6246F116A100FF947A714ED814E9893EB50C1F8DAA3394BC25359.AA634586E351DB7753A534D240742F91E1304B043A8B221EF12AA2E893693056&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5edne6.googlevideo.com/videoplayback?id=bc3dd9e59638219c&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edne6&ms=nxu&mv=u&pl=25&sc=yes&ei=UJ_ZXOWYGceo8gOiw4WoCQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6615.040&lmt=1552386805929129&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773168&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=E47702941C6BCF2BCFC8E79F20E76460EA1C6C6EC817B4F256B03A959FDF15D4.BC8F5274A0940701387B60D22AEB326903002E257677CE8EB959D13EB11C3620&key=us0#f720p","default":true}]},{"name":"Ngũ Hiệp Trừ Yêu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ngu-hiep-tru-yeu_10672/xem-phim/"},"nameOrigin":"The Thousand Faces of Dunjia","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fngu-hiep-tru-yeu-the-thousand-faces-of-dunjia-2018.jpg%3Fsize%3D300"},"directors":["Viên Hòa Bình"],"actors":["Liễu Nham","Lý Trị Đình","Đổng Thành Bằng","Chu Đông Vũ","Nghê Ni","Ngũ Bách","Ngụy Lộ","Trương Nghệ Kiển"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":100,"desc":"Phim Ngũ Hiệp Trừ Yêu / The Thousand Faces of Dunjia Lấy bối cảnh giả tưởng không cụ thể, Trung Nguyên bấy giờ đang đứng trước bờ vực thảm họa khi bị lũ sinh vật dị hợm đến từ ngoài vũ trụ hoành hành. Để ngăn chặn các thế lực tà ác, bảo vệ dân lành, Vụ Ẩn Bang được thành lập bao gồm hàng loạt cao thủ tinh thông võ nghệ lẫn Kỳ Môn Độn Giáp. Thời gian thấm thoát trôi qua, con quái vật mạnh nhất đã bị phong ấn, xã hội bình yên trở lại, tổ chức này cũng vì vậy mà ngày một suy tàn, chìm dần vào quên lãng.","embeds":[{"resolution":360,"embedUrl":"http://cdn16nofree.keeng.net/kfilm/mp4/20180822/2e763c9b-15a2-4865-8aa0-143436065879_5.mp4","default":true}]},{"name":"Hỷ Lạc Trường An","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/hy-lac-truong-an_10663/xem-phim/"},"nameOrigin":"Easy Life","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fhy-lac-truong-an-easy-life-2016.jpg%3Fsize%3D300"},"directors":["Trúc Khanh"],"actors":["Trương Thiên Dương","Hà Hoằng San","Vạn Thương"],"genres":["Phim Hành Động","Phim Cổ Trang","Phim Hài Hước","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":92,"desc":"Hỷ Lạc Trường An / Easy Life được chuyển thể từ tiểu thuyết Trường An Loạn của tác giả nổi tiếng Hàn Hàn. Thích Nhiên – 1 tiểu hòa thượng có công phu đặc biệt, dù chiêu thức nhanh đến đâu nhưng trong mắt cậu cũng chậm rì rì.. Vì thế, cậu nghiễm nhiên trở thành 1 nhân vật huyền thoại và bị giới giang hồ truy sát vì chức vị minh chủ võ lâm","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5ednss.googlevideo.com/videoplayback?id=79d3e383a058bb97&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednss&ms=nxu&mv=u&pl=25&sc=yes&ei=X5_ZXITvLZWd1wKq87T4Bw&susc=ph&app=fife&mime=video/mp4&dur=5538.330&lmt=1552398623590070&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773183&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=60B517191EC630FAE942A3AE89F0DD38FE161F03A19A156D76A5D895B995A60B.70823A857FEE52EB8B1DFE82B25FF129D9ED6E47ED07729F02E8B38486489AE1&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6ney.googlevideo.com/videoplayback?id=79d3e383a058bb97&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ney&ms=nxu&mv=u&pl=25&sc=yes&ei=X5_ZXJ-kNNKZ8gOw9qWABg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5538.330&lmt=1552611934107520&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773183&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=8CE14DF2F75066B1C602B0641E0B56A903A3941EA37DC97D826C275E5FF1F8BF.ABC4848856A03A5BA74EEBDBA1C49C45D48DDC67F27EF1F83E1A6FF0C343DBBC&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r2---sn-4g5ednss.googlevideo.com/videoplayback?id=79d3e383a058bb97&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednss&ms=nxu&mv=u&pl=25&sc=yes&ei=X5_ZXJbuOpWd1wKq87T4Bw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5538.330&lmt=1552612079189952&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773183&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=3A433E482DB2689640161E063AF414C7D62BE0A8EDF6EDC61F1EA5931F194C1F.B187DF5E60CE5931B1C95C43F972FEB59003864C56493E81DE5DD962034CDFF5&key=us0#f1080p","default":true}]},{"name":"Tôi Là Cung Xử Nữ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/toi-la-cung-xu-nu_10623/xem-phim/"},"nameOrigin":"12 Cung Hoàng Đạo / Perfect Imperfection","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftoi-la-cung-xu-nu-perfect-imperfection-2016.jpg%3Fsize%3D300"},"directors":["Trần Bình"],"actors":["Phương Trung Tín","An Dĩ Hiên","Ahn Jae Hyun"],"genres":["Phim Hài Hước","Phim Tâm Lý"],"countries":["Trung Quốc"],"duration":86,"desc":"Tôi Là Cung Xử Nữ / 12 Cung Hoàng Đạo / Perfect Imperfection là tác phẩm đầu tiên của Hoa Ngữ có chủ đề về cung hoàng đạo. Phim khắc họa lại câu chuyện tình yêu đầy thú vị của cặp đôi đều thuộc cung Xử Nữ. Đây là một bước đi thông minh của các nhà làm phim. Vì những năm trở lại đây, giới trẻ càng ngày càng chú trọng hơn đến vấn đề cung hoàng đạo. Từ công việc, học tập cho đến tình yêu, tình bạn, người ta đều lấy 12 chòm sao ra làm thước đo chuẩn mực.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednsr.googlevideo.com/videoplayback?id=9338cb03149fa628&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsr&ms=nxu&mv=u&pl=25&sc=yes&ei=CJHZXOzmG5G01wKllZHoCA&susc=ph&app=fife&mime=video/mp4&dur=5184.876&lmt=1552377177879176&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769512&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=56A505C1256D1C1946768F791D17333777A2C3102A7B5469B3C71D2BB8AAE3D7.D0EFFFA72B09874DCD38BAECF5F1DC5DB0BCC4245D089B34EB2E8B1B10106A5C&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5e6nls.googlevideo.com/videoplayback?id=9338cb03149fa628&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nls&ms=nxu&mv=u&pl=25&sc=yes&ei=CJHZXI6fIo-T8gP_uZzIAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5184.876&lmt=1552380196962488&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769512&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=17FA923D64F75C4F572F0D62D89D1A239AA6BF995ECC00A2E7A8E93A08622F83.62092D13EA9CC851E0DF3EFF616A0E17E9273AACBFB3C43EB88B52919527D73E&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r3---sn-4g5ednsr.googlevideo.com/videoplayback?id=9338cb03149fa628&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsr&ms=nxu&mv=u&pl=25&sc=yes&ei=CJHZXPbcJPmY8gP-1IS4Cg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5184.876&lmt=1552380320311430&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769512&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=E7C0ED28DD4D31CB2487CE5E7F51FFA5724788C93592E658DC1206FF0A136B73.9BB555D747AEB6D054C047106266DE70379AC9FFB652C106AFAD1073C6E3E958&key=us0#f1080p","default":true}]},{"name":"Siêu Nhân Điện Quang: Thiết Long","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/sieu-nhan-dien-quang-thiet-long_10601/xem-phim/"},"nameOrigin":"Dragon Force: So Long Ultraman","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fsieu-nhan-dien-quang-thiet-long-dragon-force-so-long-ultraman-2017.jpg%3Fsize%3D300"},"directors":["Vương Nguy"],"actors":["Hầu Dũng","Kim Thần","Đại Trương Vỹ"],"genres":["Phim Hành Động","Phim Hoạt Hình","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":100,"desc":"Phim Siêu Nhân Điện Quang: Thiết Long / Dragon Force: So Long Ultraman Nửa thế kỷ trước trái Đất xuất hiện 1 siêu anh hùng được nhiều người yêu mến đó là Siêu Nhân Điện Quang. Thế nhưng, sau khi diệt trừ hết quái thú thì anh lại biến mất, thậm chí còn bị nghi ngờ là âm mưu hủy diệt Trái Đất. Trước đại họa sắp ập đến đội Cang Chi Thiết Long tinh nhuệ buộc phải xuất quân ngăn chặn.","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5ednls.googlevideo.com/videoplayback?id=7256336783a5a53b&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednls&ms=nxu&mv=u&pl=25&sc=yes&ei=SZLZXM_iJ4-T8gP_uZzIAQ&susc=ph&app=fife&mime=video/mp4&dur=5305.039&lmt=1552429951178864&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769833&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=02528AF1A862DD7AF1066AE23E88701E0A94F12FB96248EA7F1AA26553F62925.B2421650AA6601BD67DA55F9EB34F6AE77EFCAC07148AF8B1EAF87B54BF1C19E&key=us0#f360p","default":true}]},{"name":"28 Tuổi Vị Thành Niên (Bản Điện Ảnh)","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/28-tuoi-vi-thanh-nien-ban-dien-anh_10640/xem-phim/"},"nameOrigin":"Suddenly Seventeen","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2F28-tuoi-vi-thanh-nien-ban-dien-anh-suddenly-seventeen-2016.jpg%3Fsize%3D300"},"directors":["Mo Zhang"],"actors":["Hoắc Kiến Hoa","Tưởng Mộng Tiệp"],"genres":["Phim Tâm Lý","Phim Viễn Tưởng"],"countries":["Trung Quốc"],"duration":107,"desc":"Phim 28 Tuổi Vị Thành Niên / Suddenly Seventeen kể về Lương Hạ năm nay 28 tuổi, là quản lý một khách sạn cao cấp. Trong công việc cô phải đối mặt với sự quấy rối của cấp trên và sự hoạnh họe của khách hàng. Vào ngày sinh nhật, cô cãi nhau với bạn trai Mao Lượng. Trong lúc chán nản Lương Hạ đã đề nghị chia tay, nhưng điều bất ngờ là cô và Mao Lượng cùng xuyên không trở về năm 17 tuổi. Cũng từ đó bao chuyện dở khóc dở cười đã xảy ra...","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5ednld.googlevideo.com/videoplayback?id=d52d8edeeb5b5a29&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednld&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=eJ_ZXK6sFZbg1wK2oo-ACg&susc=ph&app=fife&mime=video/mp4&dur=6320.843&lmt=1551045034608073&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773208&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=B240DE701077A5B5630C0DABEA2EDE938E47654FF4FBC0587337220FB40C18D7.A0B6AC4682187AA0F74C86968EC27479946193BE238D184B2AA7BA4641BD6C16&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6nlk.googlevideo.com/videoplayback?id=d52d8edeeb5b5a29&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nlk&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=eJ_ZXObPGZbg1wK2oo-ACg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6320.843&lmt=1551048782287590&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773208&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=D5B4DE7EEFDD0B249E8A171B4C2E9BF442C4EE03E09106C649ACB37BDFE6E0D4.3A941DB3D24E6100A187DEDEF0C8D49FA7839B82FC811F098C226213429AC5A5&key=us0#f720p","default":true}]},{"name":"Mùa Hạ, Chân Dung Tuổi 19","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/mua-ha-chan-dung-tuoi-19_10608/xem-phim/"},"nameOrigin":"Edge of Innocence","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fmua-ha-chan-dung-tuoi-19-edge-of-innocence-2016.jpg%3Fsize%3D300"},"directors":["Jung-Chi Chang"],"actors":["Trương Quốc Trụ","Đỗ Thiên Hạo","Hoàng Tử Thao","Lý Mộng","Dương Thái Ngọc"],"genres":["Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":95,"desc":"Phim Mùa Hạ, Chân Dung Tuổi 19 / Edge of Innocence: Khang Kiều là một cậu thanh niên 19 tuổi rất yêu thích xe cơ giới, trong một lần phóng xe đi phượt gặp tai nạn bị thương phải vào viện. Trong những ngày nằm viện buồn chán, Khang Kiều dùng kính viễn vọng ngắm nhìn thế giới bên ngoài, liền để mắt đến một cô gái ở đối diện bệnh viện, Hạ Dĩnh Dĩnh. Khang Kiều dần nảy sinh tình cảm với cô gái mà mình không hề biết đến. Nhưng không ngờ vào một đêm mưa, cậu lại phát hiện ra một bí mật động trời của cô gái đó…","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5e6ns6.googlevideo.com/videoplayback?id=506270379fc72a8b&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ns6&ms=nxu&mv=u&pl=25&sc=yes&ei=eJ_ZXPCbMPmY8gP-1IS4Cg&susc=ph&app=fife&mime=video/mp4&dur=6178.435&lmt=1552692545080740&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773208&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=6A193D77E2FF50071ECC9D0B137EF9E25A33F90A4724ECA08FE1C83E75842A0F.187C06BD08D289D3A718E06F5B51099463B9FFDD57D0CD12F37D3021EAD1E3AE&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r5---sn-4g5ednee.googlevideo.com/videoplayback?id=506270379fc72a8b&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednee&ms=nxu&mv=u&pl=25&sc=yes&ei=eJ_ZXJ_INMvJ1wL45ongCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6178.435&lmt=1552694855304086&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773208&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=13423598235E81AC601C8B6F6C096A5D8C48816145D955CE098E518E50F2B4F8.19B38D4D5DE202B15F569F8E59F45C5CEB7751246D210D5BC8CA536BB96E23CF&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r5---sn-4g5e6ns6.googlevideo.com/videoplayback?id=506270379fc72a8b&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ns6&ms=nxu&mv=u&pl=25&sc=yes&ei=eJ_ZXPzBONLM1wLQyZz4Bg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6178.435&lmt=1552694878373839&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773208&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=29CF8BEFE1D216FFBE8EB2C592EEBD8A719CF95BC963809254B46803F29BC0B8.E936A1D2561C3BC5F9C25835C8F6EF4FDB662D318AE3EDD58AACF3CB56A4B9E7&key=us0#f1080p","default":true}]},{"name":"Vịnh Xuân Bạch Hạc Quyền","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/vinh-xuan-bach-hac-quyen_10600/xem-phim/"},"nameOrigin":"The Scroll Of Wing Chun White Crane","year":"2014","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fvinh-xuan-bach-hac-quyen-the-scroll-of-wing-chun-white-crane-2014.jpg%3Fsize%3D300"},"directors":["Lương Gia Nhân"],"actors":["Dịch Dương","Dương Chính","Thẩm Phương Hi"],"genres":["Phim Võ Thuật","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":100,"desc":"Phim Vịnh Xuân Bạch Hạc Quyền / The Scroll Of Wing Chun White Crane Ông nội của Trần Phàm và Trần Tinh vô tình có được bí kíp 108 chiêu Vịnh Xuân Bạch Hạc Quyền, ông quyết định quyên góp cho bảo tàng. Nhưng trên đường đi, bí kíp bị lấy cắp. Hai chị lên đường tìm bí kíp và hé lộ nhiều bí ẩn.","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5e6ns6.googlevideo.com/videoplayback?id=8146d5e12ec835f8&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ns6&ms=nxu&mv=u&pl=25&sc=yes&ei=eJ_ZXN3HOMKt8gOsnpT4Bg&susc=ph&app=fife&mime=video/mp4&dur=5583.330&lmt=1552792221251255&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773209&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=ADBA9D1C2ABA62CE73AE0F03A36667317760D90E6A525F288AA80F346242588A.736683DA16F8F550F07C24296413E287C611170BCB163B977604D3EE845D2967&key=us0#f360p","default":true}]},{"name":"Án Mạng Thôn Quê","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/an-mang-thon-que_10599/xem-phim/"},"nameOrigin":"Absurd Accid","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fan-mang-thon-que-absurd-accid-2017.jpg%3Fsize%3D300"},"directors":["Lý Vũ Hòa"],"actors":["Nhậm Tố Tịch","Cao Hiệp","Trần Tỉ Húc"],"genres":["Phim Hài Hước","Phim Hình Sự","Phim Kinh Dị","Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":100,"desc":"Phim Án Mạng Thôn Quê / Absurd Accid Ông chủ nhà trọ Dương Bách Vạn vì mắc bệnh liệt dương nên đâm ra đa nghi, cáu gắt. .Thậm chí, nghe lời người khác nói vợ mình ngoại tình mà Bách Vạn đã thuê người, cũng chính là vị trung y đang chữa bệnh cho mình, trừ khử vợ cho hả giận. Và rồi, những vụ án quái đảng cũng xảy ra sau đó.","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5e6nzl.googlevideo.com/videoplayback?id=281e11c556c2b2ae&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzl&ms=nxu&mv=u&pl=25&sc=yes&ei=eZ_ZXIH0IZmR1wLfn5GgBA&susc=ph&app=fife&mime=video/mp4&dur=11403.412&lmt=1552813274489972&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773209&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=EA7827E8BA764CDA66E2432C79ABD882D05BCD8870AB4C9FAADC1382A984ED3A.2B3D20B2BDECA3D700317A363FE1A5C490B2C401A60F54DBA3B85E12A20178A8&key=us0#f360p","default":true}]},{"name":"Ngôi Chùa Ma","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ngoi-chua-ma_10570/xem-phim/"},"nameOrigin":"A Ghost Story Xiang Yun Temple","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fngoi-chua-ma-a-ghost-story-xiang-yun-temple-2017.jpg%3Fsize%3D300"},"directors":["Lưu Hiên Dịch"],"actors":["Bành Ngu Khư","Hà Hân Tử","Trần Ngọc Dũng"],"genres":["Phim Cổ Trang","Phim Hài Hước","Phim Kinh Dị","Phim Tâm Lý","Phim Thần Thoại"],"countries":["Trung Quốc"],"duration":60,"desc":"phim Ngôi Chùa Ma / A Ghost Story Xiang Yun Temple: Mã Thiên Ý truyền nhân của gia tộc họ Mã chuyên trừ ma, vì tính cách ngỗ ngược mà bị cha đuổi đến Tường Vân Tự. Tại đây, có hàng loạt những câu chuyện dân gian kỳ dị và Thiên Ý cũng trở thành pháp sư trừ ma. Cho đến 1 ngày, có 1 vị khách đến thăm, những bí mật của ngôi chùa này mới dần hé lộ","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5e6nes.googlevideo.com/videoplayback?id=035852dbfb33d00c&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nes&ms=nxu&mv=u&pl=25&sc=yes&ei=65LZXM7nNJmV1wL9qaHgDA&susc=ph&app=fife&mime=video/mp4&dur=3959.675&lmt=1552706474589562&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769995&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=4DECF52AE8E2E25CD44D32006AC1D5933ECF8ACC20F2595C7DF4FA0FDDA8EAB9.7E587CD3B96D708A346A23D4C709F85C766E197EBA3EE077237849181CF693C0&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5edne6.googlevideo.com/videoplayback?id=035852dbfb33d00c&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edne6&ms=nxu&mv=u&pl=25&sc=yes&ei=65LZXMOmO4HA8gOosrGwCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=3959.675&lmt=1552708227675576&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769995&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=076597E3551495D9C904C172E3BF90FED50AB81F34419527C7CC37CA358D7B1F.4FB669CC13802791DDA68394EA55045FAB7E5D60774ECB0C48CB7B68D4F8DF7E&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r2---sn-4g5e6nes.googlevideo.com/videoplayback?id=035852dbfb33d00c&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nes&ms=nxu&mv=u&pl=25&sc=yes&ei=7JLZXM1Mg53yA4DFsagD&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=3959.675&lmt=1552708227385586&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557769996&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=522A12E8B08BB0BABE4A9981D9F6AF7A6769DBAE432C099B70FBE22F0C555915.2E100665E0F7BC17A9BAE1174F8FFA96C7E86D91FE1D0EFBA5751696F2B49A46&key=us0#f1080p","default":true}]},{"name":"7 Giây Thần Thánh","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/7-giay-than-thanh_10586/xem-phim/"},"nameOrigin":"Seventh Seconds Rescue","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2F7-giay-than-thanh-seventh-seconds-rescue-2017.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["An Hổ","Cù Cúc Huy","Vương Nguy"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":88,"desc":"Phim 7 Giây Thần Thánh / Seventh Seconds Rescue trong 1 lần thực hiện nhiệm vụ, anh chàng cảnh sát với biệt hiệu 2083. Kể từ đó, anh có khả năng chạm vào vật chứng thì có thể nhìn thấy 7 giây trước đó của nó. 1 vụ án nghiêm trọng của thành phố khi nhiều nơi liên tục xảy ra nổ bom, với khả năng kỳ diệu này liệu anh có bắt được thủ phạm.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednll.googlevideo.com/videoplayback?id=93389a49d62560c9&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednll&ms=nxu&mv=u&pl=25&sc=yes&ei=f5_ZXOPRBdLM1wLQyZz4Bg&susc=ph&app=fife&mime=video/mp4&dur=5284.954&lmt=1551314955197318&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773215&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=354CF587B48F77B2BB63BBEC9479231F0580629E43D89078005F00E8796B009F.B40356506D37BF40933E41B9EC78AEFE5231099BC573DA6A21424A3B05D08D26&key=us0#f360p","default":true}]},{"name":"Hoa Cải Vàng","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/hoa-cai-vang_10594/xem-phim/"},"nameOrigin":"Canola","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fhoa-cai-vang-canola-2016.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Kim Go Eun","Kim Hee Won","Youn Yuh Jung","Shin Eun Jung","Minho"],"genres":["Phim Tâm Lý"],"countries":["Hàn Quốc"],"duration":117,"desc":"Phim Hoa Cải Vàng / Calona: Bà Gye Choon được biết đến như một huyền thoại lặn biển tại đảo Jeju và cô cháu gái Hye Ji (Kim Go Eun) sống với bà. Cả hai bà cháu sống nương tựa vào nhau và chăm sóc lẫn nhau.Hye Ji là một nữ sinh trung học với một tâm hồn dữ dội và cô có một bí mật trong lòng. Một ngày, Hye Ji đột nhiên mất tích. Bà Gye Choon tìm mọi cách để tìm lại cô cháu gái duy nhất nhưng phải mất đến 12 năm họ mới gặp lại nhau. Bà Gye Choon không muốn tin vào những gì đã xảy ra trong những năm đó và liệu họ có thể quay lại cuộc sống như trước đây hay không là một dấu hỏi lớn.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednee.googlevideo.com/videoplayback?id=87a5fc21f538ebbd&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednee&ms=nxu&mv=u&pl=25&sc=yes&ei=f5_ZXM6YHbGL8gPr66LYBA&susc=ph&app=fife&mime=video/mp4&dur=6810.296&lmt=1552668743836755&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773215&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=58FB488DC127F0C34F143D1F000E60DF571F3CEE9D15FBA207CEE7A31668D881.49BF1BDF3D84A9F30DCC7E71BC0A744A5A1DF727160ED526D7B3374A33574B4F&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5e6nl7.googlevideo.com/videoplayback?id=87a5fc21f538ebbd&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nl7&ms=nxu&mv=u&pl=25&sc=yes&ei=f5_ZXOSuKJmR1wLfn5GgBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6810.296&lmt=1552672070044718&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773215&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=2A131F464DD106EA0DCF385EAE4F7620315E0182123E8DB1CE3AE76ACE06FF1E.766197CC664DC5443F681C5DD8973F4BE166EB49FE85A4B48FD7626FA1859240&key=us0#f720p","default":true}]},{"name":"Thợ Săn Linh Hồn","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tho-san-linh-hon_10562/xem-phim/"},"nameOrigin":"The Soul Hunter","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftho-san-linh-hon-the-soul-hunter-2017.jpg%3Fsize%3D300"},"directors":["Thẩm Dục Kiệt"],"actors":["Văn Trác","Lâu Giai Duyệt","Trương Khánh Khánh"],"genres":["Phim Hành Động","Phim Viễn Tưởng"],"countries":["Trung Quốc"],"duration":60,"desc":"Phim Thợ Săn Linh Hồn / The Soul Hunter :Trong giới pháp thuật, anh chàng Tô Dương được biết đến là một “Thợ Săn Linh Hồn” vì sự tinh thông thuật thiên địa hơn người. Sau khi đến kim thành , anh bị cuốn vào hàng loạt chuyện thần bí. Bằng cách vận dụng sở trường kỹ năng âm dương ngũ hành vốn có, liệu anh có đủ sức chống lại thế lực ma quỷ, vạch trần sự thật.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednsd.googlevideo.com/videoplayback?id=1950ee6055b258b8&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsd&ms=nxu&mv=u&pl=25&sc=yes&ei=f5_ZXJahOYuP1wKslpqYCA&susc=ph&app=fife&mime=video/mp4&dur=3883.212&lmt=1552334020272517&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773216&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=26B172E38001B0C4B6F789E2B3F1B7D9B8286CA486174244A0F20CFF656421CA.C85F59C7EE3965999DC4468871B825FACC93CF915AB8905FA29D52C14E2FD0D5&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5e6nz7.googlevideo.com/videoplayback?id=1950ee6055b258b8&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nz7&ms=nxu&mv=u&pl=25&sc=yes&ei=gJ_ZXMWAA7GL8gPr66LYBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=3883.212&lmt=1552335697749044&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773216&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=1C8BA8FDA11CD5A7693B4E652BAC8427F8AC58901CECFC6DA0B1521452309782.C26CF99A5FD3412A114A5E63065012E8186ABB3C27454ED12BD5081C537C7C93&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r3---sn-4g5ednsd.googlevideo.com/videoplayback?id=1950ee6055b258b8&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsd&ms=nxu&mv=u&pl=25&sc=yes&ei=gJ_ZXKHUBcnF1gL-mYdw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=3883.212&lmt=1552335797479284&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773216&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=AEA0922ADB27AAF71D3CF5208B32B4C894932ECE04C263896C34189C031211A5.3B79085B1C7C8C6C7CCC91F5B45BD4937CE83C0D901D4364C44772A5FC78E677&key=us0#f1080p","default":true}]},{"name":"Tiên Cá Đi Học","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tien-ca-di-hoc_10587/xem-phim/"},"nameOrigin":"She's From Another Planet","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftien-ca-di-hoc-shes-from-another-planet-2016.jpg%3Fsize%3D300"},"directors":["Lâm Vân Tường"],"actors":["Trâu Dương","Văn Trác","Tào Hi Nguyệt"],"genres":["Phim Hài Hước","Phim Tâm Lý","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":100,"desc":"Phim Tiên Cá Đi Học / She's From Another Planet Vì ham chơi mà cô gái Sunny bị trôi dạt lên đất liền , nhưng may mắn được Amy và Tề Tề cứu giúp . Để tìm được đường về nhà Sunny phải theo chân 2 cô bạn mới quen đến trường học tiếp cận cậu nam sinh đang giữ miếng vảy cá – vật giúp cô trở về biển khơi. Từ đây, Sunny vướng vào rắc rối và đối đầu với hiểm nguy rình rập quanh mình.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5ednll.googlevideo.com/videoplayback?id=98e91e07cf0da940&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednll&ms=nxu&mv=u&pl=25&sc=yes&ei=gJ_ZXPfIEMby1gKk_62QCg&susc=ph&app=fife&mime=video/mp4&dur=6019.912&lmt=1552353604417449&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773216&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=447CEDFB51656FCCFE1EEB1B6EEADFD3681047658DD8EE88C66A8CC51577613C.E42D02A34A88EC45ACD37B72376AC1BC36359100A28B5E7D6FACE5898FF9961C&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r5---sn-4g5e6nsy.googlevideo.com/videoplayback?id=98e91e07cf0da940&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsy&ms=nxu&mv=u&pl=25&sc=yes&ei=gJ_ZXNi8Gc-R8gPliLj4DQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6019.912&lmt=1552356532462665&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773216&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=7151C45BB318E1AAA62A01208B24D421AC468FE217D4901AD241CFA76888982F.64B421535F9E962674DD77E1EA450BCB6E02D6D5DF957F7FB67439E9FB6BF115&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r5---sn-4g5e6nsy.googlevideo.com/videoplayback?id=98e91e07cf0da940&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsy&ms=nxu&mv=u&pl=25&sc=yes&ei=gJ_ZXLv7H5bg1wK2oo-ACg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6019.912&lmt=1552356626774122&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773216&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=369B4F341C232E161B37ED33B7039FEAB70A8C08DDF1AEE32FFE69A53A6957F4.3745EA15E58AF397C76234A93ADE46706EBDD3A0C627C7FFA28936E7EEE60702&key=us0#f1080p","default":true}]},{"name":"Thiên Tài Bất Hảo","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/thien-tai-bat-hao_10475/xem-phim/"},"nameOrigin":"Bad Genius","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fthien-tai-bat-hao-bad-genius-2017.jpg%3Fsize%3D300"},"directors":["Nattawut Poonpiriya"],"actors":["Chanon Santinatornkul","Eisaya Hosuwan","Teeradon Supapunpinyo"],"genres":["Phim Hài Hước","Phim Tâm Lý"],"countries":["Thái Lan"],"duration":130,"desc":"phim Thiên Tài Bất Hảo / Bad Genius kể về Lynn một sinh viên thiên tài,cô nhận được một nhiệm vụ dẫn cô tới Sydney, Australia để hoàn thành bài kiểm tra với giá trị hàng triệu Baht.Lynn và người bạn cùng lớp phải hoàn thành kỳ thi STIC quốc tế (SAT) và trả lời lại cho bạn bè của mình ở Thái Lan trước khi kỳ thi diễn ra một lần nữa ở quê nhà.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednsz.googlevideo.com/videoplayback?id=03e376b71cd62df6&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsz&ms=nxu&mv=u&pl=25&sc=yes&ei=FZvZXIfyFpnY1wLIyaLwBA&susc=ph&app=fife&mime=video/mp4&dur=7793.081&lmt=1555491569308257&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772085&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=B8D8AF4091BC8901E3352253EDBB22D7025B093FDBDFDF808056A78BB1C26C0C.24EE366B72E29B0A16099297A13D353BAE0D3CCA8F5D653A02DF33FD5F32A23D&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5ednsz.googlevideo.com/videoplayback?id=03e376b71cd62df6&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsz&ms=nxu&mv=u&pl=25&sc=yes&ei=FZvZXPOHG5bg1wK2oo-ACg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7793.081&lmt=1555498053022665&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772085&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=34DD9B6902C7788551F05EE20FDFCD2B95F3A4A93A7BFD78B324A1ED1CA8AAD0.AF93C824756B18640C91B67F39511B6E7731C2A5CEB3BF3DEF3E381A13392943&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r3---sn-4g5ednsz.googlevideo.com/videoplayback?id=03e376b71cd62df6&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsz&ms=nxu&mv=u&pl=25&sc=yes&ei=FZvZXOu5HsKt8gOsnpT4Bg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7793.081&lmt=1555498115015001&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772085&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=DA0613C306CD136493FA78406ADA3CE256FCF85FFEB5B23BD9F7AD5F795A3B93.1C7283A48E0381C99E526CB9377E21E7B1A15230BE240775D7DBC42E80CAB2E5&key=us0#f1080p","default":true}]},{"name":"Mẹ Ơi! Bố Đâu Rồi?","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/me-oi-bo-dau-roi_10519/xem-phim/"},"nameOrigin":"Making Family","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fme-oi-bo-dau-roi-making-family-2016.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Lý Trị Đình"],"genres":["Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":99,"desc":"phim Mẹ Ơi! Bố Đâu Rồi? / Making Family kể về một phụ nữ thành đạt, quyết định sống độc thân và sinh con bằng phương pháp thụ tinh nhân tạo. Khi cậu bé lớn lên luôn có một ước mơ đơn giản là tìm gặp bố ruột.Một ngày, cậu bé bí mật rời Hàn Quốc và thực hiện chuyến đi tìm bố ở Trung Quốc. Tại đây, cậu bé gặp một người đàn ông đẹp trai, thành đạt và chưa bao giờ có hứng thú với việc lập gia đình. Khi người mẹ đến Trung Quốc tìm con, cậu bé đã tìm mọi cách cho hai người trở thành một cặp. Liệu nhiệm vụ của cậu bé có thành công?","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5e6nsd.googlevideo.com/videoplayback?id=8d1bd9b5d221a3f0&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsd&ms=nxu&mv=u&pl=25&sc=yes&ei=hZ_ZXI2nKZWt8gPf6bXIBg&susc=ph&app=fife&mime=video/mp4&dur=5978.975&lmt=1552388266959700&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773221&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=1A17D95AF25CDC8A2E9CD5CBF396825C22E39AC5F41D01B1774F3D5E14D6F963.093BC9E99F3CDDF015C1A7FAF331907FE627137FFF30E911B6D35624AB360C37&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5ednse.googlevideo.com/videoplayback?id=8d1bd9b5d221a3f0&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednse&ms=nxu&mv=u&pl=25&sc=yes&ei=hZ_ZXKKRMMeA1wL10ruYCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5978.975&lmt=1552390046004465&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773221&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=932351AD72FD08FD4DD4687A88D87712A0D20C72992CD4ACA649A1F30D437BE6.7B8D71EBA47868C6BFAF23C88CF8E1FD8BE095C10F1947E0931DBBAAB405F0B3&key=us0#f720p","default":true}]},{"name":"Bạn Trai Robot","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ban-trai-robot_10515/xem-phim/"},"nameOrigin":"The Machine Boyfriend","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fban-trai-robot-the-machine-boyfriend-2017.jpg%3Fsize%3D300"},"directors":["Sài Sở Nhiên"],"actors":["Hàn Chí Thạc","Thái Điệp","Triệu Uy Lâm"],"genres":["Phim Hài Hước","Phim Tâm Lý","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Hồng Kong"],"duration":83,"desc":"phim Bạn Trai Robot / The Machine Boyfriend trong lúc tự tử vì tình, bỗng 1 anh chàng rô-bốt trần như nhộng từ đâu rơi xuống cứu cô nàng Tân Tư Á thoát chết. Vì xuyên không gặp trục trặc nên anh ta tạm sống chung vpows cô kèm điều kiện phải thực hiện nhưng yêu cầu cô đưa ra. 2 người nảy sinh tình cảm đồng thời anh chàng rô-bốt ấy biết được vì sao mình đặt chân đến đây.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5ednz7.googlevideo.com/videoplayback?id=35128d609b4aa9f9&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednz7&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=hZ_ZXPv2LYKC8gOPhZOwDQ&susc=ph&app=fife&mime=video/mp4&dur=5017.785&lmt=1551315568976450&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773221&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=CCBF65A317B90027A5A0D75AFB37B834E453E82188FC4C6DF98C2251455CEC37.B12A5E09DC5721711982FDE60027F3B488DF328E465ABDF7741383946B7725&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r5---sn-4g5e6n76.googlevideo.com/videoplayback?id=35128d609b4aa9f9&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6n76&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=hZ_ZXMygNYqk8gPW1pCgCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5017.785&lmt=1551317789064677&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773221&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=A1DB21B6AC0CBB977C0F6BCE763DE21835FCA6C4FC00C77D189B8AFCCD5EB536.1D0772FD159EA2FC2057B0577513E0B88ED6D34DC2FE46A3012BF509726894BF&key=us0#f720p","default":true}]},{"name":"Thor: Tận Thế Ragnarok","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/thor-tan-the-ragnarok_10446/xem-phim/"},"nameOrigin":"Thor: Ragnarok","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fthor-tan-the-ragnarok-thor-ragnarok-2017.jpg%3Fsize%3D300"},"directors":["Taiki Waititi"],"actors":["Chris Hemsworth","Mark Ruffalo","Idris Elba","Tom Hiddleston","Cate Blanchett","Anthony Hopkins","Karl Urban","Tessa Thompson","Jeff Goldblum"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":150,"desc":"Phim Thor: Tận Thế Ragnarok / Thor: Ragnarok Ở bên kia vũ trụ, Thor phải bước vào một cuộc chiến đầy khốc liệt với đối thủ mà anh sẽ gặp là một đồng đội cũ đến từ biệt đội Avenger – Hulk. Cuộc tìm kiếm sự sống còn của Thor khiến anh phải chạy đua với thời gian để ngăn chặn Hela tiêu diệt cả thế giới anh đang sống cùng nền văn minh Asgard.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5e6nss.googlevideo.com/videoplayback?id=b689a62bf09a61b6&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nss&ms=nxu&mv=u&pl=25&sc=yes&ei=J5fZXOyuHcvJ1wL45ongCA&susc=ph&app=fife&mime=video/mp4&dur=7237.102&lmt=1552659505061028&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771079&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=059651BD8E2004EA2686FDE97E559895A52EBB6CC1CEA5A704EF8AE874F0BC99.443D341C3522BC39A6C6258CC581C5AA40F9ECEE20D7725877F84D429972FDE5&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5edn7z.googlevideo.com/videoplayback?id=b689a62bf09a61b6&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7z&ms=nxu&mv=u&pl=25&sc=yes&ei=J5fZXI3hIs2j8gOgkJagBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7237.102&lmt=1552663314172293&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771079&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=8C451781C761081FB1145D22FEDD0D3E5B1D4F729ED51157BD4F6120713D0843.B3AB1C22C8F4F3F6A92FD9CE2D3487D5FB9B1CE38EBFA406F1DD0FE18C593431&key=us0#f720p","default":true}]},{"name":"Tam Giới Kỳ Hiệp Truyện","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tam-gioi-ky-hiep-truyen_10443/xem-phim/"},"nameOrigin":"San Jie Qi Xia Zhuan","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftam-gioi-ky-hiep-truyen-san-jie-qi-xia-zhuan-2017.jpg%3Fsize%3D300"},"directors":["Tiêu Dương"],"actors":["Lưu Dương","Bành Ngu Khư","Chu Giai Hi"],"genres":["Phim Cổ Trang","Phim Thần Thoại","Phim Võ Thuật","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":72,"desc":"Phim Tam Giới Kỳ Hiệp Truyện kể về Giang vạn An, Lăng Duyệt và Đại Tráng bất ngờ xuyên không vào trò chơi “Thần Võ 2” qua viên đá Huyền Cơ. Bước vào thế giới mới, họ được xem như các “Hiệp Khách Tam Giới” với sứ mệnh đánh bại tộc Cửu Lê, ổn định trật tự Tam Giới. Đồng thời, phải tiềm được bảo vật thượng cổ thì mới có thể quay về.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednsy.googlevideo.com/videoplayback?id=adaceb27f4ec8818&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsy&ms=nxu&mv=u&pl=25&sc=yes&ei=jZ_ZXOTTHJG01wKllZHoCA&susc=ph&app=fife&mime=video/mp4&dur=4362.704&lmt=1552684581315544&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773229&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=105A2002DC3B86EF746DAC46C89CECAF12EA489257B2FC15EA1F9B390DE74DF2.E3F38D02AF9DFA68173DAA3FAC3C317498524903CF3E24BC14636AF5605FE402&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5ednsy.googlevideo.com/videoplayback?id=adaceb27f4ec8818&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsy&ms=nxu&mv=u&pl=25&sc=yes&ei=jZ_ZXISXJM-R8gPliLj4DQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4362.704&lmt=1552688492438396&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773229&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=1E88BED5B003F6BC6DDBD51B4E33A7D2EC9B5747421055E4042D4258AD5992A4.C6D7488DA4C0FCE981A6016EA41DD8E04D50F6D45210FDD9D3613F27BA622C6C&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r4---sn-4g5ednsy.googlevideo.com/videoplayback?id=adaceb27f4ec8818&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsy&ms=nxu&mv=u&pl=25&sc=yes&ei=jZ_ZXKTCKpnY1wLIyaLwBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4362.704&lmt=1552688566705046&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773229&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=B7A1F8313594089DDC82F0694794DB3DEA9D7DD91A66A2349BE629960D7C4B45.835AF1D0B1F497A22AC9C7458408EB3CDCFD14CDA94B829D71616AA74B12C3A8&key=us0#f1080p","default":true}]},{"name":"Bố Tướng Con Binh","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/bo-tuong-con-binh_10439/xem-phim/"},"nameOrigin":"Father and Son","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbo-tuong-con-binh-father-and-son-2017.jpg%3Fsize%3D300"},"directors":["Viên Vệ Đông"],"actors":["Nhậm Đạt Hoa","Đại Bằng","Kiều Sam","Phạm Vĩ"],"genres":["Phim Hài Hước"],"countries":["Trung Quốc"],"duration":105,"desc":"Phim Bố Tướng Con Binh / Father and Son luôn mong muốn lập nghiệp để đổi đời, Tiểu Binh chẳng những không thành công mà còn nợ nần khắp nói, là 1 kẻ thất bại điển hình. Khi bị anh Ok – ông chủ cho vay nặng lãi xiết nợ, Tiểu Binh bất đắc dĩ bày ra 1 kế để kiếm tiền., đó là làm tang lễ giả cho bố mình- người luôn là cái bóng ” anh hùng” anh ko thể vượt qua.","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5ednek.googlevideo.com/videoplayback?id=8e4dad2322b858cb&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednek&ms=nxu&mv=u&pl=25&sc=yes&ei=jZ_ZXN_WJoHA8gOosrGwCA&susc=ph&app=fife&mime=video/mp4&dur=6345.502&lmt=1552411627634216&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773229&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=A03DBC7129A1F2BBBB3B49FCF4AC13A57B6733FC5C3B3632BB6D6DDE28C51ABD.2B23886856D8E514CF00E046462471168C39C99CB7D00C753D884C53C1BD789F&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6nze.googlevideo.com/videoplayback?id=8e4dad2322b858cb&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nze&ms=nxu&mv=u&pl=25&sc=yes&ei=jZ_ZXPWRKfmY8gP-1IS4Cg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6345.502&lmt=1552928845394525&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773229&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=B48FAA0569200C2E27BD17ABB99B3E1A1CCB499C891579E11C8112E4050F90D5.EC3CD68FAF69CB2FD238E4DDD5F79B714B794E7A0AEFD67B45EE6C2830C42D89&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r2---sn-4g5ednek.googlevideo.com/videoplayback?id=8e4dad2322b858cb&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednek&ms=nxu&mv=u&pl=25&sc=yes&ei=jZ_ZXJmbNcSD8gPjka6oAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6345.502&lmt=1552928956934492&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773229&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=D868A0B9535D1952CD16A46B5B4A93B06DDA01A9C59A7F95BEA500A3B7629C10.56E04FD8684940463C6647B517669BD2BDFDA47C1E259574B23908B475DB9058&key=us0#f1080p","default":true}]},{"name":"Vết Bớt Tai Ương","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/vet-bot-tai-uong_10440/xem-phim/"},"nameOrigin":"Disc Fairy","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fvet-bot-tai-uong-disc-fairy-2017.jpg%3Fsize%3D300"},"directors":["Cao Dục Tân"],"actors":["Minh Tuấn Thần","Quách Nhược Hàn","Y Na"],"genres":["Phim Hài Hước","Phim Kinh Dị"],"countries":["Trung Quốc"],"duration":87,"desc":"Phim Vết Bớt Tai Ương / Disc Fairy Một nhóm sinh viên thời dân quốc đến căn cổ của cậu bạn Phó Khải ở trên núi chơi. Vào ở ko lâu nhóm bạn phát hiện ngôi nhà cổ có nhiều bí mật ghê rợn. Họ quyết định chơi Điệp Tiên để giải đáp những tò mò của mình. Nhưng rồi tai họa ập đến khi từng người bị giết chết 1 cách bí ản.","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5e6n76.googlevideo.com/videoplayback?id=4339d09f00beee5c&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6n76&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=jZ_ZXMC1J4mu1wLbmqqYDA&susc=ph&app=fife&mime=video/mp4&dur=5235.078&lmt=1551325137438054&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773229&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=4D46A2500F0BD156D366253A057CE231B78F0179E75D19F193A780427A40699D.4D605E5C1BE6EA8FE05F670BB6ED855A367F2130B36E7F3289530632FF880805&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6n76.googlevideo.com/videoplayback?id=4339d09f00beee5c&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6n76&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=jZ_ZXIWEMImu1wLbmqqYDA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5235.078&lmt=1551522315762991&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773229&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=4634D7142FEDDDAC56538F9BD6982B3438E057504BBA3E45B9B9681B9CF31752.3E69D6654748465C217C4A9F0ED311A3D34F94E4903AD5B68A53571FA47E9149&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r2---sn-4g5e6n76.googlevideo.com/videoplayback?id=4339d09f00beee5c&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6n76&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=jZ_ZXK_8N4-T8gP_uZzIAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5235.078&lmt=1551522270696956&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773229&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=634C3E8B9A1CF9B751EB5EAF048D6DBED934669AFA9E5A6F17C4C4B293001975.DC9593C43C5EF4D5DF1C9F84B619D0AAEF663319FFB6381BA21052FAEF60556A&key=us0#f1080p","default":true}]},{"name":"Chân Ái Vô Song","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/chan-ai-vo-song_10414/xem-phim/"},"nameOrigin":"Almost Perfect Love Actually","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fchan-ai-vo-song-almost-perfect-love-actually-2017.jpg%3Fsize%3D300"},"directors":["Cao Phi"],"actors":["Đường Vũ Triết","Trương Ngữ Cách","Thanh Ngọc Văn"],"genres":["Phim Cổ Trang","Phim Hài Hước","Phim Tâm Lý"],"countries":["Trung Quốc"],"duration":102,"desc":"Phim Chân Ái Vô Song Bộ / Almost Perfect Love Actually  kể về Phi Yên bỏ mặc chức tước quan chỉ huy 3000 ngự lâm quân, 1 lòng theo đại sư hàng ma Đế Thích Thiên học đạo với mong muốn diệt trừ yêu ma bảo vệ bách tính. Oái oăm thay chàng học mãi mà ko bắt được con yêu quái nào cho đến khi gặp được mỹ nữ Nhiếp Thanh Trần , một đặc vệ bí mật với pháp lực cao cường.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5e6nsk.googlevideo.com/videoplayback?id=cf428a126a1e1942&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsk&ms=nxu&mv=u&pl=25&sc=yes&ei=jp_ZXOQaia7XAtuaqpgM&susc=ph&app=fife&mime=video/mp4&dur=6120.571&lmt=1552337208304873&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773230&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=5636E83D1E4A6CADB5071994AA4F35348EE6AE242A18F0C3E900EF723592B068.D8732EC0C25AABDEA3D197F363278D4C9945A6A6450F0B51F59373554216EA8B&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5edns6.googlevideo.com/videoplayback?id=cf428a126a1e1942&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns6&ms=nxu&mv=u&pl=25&sc=yes&ei=jp_ZXIS3CK2S8gOI07awBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6120.571&lmt=1552340365285265&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773230&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=1AEB299771921BAD8C755AA96EB49DD3B953F30AC89571EB2EC9E222BD5F8C1C.2C288AB2C5855A7A61869C0C5758B924054312B5126A55107BBD5CCCAB4F27E6&key=us0#f720p","default":true}]},{"name":"Ông Hoàng Tốc Độ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ong-hoang-toc-do_10372/xem-phim/"},"nameOrigin":"The King of the Drift","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fong-hoang-toc-do-the-king-of-the-drift-2017.jpg%3Fsize%3D300"},"directors":["Viên Thước"],"actors":["An Hổ","Mộc Lam","Trương Giác"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":92,"desc":"Phim Ông Hoàng Tốc Độ / The King of the Drift kể về Anh chàng lái taxi Tần Hạo trong 1 lần phô diễn kỹ thuật lái xe cực đỉnh mà được đổi CDF thu nhận. Trước cuộc thi đua xe sắp diễn ra cộng thêm lời thách đấu của đối thủ – đội xe TNT- các thành viên trong đội xe CDF đã ra sức bồi dưỡng kỹ thuật drift xe thần thánh cho Tần Hạo nhưng lại gặp phải sự ngăn cản của bố anh.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5e6nez.googlevideo.com/videoplayback?id=f05e7066bc44a32c&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nez&ms=nxu&mv=u&pl=25&sc=yes&ei=kp_ZXKqDDNPI8gOtnJDoCg&susc=ph&app=fife&mime=video/mp4&dur=5539.050&lmt=1551203135292039&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773234&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=4EC44CB563E88EDCF24246F520498ED87241CF096ED6A1A1AD3E8277F6C64CFA.6D665E8E907D47E377F03CDA3210145A2A034451092EF7A5D9C5AA294E1B505B&key=us0#f360p","default":true}]},{"name":"Sát Phá Lang 3: Tham Lang","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/sat-pha-lang-3-tham-lang_10371/xem-phim/"},"nameOrigin":"SPL III: Paradox","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fsat-pha-lang-3-tham-lang-spl-iii-paradox-2017.jpg%3Fsize%3D300"},"directors":["Diệp Vỹ"],"actors":["Cổ Thiên Lạc","Tony jaa","Ngô Việt","Đặng Lệ Hân"],"genres":["Phim Hành Động","Phim Võ Thuật","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":101,"desc":"Phim Sát Phá Lang 3: Tham Lang / Paradox ra mắt tại Trung Quốc vào giữa tháng 8 vừa qua. Nội dung phim xoay quanh câu chuyện truy tìm và trả thù kẻ bắt cóc con của Lee (Cổ Thiên Lạc). Trong quá trình sang Thái Lan tìm kiếm con gái mình, Lee còn phát hiện ra bí mật liên quan đến ứng cử viên thị trưởng của Bangkok.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednll.googlevideo.com/videoplayback?id=982ef3d975f055df&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednll&ms=nxu&mv=u&pl=25&sc=yes&ei=LpfZXLaRLJWt8gPf6bXIBg&susc=ph&app=fife&mime=video/mp4&dur=6028.875&lmt=1552205802901835&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771086&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=28A1CDC39B6F3AB8C7392EA1013D1B9D92DA6327863AAF114D129AFD2A98D2E1.90328C872589ACD75F093B6EE809A28BDCFBE8888A721521453B533FA11EE9FC&key=us0#f360p","default":true}]},{"name":"Thích Khách Phong Lưu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/thich-khach-phong-luu_10360/xem-phim/"},"nameOrigin":"Romantic Assassin","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fthich-khach-phong-luu-romantic-assassin-2017.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Trần Hổ","Vương Tiểu Nghị","Chu Giai Hi"],"genres":["Phim Cổ Trang","Phim Hài Hước","Phim Võ Thuật","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":68,"desc":"Phim Thích Khách Phong Lưu / Romantic Assassin sát thủ Lâm Hổ nhận lệnh truy sát Châu Nhị. Trên đường đi tìm mục tiêu của mình, anh nhìn thấy người đẹp Thẩm Dung bị Vương phủ truy đuổi nên liền ra tay giúp dỡ. Trớ trêu thay, vì nhầm lẫn mà cô lại nghĩ Châu Nhị là ân nhân cứu mạng. Cứ như thế nhiều tình huống dở khóc dở cười xảy ra cuốn họ vào nhiều rắc rối.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5e6nzz.googlevideo.com/videoplayback?id=8171530cd55f3967&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzz&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=kp_ZXK3FLpmR1wLfn5GgBA&susc=ph&app=fife&mime=video/mp4&dur=4125.071&lmt=1551248207654566&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773234&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=DA5FC5F6E9221BFC0F7B07AC374C11D95B73EA230073AC122EDC697B9D134184.06419BB3D9CF6C549D63BC5A4932C3EDFD67DF1FD60ACC9F3AB62082597563E1&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5e6nzz.googlevideo.com/videoplayback?id=8171530cd55f3967&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzz&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=kp_ZXOCxM9LM1wLQyZz4Bg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4125.071&lmt=1552227997483069&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773234&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=26265871F6AF4A118284FC5B573FBFD60DACD04298BE0EB24E0FACB4A55E822E.1163CECFB07CD1D73184D0791F88A16B34A3E5C4E6DECABA6D32F64823ECEA0D&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r1---sn-4g5e6nzz.googlevideo.com/videoplayback?id=8171530cd55f3967&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzz&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=kp_ZXOHTN5rj1wLHyrjYAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4125.071&lmt=1552228072081270&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773234&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=C19981E2325C56FD175216937B686E8B83F9655259343463672AF26043275681.DB678BED53FD587477CCA1566182FBBB597A95B1F56A590877E841D0AF4EA661&key=us0#f1080p","default":true}]},{"name":"Cô Cảnh Sát Bướng Bỉnh","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/co-canh-sat-buong-binh_10347/xem-phim/"},"nameOrigin":"Bad Cop 2","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fco-canh-sat-buong-binh-bad-cop-2-2016.jpg%3Fsize%3D300"},"directors":["Giang Khải"],"actors":["Lý Manh Manh","Trâu Dương","Văn Trác"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":80,"desc":"Phim Cô Cảnh Sát Bướng Bỉnh / Bad Cop 2: nữ cảnh sát trẻ tài năng nhưng ương ngạnh Dương Dương được giao nhiệm vụ đóng giả nữ sinh cấp 3 để điều tra sự mất tích của 2 học sinh tại ngôi trường này đồng thời bảo vệ thấy giáo Ngô Tà nhân chứng trong 1 vụ kiện.","embeds":[{"resolution":360,"embedUrl":"https://hls.hydrax.net/7UAqLip3Rbj2SAnjOyLYVzRtViIPD3nY7SexLqOtLUIqLm/0/playlist.m3u8#f720","default":true}]},{"name":"Tình Yêu Không Khoảng Cách","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tinh-yeu-khong-khoang-cach_10392/xem-phim/"},"nameOrigin":"Love Without Distance","year":"2015","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftinh-yeu-khong-khoang-cach-love-without-distance-2015.jpg%3Fsize%3D300"},"directors":["Lâm Ái Hoa"],"actors":["Mã Thiên Vũ","Lý Thạnh","Diêu Tinh Đồng","Ngô Trấn Vũ","Châu Vi Đồng"],"genres":["Phim Tâm Lý"],"countries":["Trung Quốc"],"duration":103,"desc":"Tình Yêu Không Khoảng Cách /Love Without Distance kể về Thổ hào Trần (Ngô Trấn Vũ đóng) là thương nhân đã trải qua quá trình phấn đấu lận đận và đã thành công, lúc anh ấy quyết định kết hôn với bạn gái là Triệu Tiểu Vy (Diêu Tinh Đồng đóng), được bác sĩ cho biết anh ấy bị mắc bệnh nan y, anh ấy đã giấu Tiểu Vy về căn bệnh của mình và bắt đầu lo nghĩ cho cuộc đời của mình.Thổ hào Trần vì để hoàn thành di nguyên trước lúc lâm chung của mình, đã đến Ý một mình. Anh ấy cảm thấy bản thân nhất định phải làm một chuyện chấn động thế giới trước khi chết, nhất định phải để xí nghiệp của mình vang danh, nhưng hoàn cảnh văn hóa khác nhau là gây ra hàng loạt hiểu nhầm và truyện cười ra nước mắt khi thổ hào Trần ở nước ngoài... Tiểu Vy lúc đó đã điều tra ra sự thật, đến Ý tìm thổ hào Trần để nói với anh biết, bệnh nan y của anh ấy chỉ là chẩn đoán nhầm! Thời gian đó đã làm thay đổi lớn cuộc đời của thổ hào Trần: Công ty sắp phá sản, bạn bè bày mưu hãm hại. Thổ hào Trần như sống lại trong cuộc sống đầy biến động, cuối cùng có được một tình yêu tốt đẹp và tình bạn của chân thành của những người bạn thân.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5edns6.googlevideo.com/videoplayback?id=95b68ec6613133e8&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns6&ms=nxu&mv=u&pl=25&sc=yes&ei=k5_ZXN2fJcqc8gOd5ai4Bw&susc=ph&app=fife&mime=video/mp4&dur=6133.945&lmt=1551371847421493&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773235&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=16C7330A63CAB8F79C6BE9050E1C57403E42C2C3C90D4754B3926D0116D39C61.2D7A6EEEBD6D7F18C73650FF2AD3AE8EC8878278CBBC377894CB32968964315E&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5edns6.googlevideo.com/videoplayback?id=95b68ec6613133e8&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns6&ms=nxu&mv=u&pl=25&sc=yes&ei=k5_ZXO7cJ7GL8gPr66LYBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6133.945&lmt=1552065072889224&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773235&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=E0ED55C374D4C68326A8C4D2933DDFCEA7434B4670CC7B72526E3F09E86188A7.AE1DF91DCB1AEA3B09E81374E9AEFCAE03CBFD53EF219ACD574FA2DE6E289EB5&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r4---sn-4g5e6nzz.googlevideo.com/videoplayback?id=95b68ec6613133e8&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzz&ms=nxu&mv=u&pl=25&sc=yes&ei=k5_ZXKmIMcKt8gOsnpT4Bg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6133.945&lmt=1552064978935319&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773235&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=31356D338397B2BA9F5F406B099EC524984636D9E3359E9C62452020B9988446.25CB5D53371F2E9CD57EBD225FDE5EF512138A573B4CA66B78C6B4911AC79F99&key=us0#f1080p","default":true}]},{"name":"Hàng Long Đại Sư","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/hang-long-dai-su_10293/xem-phim/"},"nameOrigin":"Thợ Săn Rồng / Dragon Hunter","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fhang-long-dai-su-tho-san-rong-dragon-hunter-2017.jpg%3Fsize%3D300"},"directors":["Hạng Thu Lương"],"actors":["Châu Tử Long","Hà Văn Huy","Nhạc Đông Phong"],"genres":["Phim Cổ Trang","Phim Thần Thoại","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":85,"desc":"Phim Hàng Long Đại Sư / Thợ Săn Rồng / Dragon Hunter thuật lại câu truyện yêu quái đột ngột kéo đến đe dọa chúng sinh, hòa thượng Lý Tu Duyên được giao trọng trách đi tìm Lạc Sắc đại sư để giúp đỡ. Trên đường đi anh gặp hồ ly Tiểu Cứu và từ đó anh biết thân phận thật của mình là Hàng Long La Hán chuyển thế.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5e6nsy.googlevideo.com/videoplayback?id=5cd267ea971957c2&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsy&ms=nxu&mv=u&pl=25&sc=yes&ei=NZfZXKzkFZiJ1wL0yIXQDA&susc=ph&app=fife&mime=video/mp4&dur=5143.010&lmt=1552701150687747&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771093&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=75A32BB846EA0CFAF39CDCA8AA01B2E639276C3F3570B87A791FBEC99E943B7B.EA7CED0924AB588E3702122370E652BC63A3463153EAC6B0BBF57F0E484AFDF5&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5e6nsy.googlevideo.com/videoplayback?id=5cd267ea971957c2&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsy&ms=nxu&mv=u&pl=25&sc=yes&ei=NZfZXOb_Hc6k8gOH6qlg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5143.010&lmt=1552703111171802&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771093&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=3D8310FBE44D14EBF5932FBC3F75ED76AF54DF01DAE2A18072508E36C4F4F716.4ACBCE5E18756750715D26F6B23A3426FD2E2D893679A878DCB1B6F74A607C28&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r1---sn-4g5e6nsy.googlevideo.com/videoplayback?id=5cd267ea971957c2&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsy&ms=nxu&mv=u&pl=25&sc=yes&ei=NZfZXOK_IIuv1wLzkojIBQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5143.010&lmt=1552703309606161&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771093&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=1C4AABB229F3596698A68144C12AC88428BBF45299F7E7F57D4F19E73349D350.0229CB67B02382FC360BBBF13907204AFAD87CAC38CAFE008237D1A801D978D3&key=us0#f1080p","default":true}]},{"name":"Nghịch Lộ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/nghich-lo_10294/xem-phim/"},"nameOrigin":"Wrong Way Driving","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fnghich-lo-wrong-way-driving-2017.jpg%3Fsize%3D300"},"directors":["Diêm Học Khai"],"actors":["Hỏa Tịnh Nam","Phan Gia Tuấn","Vương Uy"],"genres":["Phim Hành Động","Phim Hài Hước","Phim Hình Sự","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":96,"desc":"Phim Nghịch Lộ / Wrong Way Driving: Con gái của triệu phú Trương Chí Quốc bị bắt cóc đồi tiền chuộc, nhưng nhà tài phiệt lại không giám báo cảnh sát. Tuy nhiên, phía cảnh sát vẫn phát hiện được và lên kế hoạch kỹ càng, âm thầm giải cứu cô gái. Quá trình truy lùng bọn bắt cóc gặp phải nhiều khó khăn khi đối phương quá thông minh và xảo nguyệt.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5e6nz7.googlevideo.com/videoplayback?id=e68993330b644ab7&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nz7&ms=nxu&mv=u&pl=25&sc=yes&ei=oJzZXOSKHs-R8gPliLj4DQ&susc=ph&app=fife&mime=video/mp4&dur=5798.487&lmt=1552651089094702&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772480&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=52305EF95EE00F1CD7EB8D3E0185C5347DFECCBA423546782CA4584F0458CA93.36F538343D37962E71558C4C314A44F21EDDD36ADF1761CD0726F62180DE79F2&key=us0#f360p","default":true}]},{"name":"Bí Quả (Bản Điện Ảnh)","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/bi-qua-ban-dien-anh_10310/xem-phim/"},"nameOrigin":"Secret Fruit","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbi-qua-ban-dien-anh-secret-fruit-2017.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Âu Dương Na Na","Trần Phi Vũ","Âu Thành Hàng","Trâu Nguyên Thanh"],"genres":["Phim Tâm Lý"],"countries":["Trung Quốc"],"duration":99,"desc":"Phim Bí Quả ( Bản Điện Ảnh) / Secret Fruit tiếp tục trở lại màn ảnh Hoa Ngữ qua bản điện ảnh. Lần này, hai nhân vật chính Đoàn Bách Văn và Vu Trì Tử do Âu Dương Na Na cùng nam diễn viên Trần Phi Vũ thủ vai. Phim xoay quanh chàng trai 17 tuổi Đoàn Bách Văn. Cậu mồ côi mẹ từ nhỏ và thường xuyên bị bà mẹ kế bạo hành. Đoàn Bách Văn có một bí mật không thể chia sẻ cho ai.Đó là cậu đem lòng yêu đơn phương cô giáo Lý Nhị – người mà theo cậu, vừa trẻ, vừa xinh lại tốt bụng. Thế nhưng, Bách Văn không hề biết rằng, cô bạn Vu Trì Tử cũng có tình cảm với cậu – và đó là bí mật của cô ấy.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5edn7l.googlevideo.com/videoplayback?id=83c2f3e119b300ab&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7l&ms=nxu&mv=u&pl=25&sc=yes&ei=l5_ZXNigMZvJ8gP8mKfYBw&susc=ph&app=fife&mime=video/mp4&dur=5946.003&lmt=1552504298553714&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773239&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=1008F1F6F1F952D9D3E6B6FB1AB16D4E9049DE84EDE52ADE131F850E60483212.8B4CD0D9424CD53263483F201980C6230C39D3CF04461445F7059AD282DD390C&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5edn7l.googlevideo.com/videoplayback?id=83c2f3e119b300ab&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7l&ms=nxu&mv=u&pl=25&sc=yes&ei=l5_ZXJu6N9CJ1wLo47_YAw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5946.003&lmt=1552508757625949&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773239&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=3F771EF5F024905BC7D1C84141288F43EB3905A09A211D658DA0F711605940E2.1BFD1F03D5133D78315AE8DA7FC14F60B15E7FDF17AD7B4D670726D9E6219368&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r1---sn-4g5edn7l.googlevideo.com/videoplayback?id=83c2f3e119b300ab&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7l&ms=nxu&mv=u&pl=25&sc=yes&ei=l5_ZXJ_sOayj8gODuIrIBQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5946.003&lmt=1552508521698753&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773239&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=1E1EB914D84D2416F8617D0F4BB90AE7BCDAFA38A42947BD499F09CED7D7DDEB.0EEECF9EF3A81D173289786B141C6D6A64D0CBEA6087439638580A489FEFFD07&key=us0#f1080p","default":true}]},{"name":"Vương Gia Bá Đạo","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/vuong-gia-ba-dao_10332/xem-phim/"},"nameOrigin":"The Super Royal Highness","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fvuong-gia-ba-dao-the-super-royal-highness-2017.jpg%3Fsize%3D300"},"directors":["Vương Bình Nguyên"],"actors":["Dịch Bách Thần","Thượng Tư Kỳ","Vinh Khuê"],"genres":["Phim Cổ Trang","Phim Hài Hước","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":95,"desc":"Phim Vương Gia Bá Đạo / The Super Royal Highness kể về trong một lần được mỹ nhân cứu mạng, Ninh vương liền đem lòng yêu nàng say đắm. Thế nhưng, tiểu mỹ nhân lại vô cùng sợ con người, liên tục né tránh sự theo đuổi của vương gia. Sau khi biết được thân phận của người trong mộng, chàng trốn khỏi hoàng cung, bất chấp nguy hiểm cải trang thành yêu quái đến yêu giới tìm nàng.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5edns6.googlevideo.com/videoplayback?id=1b83af60dccf91da&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns6&ms=nxu&mv=u&pl=25&sc=yes&ei=mJ_ZXISRDpnY1wLIyaLwBA&susc=ph&app=fife&mime=video/mp4&dur=5713.571&lmt=1552343548972013&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773240&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=74D687AF7DE4221B59058F2F835A90B097406FE12CC02B29B01C8082A0E01EFA.11642ECD39B049B1C84AB652D1314A12EC3739E120FDEB346D035362F7B650F8&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5edns6.googlevideo.com/videoplayback?id=1b83af60dccf91da&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns6&ms=nxu&mv=u&pl=25&sc=yes&ei=mJ_ZXOfcENLM1wLQyZz4Bg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5713.571&lmt=1552351544053589&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773240&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=99343316E5811BEECB1F13E68ABF060099A46699F986871ACED5483F59A70762.4F484B7394278B2ED613B8DC5C372DB3728DF419A4583D707EA7A5CEBDF81AAA&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r1---sn-4g5e6ne6.googlevideo.com/videoplayback?id=1b83af60dccf91da&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ne6&ms=nxu&mv=u&pl=25&sc=yes&ei=mJ_ZXOT-EoHA8gOosrGwCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5713.571&lmt=1552351613017736&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773240&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=76E3D4200E83F6D740541DAE35233006A594EDC48CDC91C16A9E5B00F9548490.C82E7DD0402F772BA226F824E2B7846067247E08FCF9689891B8CE72D576C6B3&key=us0#f1080p","default":true}]},{"name":"Sát Nhân Gunther","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/sat-nhan-gunther_10268/xem-phim/"},"nameOrigin":"Killing Gunther","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fsat-nhan-gunther-killing-gunther-2017.jpg%3Fsize%3D300"},"directors":["Taran Killam"],"actors":["Arnold Schwarzenegger","Allison Tolman","Bobby Moynihan","Cobie Smulders","Hannah Simone","Taran Killam"],"genres":["Phim Hành Động","Phim Hài Hước","Phim Phiêu Lưu"],"countries":["Mỹ"],"duration":92,"desc":"Phim Sát Nhân Gunther / Killing Gunther kể về một nhóm sát nhân lập dị đang chán ngấy với Gunther, kẻ sát nhân vĩ đại nhất thế giới, và quyết định giết ông, nhưng kế hoạch của họ đã biến thành một loạt các cuộc đụng độ vớ vẩn bởi Gunther dường như luôn đi trước một bước.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/b9a0dc6e86f9cfb77104ab4527ab73bf/b9a0dc6e86f9cfb77104ab4527ab73bf.playlist.m3u8","default":true}]},{"name":"Trộm Đồ Của Kẻ Cắp","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/trom-do-cua-ke-cap_10212/xem-phim/"},"nameOrigin":"To Steal from a Thief","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftrom-do-cua-ke-cap-to-steal-from-a-thief-2016.jpg%3Fsize%3D300"},"directors":["Daniel Calparsoro"],"actors":["Luis Tosar","Raúl Arévalo","Rodrigo De la Serna"],"genres":["Phim Hành Động","Phim Phiêu Lưu"],"countries":["Mỹ"],"duration":96,"desc":"Phim Trộm Của Kẻ Cắp bắt đầu từ một băng cướp được cầm đầu bởi một người đàn ông tên là El Uruguayo đã lén một ngân hàng ở Valencia để ăn cắp nhiều hộp an toàn nhất có thể và sau đó chạy trốn qua một đường hầm đào để kết nối tòa nhà với một ga tàu điện ngầm bị bỏ rơi.Tuy nhiên, nhân viên báo chí của Thủ tướng Chính phủ phát hiện ra những việc mà bọn trộm thực sự đã làm sau đó: họ muốn đưa tay vào hộp 314, tài sản của Gonzalo Soriano, cựu thành viên của chính phủ đã rơi vào tình trạng hôn mê sau tai nạn nghiêm trọng. Với thông tin thỏa hiệp. Kế hoạch hành động của băng cướp bắt đầu trở nên mất kiểm soát khi mà mưa to bất chợt đã khiến cho đường hầm bị ngập, nó khiến cho những thành viên trong băng không thể thoát ra ngoài, và phát hiện ra rằng chiếc hộp thực sự không có chứa tài liệu, nhưng có một ổ cứng gắn ngoài chứa dữ liệu về những cái tên quan trọng ở tất cả các cấp trong chính phủ của Tây Ban Nha. Đồng thời, một người cố vấn của chính phủ nhận nhiệm vụ đảm nhận việc kiểm soát các cuộc đàm phán, tìm kiếm để thu hồi chiếc hộp 314 cũng như những thông tin mật bằng bất cứ giá nào trước khi bọn cướp chạy trốn.","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5e6nsz.googlevideo.com/videoplayback?id=b3482b17ad815a32&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsz&ms=nxu&mv=u&pl=25&sc=yes&ei=n5_ZXMaVINCJ1wLo47_YAw&susc=ph&app=fife&mime=video/mp4&dur=5820.058&lmt=1551381168259725&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773247&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=666D6FC6C69532850EFCB7BD54629396AE8B29DF4C44B73D6F895D6AB2C1688F.11C57B0E68BE8C374FEB3986ECB8EAC08FA0EB155244A334B9AC70A8E9B0DC1A&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6nsz.googlevideo.com/videoplayback?id=b3482b17ad815a32&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsz&ms=nxu&mv=u&pl=25&sc=yes&ei=n5_ZXLu4Isqc8gOd5ai4Bw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5820.058&lmt=1551384672835650&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773247&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=5E1450D1BFC07DFEE911DB9844B60E1D1B8CC1B5AA3134B216175888D1BB18CB.93D84CE3019343C9CE90CB23F5461A6CB66B1D98548E65F49B9EB953C3EE14A5&key=us0#f720p","default":true}]},{"name":"Hội Pháp Sư (Phần 2): Nước Mắt Rồng","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/hoi-phap-su-phan-2-nuoc-mat-rong_10184/xem-phim/"},"nameOrigin":"Fairy Tail Movie 2: Dragon Cry","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fhoi-phap-su-phan-2-nuoc-mat-rong-fairy-tail-movie-2-dragon-cry-2016.jpg%3Fsize%3D300"},"directors":["Tatsuma Minamikawa"],"actors":["Aya Hirano","Mai Nakahara","Yûichi Nakamura","Wataru Hatano","Yui Horie"],"genres":["Phim Hành Động","Phim Hài Hước","Phim Hoạt Hình"],"countries":["Nhật Bản"],"duration":85,"desc":"Phim Hội Pháp Sư (Phần 2): Nước Mắt Rồng( Fairy Tail Movie 2: Dragon Cry ) 2017​ sau khi hội nghị lần thứ 25 năm nay của Weekly Shounen Magazine của Kodansha thông báo rằng một bộ phim hoạt hình thứ hai của Hiro MashimaFairy Tail manga đã được bật đèn xanh.Tạp chí này được ra mắt nghệ thuật imageboard rằng Mashima mình vẽ cho bộ phim. Vấn đề sắp tới cũng được xuất bản hai chương của manga","embeds":[{"resolution":360,"embedUrl":"https://redirector.googlevideo.com/videoplayback?id=17d851c499619577&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-i3b7kn7k&ms=nxu&mv=u&pl=48&sc=yes&ei=QJfZXK_yEInx4QLA87TACQ&susc=ph&app=fife&mime=video/mp4&dur=5101.307&lmt=1557253127226964&mt=1557763685&ipbits=0&keepalive=yes&ratebypass=yes&ip=2400:6540:0:ffff:0:25ff:fe0e:d07d&expire=1557771104&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=D9339F7989F40E916DD186BE0F67FD59B55E0248163128DFEEF4120D529E8AF5.189C1E4A84E4E76FC861AE00D15562747B245CAD79DC843501DF943138BAB997&key=us0","default":true},{"resolution":720,"embedUrl":"https://redirector.googlevideo.com/videoplayback?id=17d851c499619577&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-i3beln7s&ms=nxu&mv=u&pl=48&sc=yes&ei=QZfZXLa-Gpa04QL0yJrIDA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5101.307&lmt=1557254595185584&mt=1557763685&ipbits=0&keepalive=yes&ratebypass=yes&ip=2400:6540:0:ffff:0:25ff:fe0e:d07d&expire=1557771105&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=E9C3B7AF85CBE65AA6A07441EA9F7E568D21463D1D774A6132D53F2BF86F052B.58FB9CAE814CF6F78533315633208BA0AEE60A358D460E26104F7843A2294CEA&key=us0","default":true}]},{"name":"Đại Chiến Hành Tinh Khỉ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/dai-chien-hanh-tinh-khi_10155/xem-phim/"},"nameOrigin":"War for the Planet of the Apes","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fdai-chien-hanh-tinh-khi-war-for-the-planet-of-the-apes-2017.jpg%3Fsize%3D300"},"directors":["Matt Reeves"],"actors":["Woody Harrelson","Steve Zahn","Terry Notary","Andy Serkis","Karin Konoval","Amiah Miller"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":100,"desc":"Phim Đại Chiến Hành Tinh Khỉ (War for Planet of the Apes) 2017 phần phim thứ 3 và cũng là cuối cùng của trilogy Planet of the Apes. Tiếp nối phần trước, sau khi quân đội biết sự tồn tại của xã hội loài khỉ dưới sự chỉ huy của Caesar, họ quyết định đến chiến đấu chống lại Caesar, nhóm lính được dẫn đầu bởi một vị tướng tàn bạo.Về phần vị vua khỉ của chúng ta, sau những mất mát của mình, anh ta dần trở nên đen tối hơn, có những suy nghĩ độc đoán hơn về con người và cách thống lĩnh của mình. Số phận của hai giống loài này phụ thuộc vào cuộc chiến cuối cùng này!","embeds":[{"resolution":360,"embedUrl":"https://3.bp.blogspot.com/K9O9ZnI9ig3wX2BHje1To14xE-95txxbjU1RNmQAVFM6_X5TSCjn2qdY7XJdf8lG0BptwypHWNYi6eW4uTZeQXNYi12gbHUdBWyaPW4RBLCF_fDqbtJt8tc6URay6KlTDaVHa3P9jw=m18","default":true},{"resolution":720,"embedUrl":"https://3.bp.blogspot.com/K9O9ZnI9ig3wX2BHje1To14xE-95txxbjU1RNmQAVFM6_X5TSCjn2qdY7XJdf8lG0BptwypHWNYi6eW4uTZeQXNYi12gbHUdBWyaPW4RBLCF_fDqbtJt8tc6URay6KlTDaVHa3P9jw=m22","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/war-for-the-planet-of-the-apes-2017/1"},{"name":"Robot Đại Chiến 5: Chiến Binh Cuối Cùng","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/robot-dai-chien-5-chien-binh-cuoi-cung_10105/xem-phim/"},"nameOrigin":"Transformers 5: The Last Knight","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Frobot-dai-chien-5-chien-binh-cuoi-cung-transformers-5-the-last-knight-2017.jpg%3Fsize%3D300"},"directors":["Michael Bay"],"actors":["Mark Wahlberg","Isabela Moner","Peter Cullen"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":120,"desc":"Phim Transformers 5 (2017): Phần tiếp theo về robot biến hình ăn khách. \"Chiến Binh Cuối Cùng\" phá nát những huyền thoại cốt lõi của loạt phim Transformers, và tái định nghĩa thế nào là anh hùng. Con người và các Transformer đang có chiến tranh, Optimus Prime đã biến mất.Chìa khóa để cứu tương lai của chúng ta đang được chôn vùi trong những bí mật của quá khứ, trong lịch sử ẩn còn được giữ kín của các Transformer trên Trái Đất. Trách nhiệm cứu thế giới đè lên vai của một đồng minh đặc biệt: Cade Yeager, người máy Bumblebee, một quý tộc Anh, và một Giáo sư đại học Oxford Trong đời ai cũng có khoảnh khắc chúng ta được chọn để tạo nên sự khác biệt. Trong Transformer: Chiến Binh Cuối Cùng, kẻ ác trở thành anh hùng. Anh hùng sẽ trở thành kẻ thủ ác. Chỉ một thế giới được tồn tại: của họ, hoặc của chúng ta.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5e6nz7.googlevideo.com/videoplayback?id=e70d7381cf884199&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nz7&ms=nxu&mv=u&pl=25&sc=yes&ei=wpzZXNmyAcqc8gOd5ai4Bw&susc=ph&app=fife&mime=video/mp4&dur=8788.102&lmt=1552700276976508&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772514&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=88370BCB6B28F1BF88DF892C5ED9EDF7AD5BE52EC7A72BB0B2D1DAF018BE0DBD.0D1264FF3511F8B89AD5DA3FA8C0E3765AA417714ADE33E1EE7E1A565A7739B9&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5e6nz7.googlevideo.com/videoplayback?id=e70d7381cf884199&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nz7&ms=nxu&mv=u&pl=25&sc=yes&ei=wpzZXPjbCJG01wKllZHoCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=8788.102&lmt=1552873676320568&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772514&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=4571E2E69BB2CE0B3449F9FEC8209FEC80479ADB0C988849ED88DAAD1237D25D.BEC28462607C8A65EA02667CABFDEC71E9130C5EF0CBCB2E5E0ED96D01616F5C&key=us0#f720p","default":true}]},{"name":"Sóng Dữ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/song-du_10088/xem-phim/"},"nameOrigin":"Shock Wave","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fsong-du-shock-wave-2017.jpg%3Fsize%3D300"},"directors":["Khưu Lễ Đào"],"actors":["Lưu Đức Hoa","Ngô Trác Hy","Liêu Khải Trí"],"genres":["Phim Hành Động","Phim Hình Sự"],"countries":["Trung Quốc"],"duration":119,"desc":"Cheung Zoi-shan 1 chuyên viên cao cấp của Cục Xử lí vật nổ – Cảnh sát Hồng Kông, đã có 7 năm hoạt động bí mật trong băng đảng của trùm tội phạm bị truy nã gắt gao Crank. Cheung đã thành công trong việc phá án băng đảng và bắt giữ vài tên cướp trong đó có Biu, em trai của Cranky. Tuy nhiên, Cranky vẫn ở ngoài vòng pháp luật và hắn thề sẽ quay lại để trả thù.7 năm trôi qua và Cranky bắt đầu triển khai kế hoạch của mình – một loạt các vụ đánh bom khiến cho người dân Hồng Kông sống trong sợ hãi. Để duy trì luật pháp và an ninh xã hội, Cheung buộc phải khống chế được Cranky và ông sẵn sàng hy sinh cả tính mạng của mình để đương đầu với cuộc chiến chống lại kẻ đánh bom tàn nhẫn.","embeds":[{"resolution":360,"embedUrl":"https://r6---sn-4g5edne7.googlevideo.com/videoplayback?id=e43ade2d9f6902ad&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edne7&ms=nxu&mv=u&pl=25&sc=yes&ei=q5_ZXNvLLcqc8gOd5ai4Bw&susc=ph&app=fife&mime=video/mp4&dur=7190.407&lmt=1552791510495697&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773259&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=1901ED57EB28898FA2B8179A6304E8716EA57B558D44425E0D1D7FA61FA529EE.112A82D5FD19134BA503C4CE337F7CD38D7791B5A8F2CFB2E2F066271ED03ED8&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5e6ne6.googlevideo.com/videoplayback?id=e43ade2d9f6902ad&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ne6&ms=nxu&mv=u&pl=25&sc=yes&ei=q5_ZXJ_ZMNCJ1wLo47_YAw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7190.407&lmt=1552793559522213&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773259&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=5ABFA8B22526C0F9AC213666DE71F66A7DE1E5ABF0B5FDF24C9736FC7E76180D.42FD973092C176902B8CF53F08AEE45EC05A8EF9E5C66E3D167997560584B72A&key=us0#f720p","default":true}]},{"name":"Thợ Săn Thời Gian","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tho-san-thoi-gian_10087/xem-phim/"},"nameOrigin":"Timing Raven","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftho-san-thoi-gian-timing-raven-2017.jpg%3Fsize%3D300"},"directors":["Lưu Gia Lương"],"actors":["Chu Giai Hi","Ngô Đông Ni","Vương Dã"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Khoa học Tài liệu","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":72,"desc":"Phim Thợ Săn Thời Gian Timing Raven 2 cô gái quyến rũ của đội hành động đặc biệt gồm Thu Mạt và La Lạp, một người bị thương một người thi mất không rõ khi đang thực hiện nhiệm vụ. Trong lúc tìm kiếm tung tích La Lạp, họ phát hiện một nhóm người đang thử nghiệm cổ máy điều chỉnh thời gian nhằm biến thời gian thành một món hàng đổi chác, trục lợi.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5ednsk.googlevideo.com/videoplayback?id=533788d9076966a3&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsk&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=q5_ZXNLDN4KC8gOPhZOwDQ&susc=ph&app=fife&mime=video/mp4&dur=4707.474&lmt=1551224332094173&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773259&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=72B23DB2D7E73525A8D733CB69D46A150A605723B0512D8E7AAED5D983E68C28.B34C88A20D8E22DEF4C97ACCD16A2C1519727CBCECAF7DAB7F5CCBF3C26D5E59&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5ednsk.googlevideo.com/videoplayback?id=533788d9076966a3&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsk&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=q5_ZXL74OdKZ8gOw9qWABg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4707.474&lmt=1551225847919635&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773259&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=66F981938CC91EEC7C6E491493E31CCFE95507D7AF52777025C08593A92B89C9.EC5575BB7AE1C6967E1EDAD3AA4C43FB6F878B0FED5D70F9E07A75A5F85982A6&key=us0#f720p","default":true}]},{"name":"Cao Thủ Thái Cực Quyền","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cao-thu-thai-cuc-quyen_10060/xem-phim/"},"nameOrigin":"Tai Chi Pioneer","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcao-thu-thai-cuc-quyen-tai-chi-pioneer-2016.jpg%3Fsize%3D300"},"directors":["Sha Xuezhou"],"actors":["Sha Xuezhou","Zheng Shuang"],"genres":["Phim Võ Thuật","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":98,"desc":"Phim Cao Thủ Thái Cực Quyền Tai Chi Pioneer kể về Liễu Mục Phàm – một cao thủ thái cực quyền mở võ quán truyền dạy võ công với mong muốn giúp đỡ những người yếu đuối đòi lại công bằng, nêu cao tinh thần thượng võ. Thế nhưng các thế lực xấu xa liên tục tìm đến võ quán của anh gây sự khiến Mục Phàm và các đệ tử bị cuốn vào rắc rối. Liệu chính nghĩa có chiến thắng?","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednsk.googlevideo.com/videoplayback?id=934e6b88a6181926&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsk&ms=nxu&mv=u&pl=25&sc=yes&ei=SZfZXIDzHcby1gKk_62QCg&susc=ph&app=fife&mime=video/mp4&dur=5871.908&lmt=1551300380788351&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771113&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=B705C2764878E7706E019B130E3E60B22339948DC76D0D8542070DE3D524173A.CA7D49905B7FA4667DAB0FA691F43F56E2AA582F56ACD9F0439E550530605B83&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5ednsk.googlevideo.com/videoplayback?id=934e6b88a6181926&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsk&ms=nxu&mv=u&pl=25&sc=yes&ei=SZfZXPrAIMvJ1wL45ongCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5871.908&lmt=1551305773672885&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771113&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=8144D143DD3BB62FADE064D04E666878A44255FB264F2CF6445BD8A630B74D8A.E5FB281A5F391DBA13EBC47E0CB5D5B1AD60D4D69F8447473DBF41F539BCC14C&key=us0#f720p","default":true}]},{"name":"Thế Giới Người Máy","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/the-gioi-nguoi-may_10008/xem-phim/"},"nameOrigin":"Blame! Movie","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fthe-gioi-nguoi-may-blame-movie-2017.jpg%3Fsize%3D300"},"directors":["Hiroyuki Seshita"],"actors":["Kana Hanazawa","Takahiro Sakurai","Sora Amamiya"],"genres":["Phim Hành Động","Phim Hoạt Hình","Phim Viễn Tưởng"],"countries":["Nhật Bản"],"duration":106,"desc":"Trong tương lai công nghệ cao, nền văn minh nhân loại gắn liền với Internet – bước tiến tối thượng của con người. Trong quá khứ, một loại “bệnh truyền nhiễm” đã lây lan làm sập các hệ thống tự động, dẫn đến việc xuất hiện cấu trúc thành phố đa-tầng liên tục nhân bản vô hạn. Giờ đây, nhân loại đã mất kết nối với bộ phận điều khiển thành phố, và con người hiện đang bị hệ thống phòng ngự (gọi là Bộ Phận Bảo An) săn đuổi và tiêu diệt.Trong một góc phố nhỏ bé của thành phố, một vùng đất nhỏ mang tên Electro-Fishers hiện đang đứng trước sự diệt vong hoàn toàn khi bị bao vây bởi Bộ Phận Bảo An và sự đe dọa của nạn đói. Cô gái Zuru bắt đầu cuộc hành trình tìm thức ăn cho ngôi làng nhỏ của mình. Nhưng cô đã nhanh chóng đối diện với cái chết khi tòa tháp quan sát đã phát hiện ra cô và gửi Bộ Phận Bảo An đến để xóa sổ cô. Tất cả các cộng sự đã bị diệt sạch, và mọi lối thoát đều đã bị chặn. May thay, kẻ lang thang Killy đã xuất hiện giải cứu Zuru. Họ bắt đầu công cuộc đi tìm gene Net Terminal – chiếc chìa khóa khôi phục lại trật tự thế giới.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5e6nze.googlevideo.com/videoplayback?id=fb1924780ae32a9d&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nze&ms=nxu&mv=u&pl=25&sc=yes&ei=s5_ZXIfNO8by1gKk_62QCg&susc=ph&app=fife&mime=video/mp4&dur=6333.451&lmt=1552815489229232&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773267&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=2513B62B82461A39637E45FCA244DA83017A7E46094AED72EFCCD2AD6938CD3A.DBE0B1634E9D20D8E9753C24A69C3AC1988DE173D0F99A95C10D622705634F52&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5ednsl.googlevideo.com/videoplayback?id=fb1924780ae32a9d&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsl&ms=nxu&mv=u&pl=25&sc=yes&ei=tJ_ZXJJy-ZjyA_7UhLgK&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6333.451&lmt=1552817929376807&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773268&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=890EAAA59778F443E6FA68E95F79D52CA98AEAFE3DFC7B711E7086764EDAA6D4.84E3E5AE885ACC5CCA8DD74ABA2A5A66DDA41B546B033D85BB03E81219DAD5A8&key=us0#f720p","default":true}]},{"name":"Ba Chàng Ngự Lâm 3","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ba-chang-ngu-lam-3_5657/xem-phim/"},"nameOrigin":"The Hangover 3","year":"2013","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fba-chang-ngu-lam-3-the-hangover-3-2013.jpg%3Fsize%3D300"},"directors":["Todd Phillips"],"actors":["Bradley Cooper","Ed Helms","Zach Galifianakis"],"genres":["Phim Hài Hước"],"countries":["Mỹ"],"duration":100,"desc":"Cuộc hành trình đầy tiếng cười nhưng cũng gay cấn không kém của bộ ba thân thiết bao gồm nha sĩ Stu (Ed Helms), chàng giáo viên điển trai (Bradley Cooper) Phil và chàng béo ngốc nghếch hay gây chuyện Alan (Zach Galifianakis) sẽ được tiếp tục. Bối cảnh câu chuyện diễn ra ở Las Vegas – thành phố được mệnh danh dành cho những trò vui bất tận và Tijuana (Mexico). Khác với mọi khi, lần này sẽ không có đám cưới, cũng chẳng có tiệc độc thân, nhưng những chuyện rắc rối vẫn có thể xảy đến chứ? Và khi “đàn sói” lên đường thì chắc chắn là có chuyện chẳng lành.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5ednsl.googlevideo.com/videoplayback?id=6615d242c111c64f&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsl&ms=nxu&mv=u&pl=25&sc=yes&ei=GqfZXJWuFpnY1wLIyaLwBA&susc=ph&app=fife&mime=video/mp4&dur=6008.209&lmt=1552526340138587&mt=1557767420&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557775162&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=288C4CC8F0C5C9FE1ECCE40C0567C3F299C5A30A35057965C26239AF9C3C20EA.BA2E1235A93C9A76A8EB83076D75AAC730A49ABE9310376A4B9985828654A09E&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r5---sn-4g5e6nzz.googlevideo.com/videoplayback?id=6615d242c111c64f&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzz&ms=nxu&mv=u&pl=25&sc=yes&ei=GqfZXIz1GKSK8gOIx6ngAg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6008.209&lmt=1552528306199026&mt=1557767420&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557775162&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=4157214E01C04C8CB0AA0DD6B8C7CDBC4CF960477804FDC08A9FD09EDAB9A826.92E46521D4832F54C2FDAC318A23ACB088B27A22CE04BED124DE137D0B56AB86&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r5---sn-4g5ednsl.googlevideo.com/videoplayback?id=6615d242c111c64f&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsl&ms=nxu&mv=u&pl=25&sc=yes&ei=GqfZXImrG4KC8gOPhZOwDQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6008.209&lmt=1552528458350737&mt=1557767420&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557775162&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=CBD7BEF26CA31A8BAD6B14DE8A99292E685FC7492C7FADBCD93BA56BB34D230F.3C0E095C874423FBC9E03411AAF119BB5E4B44BC65706C008C27E3C81B6042A8&key=us0#f1080p","default":true}]},{"name":"Tình Dục Là Chuyện Nhỏ Phần 1","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tinh-duc-la-chuyen-nho-phan-1_5445/xem-phim/"},"nameOrigin":"Sex Is Zero Phần 1","year":"2002","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftinh-duc-la-chuyen-nho-phan-1-sex-is-zero-phan-1-2003.jpg%3Fsize%3D300"},"directors":["Je-gyun Yun"],"actors":["Chang Jung Lim","Ji won Ha","Seong guk Choi"],"genres":["Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Hàn Quốc"],"duration":96,"desc":"Phim nói về môi trường sinh viên với bệnh “thèm sex” thấm sâu trong từng  người, đặc biệt là cánh mày râu. Các chàng thường tìm đĩa sex về xem và  “tự sướng”, hoặc đêm hôm dòm ngó các phòng để tìm cảm giác kích thích.  Bệnh hoạn hơn, có người kiếm một con búp bê lớn để làm tình như người  thật…Trong bối cảnh ấy, chàng trai 28 tuổi Eun-shik (Lim Chang Jung) vừa chân ướt chân ráo bước vào trường đại học. Eun-shik vừa giải ngũ sau khi  hoàn thành nghĩa vụ quân sự. Anh là thành viên của nhóm Cha Ryu và  thường xuyên tập luyện với nhóm này, bất chấp những đau đớn mà anh phải  chịu đựng. Một ngày nọ, anh gặp cô bạn Lee Eun-hyo xinh đẹp (Ha Ji Won),  một vận động viên nổi tiếng của môn aerobic. Cô nàng sở hữu một bộ ngực  nõn nà và thân hình ngon mắt khiến Eun-shik không lúc nào rời mắt khỏi  nàng.Nhưng người mà Eun-hyo thầm thương trộm nhớ lại là anh chàng người  hùng của trường, Sung-ok. Từ đó, Eun-shik chỉ còn biết đứng ngoài nhìn  bóng hồng của mình rơi vào vòng tay của anh chàng bảnh trai kia. Các anh bạn cùng phòng của Eun-shik cũng bắt đầu để ý những cô bạn gái  của Eun-hyo và tìm mọi cách “lên giường” với cô này như một chiến tích  tình trường.Trong khi đó “anh bạn già” Eun-shik có vẻ không gặp may mắn  trong việc giành tình cảm của người khác phái. Cuộc sống với anh vì thế  cũng không dễ dàng gì. Có lần anh chàng còn bị Eun-hyo “cao gối” trong  lần “sàm sỡ” với cô nàng trên xe buýt. Kết quả là Eun-hyo phải đưa  Eun-shik vào viện dưỡng thương. Eun-shik còn dính líu vào không ít những trò nhất quỷ nhì ma của đám bạn  cùng phòng. Thậm chí trong một lần tự tìm cảm giác bằng cách xem phim  sex, anh đã bị Eun-hyo bắt gặp trong sự bẽ bàng…Anh chàng tìm cách  chuồn qua cửa sổ tránh sự dị nghị của dư luận thì lại gặp hai cậu bạn  đang trèo qua hết cửa sổ này đến cửa sổ khác để nhòm vào phòng bạn bè  “xem sex trực tiếp”. Mấy cô bạn gái tai quái tình cờ nhìn thấy và gọi  cứu hỏa. Eun-shik với chiếc quần tụt tới tận mắt cá chân đã trở thành  trò cười hết sức kệch cỡm cho toàn trường. Cơ hội đến với Eun-shik khi Eun-hyo bị anh chàng Sung-ok bỏ rơi trong  đúng ngày sinh nhật. Đau đớn hơn, Eun-hyo biết mình có thai với Sung-ok.  Song cô không thể phá thai một mình, vì thế Eun-hyo đã nhờ đến sự giúp  đỡ của Eun-shik. Lẽ dĩ nhiên, anh chăm sóc cô một cách tận tình, đặc  biệt trong lần vì thi aerobic quá sức mà Eun-hyo bị ngất xỉu, phải đi  cấp cứu…Phim  cũng là một sự đánh thức  các cô gái trẻ dễ bị sa ngã vào những lời ngọt  ngào của những tên bề  ngoài bóng bẩy nhưng bên trong thì chỉ là rác  rưởi...Eun-sik đã mắng vào  mặt tên sở khanh đó trong tiếng nấc nghẹn  ngào. Cũng giống như hai bộ phim Wet Dreams 1 và 2 của đạo diễn Jung Cho-sin,  Sex is Zero là tác phẩm điện ảnh đậm chất hài hước trẻ trung với những  khuôn hình nóng bỏng đầy sức hẫp dẫn với giới trẻ. Bộ phim cũng là bước  đệm đưa tên tuổi của nữ diễn viên Ha Ji Won trở nên nổi tiếng trong giới  showbiz Hàn Quốc..","embeds":[{"resolution":360,"embedUrl":"https://r6---sn-4g5e6ne6.googlevideo.com/videoplayback?id=505c3d0611c0f6de&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ne6&ms=nxu&mv=u&pl=25&sc=yes&ei=w53ZXNqxIpqJ1gKvwrPIDw&susc=ph&app=fife&mime=video/mp4&dur=5527.185&lmt=1554762184647822&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557772771&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=D5B9B87113C536E06953F4A552C914C28D896AEA3E9E723AB6286C3AF660C5F8.79D6624BEA5FA283421FE0B0FF880B1E6E8A808E0D6ED1598D0A933AA4860CC8&key=us0","default":false},{"resolution":720,"embedUrl":"https://r6---sn-4g5e6ne6.googlevideo.com/videoplayback?id=505c3d0611c0f6de&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ne6&ms=nxu&mv=u&pl=25&sc=yes&ei=w53ZXJa6IoOd8gOAxbGoAw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5527.185&lmt=1554764099234033&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557772771&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=5A1241A763C8C65C30B5BFDD89A48AEFE8FE52FFF34BF59A60A242F338EABD2A.20649178E511C8F24792C6768EE31EDB8E99CE448E5CA6913FCD82E0C5499FC0&key=us0","default":true}]},{"name":"Liên Minh Anh Hùng Báo Thù","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/lien-minh-anh-hung-bao-thu_5172/xem-phim/"},"nameOrigin":"Ultimate Avengers The Movie","year":"2006","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Flien-minh-anh-hung-bao-thu-ultimate-avengers-the-movie-2006.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Phim Hoạt Hình","Phim Viễn Tưởng"],"genres":[""],"countries":["Mỹ"],"duration":71,"desc":"Trong năm 1945, Captain America, người lính Mỹ tạo ra với một huyết thanh Super-Soldier, đang chiến đấu với Đức Quốc xã trong Thế chiến II, và sau khi ngăn chặn một thảm họa hạt nhân, ông chỉ rơi vào vùng nước đóng băng của Bắc Đại Tây Dương, và đông lạnh trong lơ lửng, được hồi sinh trong thế kỷ hai mươi mốt của quân đội Mỹ, những người đang hy vọng rằng họ có thể tái tạo huyết thanh trong máu của Captain America để tạo ra nhiều siêu chiến binh. Nhưng bây giờ, với thế giới phải đối mặt với cái ác rất giống nhau, Captain America phải tăng trở lại là hy vọng cuối cùng của chúng ta về sự sống còn, và lãnh đạo một nhóm ý chí mạnh mẽ của siêu anh hùng ngày nay.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5e6nsz.googlevideo.com/videoplayback?id=bc27052bd6ce869a&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsz&ms=nxu&mv=u&pl=25&sc=yes&ei=MabZXM_RM4qk8gPW1pCgCw&susc=ph&app=fife&mime=video/mp4&dur=4962.986&lmt=1554292379258080&mt=1557767420&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557774929&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=49BA76183875C22E45F5564BC78CC19100A97FBEFD3B3D727E211B555509CD89.BC213470E5EDA1FCD11E99E9391A1C3A67102C44A2CDE84520461BB82092AE2B&key=us0","default":false},{"resolution":720,"embedUrl":"https://r3---sn-4g5ednsl.googlevideo.com/videoplayback?id=7201483732dfdb11&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsl&ms=nxu&mv=u&pl=25&sc=yes&ei=MabZXNTEM4eA1gK60JEo&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4962.986&lmt=1554293000496198&mt=1557767420&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557774929&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=52E5FCB380A0866F2BF6AF1B47F455C701315C1DCBBF99C193056AC5BFA9CC18.C63DDE9402AA3C1105E8286064442BC71F5F73D046BAF85D2836EAB40CBBCF57&key=us0","default":true}]},{"name":"Bất Khả Xâm Phạm","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/bat-kha-xam-pham_4979/xem-phim/"},"nameOrigin":"Unbreakable","year":"2000","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbat-kha-xam-pham-unbreakable-2001.jpg%3Fsize%3D300"},"directors":["M. Night Shyamalan"],"actors":["Bruce Willis","Samuel L. Jackson","Robin Wright"],"genres":["Phim Hành Động","Phim Tâm Lý","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":106,"desc":"Dunn là người sống sót duy nhất sau một tai nạn xe lửa thảm khốc. Tất cả hành khách trên chuyến xe lửa đều tử nạn, riêng anh trở về không một vết xây xước. Và anh gặp một con người kỳ lạ, sự ám ảnh của con người đó khiến anh phát hiện ra một bí mật liên quan đến chính con người anh và điều đó đã khiến cuộc đời anh thay đổi mãi mãi. Phim hơi có màu sắc kì bí, mang lại cảm giác hồi hộp và căng thẳng từ đầu đến cuối.","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5edn7e.googlevideo.com/videoplayback?id=b34e5b6aaf51eafb&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7e&ms=nxu&mv=u&pl=25&sc=yes&ei=Ip3ZXOqrEaSK8gOIx6ngAg&susc=ph&app=fife&mime=video/mp4&dur=6399.558&lmt=1552703216513828&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772610&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=BB44DD143AF929D739A9047A50D92F136352633A5D8285E87BBC8DD5ED9E04A2.BB1BF46FEC896F863FBCA515E45B62979558BD45AC9BE2B52F8263AEEFA09659&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5edn7e.googlevideo.com/videoplayback?id=b34e5b6aaf51eafb&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7e&ms=nxu&mv=u&pl=25&sc=yes&ei=Ip3ZXLX6FYqk8gPW1pCgCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6399.558&lmt=1552705125487535&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772610&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=E2C4008ED28F6269209C5C237AF32D75523F87559331524BE4841066CF75FD6D.5ADAF536BAD161F33D8E0853F9A05E4FE8D0AC4F8E776DDCDFA02AE142609F0B&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r2---sn-4g5e6nes.googlevideo.com/videoplayback?id=b34e5b6aaf51eafb&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nes&ms=nxu&mv=u&pl=25&sc=yes&ei=Ip3ZXLL8Ga2S8gOI07awBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6399.558&lmt=1552705118581377&mt=1557764641&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557772610&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=14BF5BDDA433BF167438210626CC85E059A5282B71F1F3B0A974BDC0AD9DDFE3.D705AEFAA9D8E1A0FF2220CD850928899ED84BC7E00B6BDA868E3DEC36629A08&key=us0#f1080p","default":true}]},{"name":"Quỷ Đỏ 1","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/quy-do-1_4950/xem-phim/"},"nameOrigin":"Hellboy 1","year":"2004","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fquy-do-1-hellboy-1-2004.jpg%3Fsize%3D300"},"directors":["Ron Perlman","John Hurt","Selma Blair"],"actors":["Phim Hành Động","Phim Phiêu Lưu"],"genres":[""],"countries":["Mỹ"],"duration":122,"desc":"","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/21745f07bc0c2a2bc1fcadd865040e37/21745f07bc0c2a2bc1fcadd865040e37.playlist.m3u8","default":true}]},{"name":"Quỷ Đỏ 2: Binh Đòan Địa Ngục","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/quy-do-2-binh-doan-dia-nguc_4951/xem-phim/"},"nameOrigin":"Hellboy 2: The Golden Army","year":"2008","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fquy-do-2-binh-doan-dia-nguc-hellboy-2-the-golden-army-2008.jpg%3Fsize%3D300"},"directors":["Ron Perlman","Selma Blair","Doug Jones"],"actors":["Phim Hành Động","Phim Phiêu Lưu"],"genres":[""],"countries":["Mỹ"],"duration":120,"desc":"Phần tiếp theo của Hellboy, do hãng Universal Picture sản xuất năm 2004, đạo diễn Guillermo Del Toro. Hellboy là một nhân vật có tướng tá dị hình, mà theo như Del Toro thì ông xây dựng nhân vật này từ 3 nhân vật khá “nổi tiếng” là Frankenstein, Dracula và Người sói.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/1dde73b4a4f03b95b00af1925fed919d/1dde73b4a4f03b95b00af1925fed919d.playlist.m3u8","default":true}]},{"name":"Má Mì Hot Girl","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ma-mi-hot-girl_4753/xem-phim/"},"nameOrigin":"Ma Mi","year":"2013","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fma-mi-hot-girl-ma-mi-2013.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Nhiều diễn viên"],"genres":["Phim Hài Hước","Phim Tâm Lý"],"countries":["Trung Quốc"],"duration":65,"desc":"","embeds":[{"resolution":360,"embedUrl":"https://content.googleapis.com/drive/v2/files/0B6T-sJ-WwxsLaWJRRzNGWW1PcGM?alt=media&key=AIzaSyBMqv4dXnTJOGQtZZS3CBjvf748QvxSzF0","default":true}]},{"name":"Bánh Mỹ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/banh-my_4446/xem-phim/"},"nameOrigin":"American Pie","year":"1999","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbanh-my-american-pie-1999.jpg%3Fsize%3D300"},"directors":["Jason Biggs","Chris Klein","Thomas Ian Nicholas"],"actors":["Phim Hài Hước","Phim Tâm Lý"],"genres":[""],"countries":["Mỹ"],"duration":98,"desc":"","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednsz.googlevideo.com/videoplayback?id=934f933647cf9830&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsz&ms=nxu&mv=u&pl=25&sc=yes&ei=JofZXPndDoqk8gPW1pCgCw&susc=ph&app=fife&mime=video/mp4&dur=6831.148&lmt=1552827259619953&mt=1557758994&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557766982&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=198FBAC1A721B2F026007BA010A4D4B1ADE32BEFD9B5C2F2470D8AAF92A2EC36.390AA9CA62EF0C4D180748F5E4A19E938436CB24F2B6CCF30A9CF8314612A364&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5ednsz.googlevideo.com/videoplayback?id=934f933647cf9830&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsz&ms=nxu&mv=u&pl=25&sc=yes&ei=JofZXIjzFJG01wKllZHoCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6831.148&lmt=1552834576515049&mt=1557758994&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557766982&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=779197A78BF71BBFFBBA9E8F6A78AEEFAF5594E9F785FE131CA954E55A2A0D21.182FE917AD2AABA0EB7F503B7F8FB0E87FA0E86C7C4DBD7C8820DF1A46082AD8&key=us0#f720p","default":true}]},{"name":"Khủng Long Đại Chiến","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/khung-long-dai-chien_4394/xem-phim/"},"nameOrigin":"Tarbosaurus 3D","year":"2012","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fkhung-long-dai-chien-tarbosaurus-3d-2012.jpg%3Fsize%3D300"},"directors":["Han Sang-Ho"],"actors":["Goo Ja Hyeong","Lee Hyung Suk","Sin Yong woo"],"genres":["Phim Hoạt Hình","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Hàn Quốc"],"duration":88,"desc":"Câu chuyện trong Tarbosaurus diễn ra ở thời điểm 80 triệu năm về trước. Lúc ấy, loài khủng long thống trị lãnh thổ Hàn Quốc cũng hệt như cách chúng tung hoành bên dưới mọi vùng trời còn lại của thế giới. Một phần lãnh địa khủng long mà bây giờ được biết đến dưới cái tên Jeonnam Yeosu là rừng “nhà” của giống loài đặc chủng: Tarbosaurus. Nhóc nhỏ tuổi nhất trong gia tộc Tarbosaurus là Đốm , một đứa trẻ hiếu động và rất tò mò. Cùng với mẹ và cặp sinh đôi, cậu bé sống hạnh phúc trong khu rừng, nhẫn nại học cách đi săn.Nhưng rồi một ngày kia tới, đánh dấu điểm khởi đầu cho hành trình trưởng thành dài đằng đẵng đầy đau khổ của Đốm. Con khủng long Tyrannosaur già xảo quyệt mang tên Một Mắt muốn tìm kiếm lãnh địa mới đã tấn công bầy Tarbosaurus. Hắn say sưa trong mùi vị chiến thắng, tận hưởng những giọt nước mắt chia ly khi cố tình bắt Đốm phải rời xa gia đình.Về phần Đốm, cậu nhóc lang thang và gặp gỡ một cô khủng long Tarbosaur lạc đàn khác. Mắt Ngọc trở thành bạn đồng hành sống còn trong suốt 2 thập kỷ và là mẹ lũ con của chính Đốm. Tuy nhiên, số phận lại một lần nữa xoay vần, những món nợ ân oán với Một Mắt chưa thể kết thúc ở đó. Những sự trả thù, cái chết, nỗi sợ hãi và đau buồn đang đón đợi Đốm ở phía trước, cũng như là hạnh phúc và hy vọng ...","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/66194035e217b50cb295ee7423365c73/66194035e217b50cb295ee7423365c73.playlist.m3u8","default":true}]},{"name":"Ngẩng Cao Đầu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ngang-cao-dau_4338/xem-phim/"},"nameOrigin":"Khi Cựu Binh Trở Về / Walking Tall","year":"2004","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fngang-cao-dau-walking-tall-2005.jpg%3Fsize%3D300"},"directors":["Kevin Bray"],"actors":["Dwayne JohnsoJohnny Knoxville"],"genres":["Phim Hành Động","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":86,"desc":"Chris Vaughn (The ROCK) là 1 binh sĩ giải ngũ, anh trở về thị trấn nhỏ quê anh để sống 1 cuộc sống mới, nhưng anh nhận ra rằng người bạn học con nhà giàu năm xưa với anh là Jay (Neal McDonough) lại là 1 tên trùm luôn làm những chuyện phạm pháp nơi thị trấn bé nhỏ ấy. Chris nhận thấy rằng quê anh giờ tràn ngập tội phạm, thuốc phiện và đầy bạo lực. Được sự giúp đỡ của người bạn cũ là Ray (Johnny Knoxville), Chris trở thành cảnh sát và anh thề rằng sẽ đưa thị trấn này trở nên bình yên như cũ. Việc anh làm đã khiến mạng sống của anh và gia đình anh trở nên nguy hiểm nhưng anh không hề bỏ cuộc chỉ vì muốn làm việc tốt cho nơi anh đã sinh ra và lớn lên...","embeds":[{"resolution":360,"embedUrl":"https://content.googleapis.com/drive/v2/files/0Bw_RYl3X9hE7bW1lTldvTVFKdjQ?alt=media&key=AIzaSyBMqv4dXnTJOGQtZZS3CBjvf748QvxSzF0","default":true}]},{"name":"Trận Chiến Thái Bình Dương","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tran-chien-thai-binh-duong_3735/xem-phim/"},"nameOrigin":"Pacific Rim","year":"2013","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftran-chien-thai-binh-duong-pacific-rim-2014.jpg%3Fsize%3D300"},"directors":["Guillermo del Toro"],"actors":["Burn GormanRon Perlman"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":114,"desc":"Mùa phim hè năm nay sẽ được kéo dài hơn khi sắp tới đây, một bom tấn về chủ đề hậu tận thế kết hợp với quái vật ngoài hành tinh sắp được ra mắt khán giả Việt.Pacific Rim – Siêu Đại Chiến - bom tấn trị giá 180 triệu USD sẽ mang đến quái vật hậu tận thế Kaiju đến màn ảnh rộng qua sự chỉ đạo tài tình của đạo diễn từng đoạt giải Oscar Guillermo del Toro.Pacific Rim là tác phẩm đặc biệt bởi khi bắt đầu được tiến hành, đạo diễn Guillermo khá kín tiếng, không hé lộ nhiều về bộ phim. Chỉ tới khi trailer đầu tiên ra mắt, người xem mới ngỡ ngàng về sự hoành tráng quy mô lớn của tác phẩm với những kỹ xảo hiệu ứng tối tân nhất.Kaiju là quái vật biển khổng lồ xuất hiện từ một kẽ nứt dưới Thái Bình Dương mang đến nỗi ác mộng cho con người. Để đánh bại Kaiju, loài người buộc phải nghĩ ra một phương án bằng việc sáng tạo nên các Jaegers - robot khổng lồ được điều khiển bởi con người.Cuộc chiến gay cấn giữa robot loài người và quái vật Kaiju diễn ra không cân sức, nhiệm vụ cuối cùng được giao cho 2 người phi công trẻ ngăn chặn thảm họa diệt vong bởi Kaiju. Guillermo del Toro  miêu tả quái vật trong phim mới của ông “là hào nhoáng và xinh đẹp” trong trận chiến hùng vĩ giữa đại dương giữa những cơn bão xoáy và dòng thác nước khổng lồ.Năm 2004 và 2008, Guillermo del Toro  mang đến hai phần phim viễn tưởng thần thoại Hellboy được khán giả đón nhận nhiệt tình. Năm 2007, với tác phẩm thần thoại Pan's Labyrinth tự mình đạo diễn và viết kịch bản, Guillermo đã đoạt giải Oscar cho Kịch bản gốc xuất sắc nhất cùng với 2 hạng mục khác.Là người có niềm đam mê với chủ đề quái vật, nhà làm phim người Mexico được nhà sản xuất khen ngợi sự nhiệt huyết khi cống hiến cho Pacific Rim, đây cũng là bộ phim đầu tiên ông bắt tay thực hiện trong vòng 5 năm qua.Xem Trận Chiến Thái Bình Dương 2","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5e6nl7.googlevideo.com/videoplayback?id=b0786cc927cae592&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nl7&ms=nxu&mv=m&pl=25&sc=yes&ei=u6DZXL1Ki4_XAqyWmpgI&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7876.905&lmt=1550299278564814&mt=1557766294&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557773531&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=4D1AE9B34CA01047E6EDA12942B49B894B93104A9D26F2CA0E1FB52E1692BDCD.199F4C9428FAFECD8450EFE7F0AE26ED5169CB207A80CBB92682FDF2CD066B72&key=us0","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6nl7.googlevideo.com/videoplayback?id=b0786cc927cae592&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nl7&ms=nxu&mv=m&pl=25&sc=yes&ei=u6DZXPZDpIryA4jHqeAC&susc=ph&app=fife&mime=video/mp4&dur=7876.905&lmt=1550288140828514&mt=1557766175&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557773531&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=5EEF73A2EFC71B358851462C971C21F6CDBA34CBE52B1975ED9F5BFA6AEC95D5.8FB760BD446B65AF793FC42F6444DCB82012CD5DC01955D235E3173BA2D130D9&key=us0","default":false}]},{"name":"Máy Xay Thịt Người","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/may-xay-thit-nguoi_3708/xem-phim/"},"nameOrigin":"Meat Grinder","year":"2009","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fmay-xay-thit-nguoi-meat-grinder-2009.jpg%3Fsize%3D300"},"directors":["Mai Charoenpura","Anuway Niwartwong","Wiradit Srimalai"],"actors":["Phim Kinh Dị"],"genres":[""],"countries":["Thái Lan"],"duration":90,"desc":"","embeds":[{"resolution":360,"embedUrl":"https://lh3.googleusercontent.com/z30KmIbPWmQdOxAb0ArvGLcP6kzNA65Ac9ECIce_j2BF_42ofibMqL4tna2lIKpq1Ko=m18","default":true}]},{"name":"Hàn Chiến","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/han-chien_3639/xem-phim/"},"nameOrigin":"Cold War","year":"2012","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fhan-chien-cold-war-2012.jpg%3Fsize%3D300"},"directors":["Lương Nhạc Dân"],"actors":["Quách Phú Thành","Lương Gia Huy","Lý Trị Đình","Bành Vu Yến","Lâm Gia Đống","Tiền Gia Lạc","An Chí Kiệt","Doãn Tử Duy"],"genres":["Phim Hành Động"],"countries":["Trung Quốc"],"duration":102,"desc":"Trung tâm báo án của Lực lượng Cảnh sát Hồng Kông đã nhận được những cuộc gọi điện thoại nặc danh, báo cáo một vụ bắt cóc tấn công 1 chiếc xe cảnh sát. Trong xe gồm 5 nhân viên cảnh sát cùng các vũ khí trang thiết bị đã trở thành con tin để bọn bắt cóc đòi tiền chuộc. Nhằm lúc Tổng trưởng cảnh sát đi công tác nước ngoài, vì vậy 2 phó tổng trưởng cảnh sát là Lý Văn Bân (Lương Gia Huy đóng) – thuộc phái diều hâu và Lưu Kiệt Huy (Quách Phú Thành đóng) được giao nhiệm vụ giải cứu con tin.Lúc đầu, Lý Văn Bân phụ trách chỉ huy, hành động giải cứu này được đặt tên là \"Hàn chiến\". Tuy nhiên, bọn bắt cóc lại nắm rất rõ tình hình của phía cảnh sát và luôn ra tay trước. Đội cảnh sát tinh nhuệ dù rất nỗ lực nhưng cũng thất bại. Mọi người bắt đầu nghi ngờ những quyết sách của Bân, sau đó bèn cử Huy tiếp nhận hành động này. Trong giờ khắc nguy cấp, 2 hổ cạnh tranh, nhưng Huy không hề e sợ. Không giống như các phương án mạnh bạo của Bân, Huy chọn cách chủ động liên lạc với bọn tội phạm, và hứa sẽ giao tiền chuộc cho chúng. Trong suốt quá trình giao tiền chuộc, Huy bố trí các manh mối để thuận tiện cho việc truy lùng thủ phạm về sau.Đáng tiếc, có kẻ cao tay hơn khiến Huy không những không tìm ra tung tích bọn bắt cóc mà còn để cho số tiền chuộc rất lớn ấy biến mất. Lực lượng Cảnh sát Hồng Kông rơi vào tình trạng nguy hiểm chưa từng có. Toàn bộ hành động giải cứu khiến ngân sách của chính phủ Hồng Kông thiệt hại 80 triệu HK$, hai sĩ quan cảnh sát hy sinh khi làm nhiệm vụ.Vụ việc làm rúng động không chỉ nội các Chính phủ mà còn Ủy ban Độc lập chống tham nhũng (ICAC), bởi ICAC đã nhận được tin báo của 1 người bí mật, nghi ngờ một trong hai phó tổng cảnh sát lạm dụng quyền lực mưu lợi riêng tư tại thời điểm quan trọng này.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5e6nzs.googlevideo.com/videoplayback?id=309d071c68e63fc4&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzs&ms=nxu&mv=u&pl=25&sc=yes&ei=yajZXOHgOpfP1wKPqJ6YAQ&susc=ph&app=fife&mime=video/mp4&dur=6119.526&lmt=1552079061198324&mt=1557767420&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557775594&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=27C22A1BA391CB7B06A77632F5960325361CE2AA06831AD79E3DD1F277BF9F7C.05E7170B96177D4CB06896B60218729BAC388569AD832716B48D2298270763C4&key=us0","default":false}]},{"name":"Kẻ Thực Thi Công Lý","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ke-thuc-thi-cong-ly_3532/xem-phim/"},"nameOrigin":"The Enforcer","year":"1976","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fke-thuc-thi-cong-ly-the-enforcer-1976.jpg%3Fsize%3D300"},"directors":["James Fargo"],"actors":["Clint Eastwood","Tyne Daly","Harry Guardino"],"genres":["Phim Hành Động"],"countries":["Mỹ"],"duration":96,"desc":"","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/874c788f1377a63bc44eb4e8b20eeebd/874c788f1377a63bc44eb4e8b20eeebd.playlist.m3u8","default":true}]},{"name":"Thám Tử Lừng Danh Alex","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tham-tu-lung-danh-alex_3527/xem-phim/"},"nameOrigin":"Alex Cross","year":"2012","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftham-tu-lung-danh-alex-cross-2012.jpg%3Fsize%3D300"},"directors":["Rob Cohen"],"actors":["Tyler Perry","Matthew Fox","Rachel Nichols"],"genres":["Phim Hành Động","Phim Hài Hước","Phim Hình Sự","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":101,"desc":"Bộ phim lấy cảm hứng từ nhân vật thám tử lừng danh “Alex Cross” trong loạt tiểu thuyết ăn khách của nhà văn trinh thám nổi tiếng James Patterson. Trong phim, Alex Cross (Tyler Perry), một nhà tâm lý học đồng thời là một thám tử tài ba từng phục vụ trong ngành cảnh sát, buộc phải vào cuộc truy tìm tên giết người hàng loạt Picasso (Matthew Fox) sau cuộc gọi nhờ giúp đỡ của người bạn thân từ thuở nhỏ Tommy Kane (Edward Burns), đồng thời là đồng nghiệp cũ trong sở cảnh sát Detroit. Hai người còn có sự đồng hành của nữ thám tử Monica Ashe (Rachel Nichols).Trong quá trình điều tra và truy tìm dấu vết của tên sát nhân, Cross nhận được lời đe dọa tính mạng người thân trong gia đình. Với sự tức giận tột độ, Cross thề sẽ hạ gục kẻ sát nhân bằng bất cứ giá nào. Hai đối thủ lao vào trò chơi “mèo vờn chuột” với một bên truy lùng và bên kia trốn chạy.Phim là cuộc hành trình của vị thám tử tài ba Alex Cross, với những tình tiết trinh thám đầy ly kỳ, những tình huống truy đuổi nghẹt thở, những bí mật dần được hé lộ một cách đầy bất ngờ, hứa hẹn sẽ đáp ứng được sự mong đợi của khán giả điện ảnh yêu thích thể loại hành động, trinh thám.Một bộ phim dựng theo tiểu thuyết của James Patterson – một trong những nhà văn hàng đầu của thể loại trinh thám.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednz7.googlevideo.com/videoplayback?id=0589cb6dd9b54348&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednz7&ms=nxu&mv=u&pl=25&sc=yes&ei=TKbZXM6rNYmu1wLbmqqYDA&susc=ph&app=fife&mime=video/mp4&dur=6083.372&lmt=1552828981732708&mt=1557767420&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557774956&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=C27D24F18D19F2C0CF604A85DF39C3E6FF46A4159D5B7DC0C502AAB37C0539A7.E0B10D89735DCAB04E79FD37D51603A6A1FB7A210D31C4D085F2936817923463&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5e6nze.googlevideo.com/videoplayback?id=0589cb6dd9b54348&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nze&ms=nxu&mv=u&pl=25&sc=yes&ei=TKbZXPriN9Wm8gPgxpioDQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6083.372&lmt=1552833366586058&mt=1557767420&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557774956&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=497FB8ABB46D4BA0694A5CCA4DEEFE6BECD9D27868A68C6853DDF7E0164BCB0F.C16E42B0415A373E3AC3880147CD8C9ACC8E0BF6E3798322CED095DEE55B62EE&key=us0#f720p","default":true}]},{"name":"Ba Chàng Ngốc","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ba-chang-ngoc_2318/xem-phim/"},"nameOrigin":"The Three Stooges","year":"2012","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fba-chang-ngoc-the-three-stooges-2012.jpg%3Fsize%3D300"},"directors":["Bobby Farrelly,Peter Farrelly"],"actors":["Sean Hayes","Chris Diamantopoulos","Will Sasso"],"genres":["Phim Hài Hước"],"countries":["Mỹ"],"duration":92,"desc":"Cũng cái tên ‘Ba chàng ngốc’ nhưng là một phiên bản hoàn toàn khác, hoàn toàn mới của Hollywood . Nhiều người có thể nhớ tới bộ phim cùng tựa đề Việt của điện ảnh Ấn Độ vô cùng thành công năm 2009. Nhưng với “ Ba chàng ngốc ” lần này, khán giả sẽ được cười ở những tình huống rất khác, rất Mỹ .Đúng lúc này, trại trẻ mồ côi, ngôi nhà duy nhất của ba chàng ngốc đang đứng trước nguy cơ đóng cửa do thiếu thốn về tài chính. Nhiệm vụ cứu trại trẻ được trao lên đôi vai của 3 kẻ khờ. Trong 30 ngày, bắt buộc ba chàng phải kiếm được khoản tiền khổng lồ là 830.000 đô la. Lần đầu bước ra thế giới bên ngoài và sải bước trên những con phố của thành phố Big City , những anh hề này gặp một phụ nữ nóng bỏng có tên Lydia, cô ta đưa ra một đề nghị kiếm tiền khá dễ dàng cho họ. Tất cả những gì họ phải làm chỉ là kết liễu cuộc đời của người chồng khốn khổ, bệnh nặng của cô ta để kiếm được khoản tiền kếch xù có thể cứu lấy trại trẻ mồ côi.Rất cần tiền, khờ khạo, không manh mối, nhưng ba chàng ngốc cũng nhận thấy sự mờ ám trong kế hoạch của cô nàng xấu tính Lydia, đặc biệt là khi họ phát hiện ra mục tiêu của kế hoạch này lại chính là người bạn cũ Teddy, cũng từng sống tại trại trẻ mồ côi. Trong suốt bộ phim, hình ảnh ba chàng khờ khạo với những kiểu tóc không-thể-độc-đáo hơn cùng những tình tiết siêu hài hước sẽ khiến người xem “cười lăn, cười bò”.","embeds":[{"resolution":360,"embedUrl":"https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=13&ct=1557768554&rver=7.1.6819.0&wp=MBI_SSL_SHARED&wreply=https:%2F%2Fonedrive.live.com%2Fdownload%3Fcid%3D375CDB1B890B3A36%26resid%3D375CDB1B890B3A36%252152352%26authkey%3DAOD3pmeLCpWGtsU&lc=1033&id=250206&cbcxt=sky&cbcxt=sky","default":true}]},{"name":"Con Heo","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/con-heo_2236/xem-phim/"},"nameOrigin":"Madison County","year":"2011","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fphim-con-heo-madison-county-2011.jpg%3Fsize%3D300"},"directors":["Katie StegemanNick Principe"],"actors":["Phim Kinh Dị","Phim Tâm Lý"],"genres":[""],"countries":["Mỹ"],"duration":null,"desc":"Một nhóm bạn trẻ đi dã ngoại ở vùng ngoại ô, trên đường họ đã ghé quá một thị trấn kì lạ, tại nơi đây họ đã gặp một kẻ giết người hàng loạt với bộ mặt nạ kì quái ..","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednsk.googlevideo.com/videoplayback?id=96726947df12a892&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsk&ms=nxu&mv=u&pl=25&sc=yes&ei=WZfZXIaWOIf31gKYyp-YDg&susc=ph&app=fife&mime=video/mp4&dur=4922.119&lmt=1551330387643114&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771130&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=AB7550194A9541A84E878CB96359B27159AB9146B5012DB576979A461A7C44E6.713457E72CCDC497D0061D19ACAD411120803C89BFEC1BB1BEA32E0AD99DE80B&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5ednsk.googlevideo.com/videoplayback?id=96726947df12a892&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsk&ms=nxu&mv=u&pl=25&sc=yes&ei=WpfZXOe4A5mV1wL9qaHgDA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4922.119&lmt=1551331538946070&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771130&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=63CD7495999A3EDCC4BF0913079CA67A6065BAAAB82717CE263AD1F93036B80A.B0498BEDE9509AEA7C88F9AD9957F8CFCA35525359FF1E5CBA02154BDCB0A87B&key=us0#f720p","default":true}]},{"name":"Biệt Đội Siêu Anh Hùng","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/biet-doi-sieu-anh-hung_1816/xem-phim/"},"nameOrigin":"The Avengers","year":"2012","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbiet-doi-sieu-anh-hung-the-avengers-2012.jpg%3Fsize%3D300"},"directors":["Joss Whedon"],"actors":["Robert Downey","Jr.","Chris Evans","Mark Ruffalo","Chris Hemsworth","Scarlett Johansson","Jeremy Renner","Tom Hiddleston","Samuel L. Jackson"],"genres":["Phim Hành Động","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":135,"desc":"The Avengers là một tập hợp những siêu anh hùng bao gồm: Captain America, Iron Man, Thor, Hulk,… Tuy nhiên, Captain America vẫn chưa công chiếu. Vì là tập hợp của một loạt siêu anh hùng trên nên việc đồng nhất về nhân vật cũng như cốt truyện, cách xây dựng là rất khó, điều đó nâng The Avengers trở thành một siêu phẩm hứa hẹn sẽ thu hút bất kỳ tín đồ nào của dòng phim này.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/4c18e7fee17d76f0d9d54c684e61c334/4c18e7fee17d76f0d9d54c684e61c334.playlist.m3u8","default":true}]},{"name":"Đi Khách","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/di-khach_1584/xem-phim/"},"nameOrigin":"The Girlfriend Experience","year":"2011","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fdi-khach-the-girlfriend-experience-2011.jpg%3Fsize%3D300"},"directors":["Steven Soderbergh"],"actors":["Sasha Grey","Brian Koppelman","David Levien","Matt Damon"],"genres":["Phim Tâm Lý"],"countries":["Mỹ"],"duration":null,"desc":"Nữ diễn viên chính là “nữ hoàng film người lớn ” Sasha Grey , bộ film nói về cuộc đời của những cô gái gọi hạng sang …… Đời sống của những cô gái gọi hạng sang – những người đi khách với giá 10.000 USD/đêm và dễ dàng kiếm hơn 1 triệu USD/năm – sẽ được đạo diễn Steven Soderbergh đưa lên bộ phim mới nhất của ông: The Girlfriend Experience. Cách đây hơn 1 năm, Steven Soderbergh đã nói đến đề tài này nhưng mãi đến nay những chi tiết liên quan đến bộ phim trên mới rõ ràng hơn khi mà bộ film đc công chiếu tại liên hoan film Cannes. The Girlfriend Experience sẽ triển khai vào mùa hè 2009, ngay sau khi Steven Soderbergh hoàn tất bộ phim The Informant, có diễn viên Matt Damon thủ vai chính. Theo tạp chí Variety, kịch bản phim do bộ đôi Brian Koppelman, David Levien (đồng biên kịch phim Ocean’s 13) và Steven Soderbergh viết. Steven Soderbergh dự định tuyển diễn viên phim cấp ba đóng phim này thay vì mời các ngôi sao hạng A Hollywood…","embeds":[{"resolution":360,"embedUrl":"https://lh3.googleusercontent.com/9u996MG7486NB3XXupNnUfjeiIqfWSwxiQ6H05h0ItPrJYl9V6tLzg4FQ8I86Y4xj8Nt=m18","default":true},{"resolution":720,"embedUrl":"https://lh3.googleusercontent.com/9u996MG7486NB3XXupNnUfjeiIqfWSwxiQ6H05h0ItPrJYl9V6tLzg4FQ8I86Y4xj8Nt=m22","default":true}]},{"name":"Bạch Tuyết và Bảy Chú Lùn","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/bach-tuyet-va-bay-chu-lun_1000/xem-phim/"},"nameOrigin":"Snow White and the Seven Dwarfs","year":"1937","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbach-tuyet-va-bay-chu-lun-snow-white-and-the-seven-dwarfs.jpg%3Fsize%3D300"},"directors":["Adriana Caselotti","Harry Stockwell","Lucille LaVerne","Moroni Olsen","Billy Gilbert"],"actors":["Phim Hoạt Hình"],"genres":[""],"countries":["Mỹ"],"duration":83,"desc":"Ngày xửa ngày xưa, vào một ngày nọ, một hoàng hậu mải mê nhìn cảnh tuyết rơi tuyệt đẹp ngoài cửa sổ khi đan len. Vì quá say sưa ngắm nhìn, bà vô ý để que đan đam vào ngón tay và một giọt máu nhỏ xuống những bông tuyết đọng lại trên bậu cửa. Nhịn giọt máu đào trên nền tuyết trắng, bà tự nhủ: \"Ước gì mình có một đứa con gái có da trắng như tuyết, môi đỏ như son và tóc đen như mun\". Chẳng lâu sau, ước mơ của bà thành hiện thực. Hoàng hậu sinh hạ được một công chúa và đặt tên là Bạch Tuyết. Cũng không may, hoàng hậu qua đời ngay khi Bạch Tuyết chào đời. Và cuộc đời nàng công chúa xinh đẹp phải trải qua bao nhiêu biến cố dưới sự độc ác của bà dì ghẻ...","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/44939f374ac3fab046fa2f64326da883/44939f374ac3fab046fa2f64326da883.playlist.m3u8","default":true}]},{"name":"Bẩy Võ Sĩ Samurai","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/bay-vo-si-samurai_831/xem-phim/"},"nameOrigin":"Seven Samurai","year":"1954","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbay-vo-si-samurai-seven-samurai.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Toshirô Mifune","Takashi Shimura","Keiko Tsushima"],"genres":["Phim Cổ Trang","Phim Võ Thuật"],"countries":["Nhật Bản"],"duration":202,"desc":"","embeds":[{"resolution":360,"embedUrl":"https://4.bp.blogspot.com/KJepFH1Wqzn4Vpy4NiZhv36XI9X9Z6_PQV5oTgUM3i50eYcYdHNYQmmckbtMQ_dQaGvE1exY3KY=m18","default":false},{"resolution":720,"embedUrl":"https://4.bp.blogspot.com/KJepFH1Wqzn4Vpy4NiZhv36XI9X9Z6_PQV5oTgUM3i50eYcYdHNYQmmckbtMQ_dQaGvE1exY3KY=m18","default":false}]},{"name":"Trợ lý Ma Cà Rồng","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tro-ly-ma-ca-rong_758/xem-phim/"},"nameOrigin":"Vampire's Assistant","year":"2009","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftro-ly-ma-ca-rong-2009-sub-viet-vampire-s-assistant-2009.jpg%3Fsize%3D300"},"directors":["John C. Reilly","Josh Hutcherson","Chris Massoglia","Jessica Carlson","Michael Cerveris","Ray Stevenson","Patrick Fugit","Daniel Newman","Morgan Saylor","Don McManus","Colleen Camp"],"actors":["Phim Hành Động","Phim Phiêu Lưu","Phim Kinh Dị"],"genres":[""],"countries":["Mỹ"],"duration":109,"desc":" Darren Shan là một cậu bé bình thường. Darren và cậu bạn Steve đã cố gắng làm việc chăm chỉ để có chiếc vé xem chương trình xiếc ảo thuật đang diễn ra trên phố. Họ cùng nhau đến rạp xiếc lưu động và xem show diễn \"Cirque du Freak\", nơi này họ thấy có nhiều hành động cực kỳ lạ lùng của những anh chàng người sói và người đàn bà có râu. Steve và Darren nghĩ rằng tất cả chỉ là một trò bịp bợm cho đến khi ma cà rồng-Larten Crepsley đến mang theo một nhện rất độc…","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/6ced503c83c9648cb83063e2c5265661/6ced503c83c9648cb83063e2c5265661.playlist.m3u8","default":true}]},{"name":"Kẻ Xấu Đẹp Trai","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ke-xau-dep-trai_516/xem-phim/"},"nameOrigin":"Megamind","year":"2010","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fke-xau-dep-trai-megamind.jpg%3Fsize%3D300"},"directors":["Brad Pitt","Will Ferre"],"actors":["Phim Hài Hước","Phim Hoạt Hình"],"genres":[""],"countries":["Mỹ"],"duration":96,"desc":"Megamind đưa người xem bước vào thế giới của những siêu nhân và ác nhân. Nhân vật chính của phim là Megamind - tên tội phạm thông minh nhất thế giới và cũng là kẻ thất bại nhất. Trong suốt nhiều năm liền, hắn cố gắng chinh phục thành phố Metro City nhưng đều bị siêu anh hùng khoác áo choàng Metro Man đánh bại. Trong khi Metro Man luôn được người dân thành phố tung hô và tán dương thì Megamind luôn bị mọi người căm ghét và xa lánh. Một ngày, âm mưu hoàn hảo của hắn đã hạ gục được Metro Man.Thành phố Metro City rơi vào tay Megamind. Tuy nhiên, sau khi Metro Man ra đi thì chẳng còn ai là đối thủ của Megamind nữa. Vì lâu ngày không được chiến đấu, hắn rơi vào tâm trạng buồn bã, chán nản và quyết định tự tạo ra một siêu anh hùng mới để chống lại mình. Tuy nhiên, tên siêu nhân mới được tạo nên lại trở thành một kẻ tội phạm và đi phá hoại khắp nơi. Lúc này, ác nhân Megamind buộc phải ra tay vì thành phố Metro City xinh đẹp. Sánh vai cùng với Megamind và Metro Man là nữ phóng viên gợi cảm Roxanne Ritchi. Một cuộc phiêu lưu mới bắt đầu diễn ra...Megamind có cách dẫn chuyện khá hấp dẫn và lôi cuốn ngay từ những giây phút đầu tiên. Thời ấu thơ của Megamind và Metro Man được giới thiệu với những nét đối lập nhau giữa siêu anh hùng và tội phạm tạo nên sắc thái hài hước, có phần châm biếm cho bộ phim. Những câu thoại hóm hỉnh của các nhân vật khiến khán giả bật cười liên tục trong suốt chiều dài hơn 90 phút phim. Tính cách các nhân vật chính được xây dựng rõ rệt nhưng đều toát lên vẻ hài hước, đáng yêu thu hút không chỉ trẻ em mà cả người lớn.Phần hình ảnh của Megamind được thực hiện rất trau chuốt, tỉ mỉ, đặc biệt là tạo hình của nhân vật chính - ác nhân Megamind. Chỉ đạo nghệ thuật Timothy J. Lamb cho biết: \"Thiết kế ban đầu của Megamind giống như một gã đầu to, nhưng thiết kế của nhân vật cần phải hài hòa với câu chuyện. Megamind vui tính và có cảm tình với Roxanne nên điều quan trọng là phải đảm bảo rằng thiết kế nhân vật phù hợp với tất cả yếu tố trong chuyện phim, chứ không chỉ đơn giản là một gã người ngoài hành tinh xanh lơ giận dữ\".Các nhân vật trong phim đều có những tạo hình riêng biệt, gây ấn tượng với khán giả. Nếu như ác nhân Megamind \"đập vào mắt người xem\" là chiếc đầu to dị thường và làn xa màu xanh lơ thì siêu nhân Metro Man là hình ảnh một chàng trai vạm vỡ dẻo mỏ, tự tin hơn người. Nhân vật nữ Roxanne Ritchi được xây dựng vừa có vẻ đẹp về ngoại hình, lại vừa mạnh mẽ ở tính cách khiến mọi chàng trai trong phim đều bị \"hạ gục\". Hiệu ứng 3D của phim có chiều sâu, màu sắc tươi sáng, sắc nét, đem lại cảm giác sống động cho khán giả.Âm nhạc trong phim do hai nhà soạn nhạc Hans Zimmer và Lorne Balfe đóng góp một phần rất quan trọng làm nên sức hấp dẫn của Megamind. Các giai điệu xuất hiện đúng lúc ở mỗi cảnh quay làm tăng hiệu quả cho cảm xúc người xem. Âm nhạc cũng thể hiện cho sự đối lập giữa các nhân vật trong Megamind và được lồng ghép một cách hợp lý. Đặc biệt, người hâm mộ vua nhạc Pop Michael Jackson cũng có cơ hội nghe lại ca khúc Bad nổi tiếng của anh khi xem bộ phim này.Vẫn là câu chuyện về cuộc chiến giữa cái Ác và cái Thiện nhưng Megamind không đi theo con đường thông thường của thể loại siêu nhân. Phim lấy nhân vật phản diện làm trung tâm câu chuyện và cho người xem thấy rằng không phải tất cả kẻ ác đều xấu, và không phải tất cả các anh hùng đều vĩ đại. Megamind là một ác nhân kém cỏi khi làm chuyện xấu xa, nhưng lại là một con người xuất chúng khi thực hiện điều tốt. Megamind đã phá vỡ nhiều quy tắc truyền thống của dòng phim siêu anh hùng và đưa tới cho khán giả những cái nhìn mới về các nhân vật này. Phim đi ngược lại những cái thông thường và biến sự \"ngược đời\" ấy trở thành một câu chuyện hấp dẫn, thuyết phục người xem.Mặc dù mô-típ của phim khá giống Despicable Me của hãng Universal nhưng Megamind khai thác nhiều hơn các khía cạnh khác nhau của chuyện \"người tốt muốn làm kẻ xấu\". Sự kết hợp giữa nhiều yếu tố như hành động, tình bạn chí thiết, tình yêu lãng mạn, hài hước, viễn tưởng đã khiến Megamind trở thành một tác phẩm thú vị, có ý nghĩa và lôi cuốn người xem tới những phút cuối cùng. Mặc dù đôi chỗ các tình tiết trong phim vẫn chưa được hợp lý, sự \"bất hợp lý\" đó lại trở nên hóm hỉnh, hài hước và tạo nên tiếng cười nơi khán giả.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/a2d1095401048cbcaf0b79cd9cd1587e/a2d1095401048cbcaf0b79cd9cd1587e.playlist.m3u8","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/megamind-2010/1"},{"name":"Cuộc chiến chó mèo 2","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cuoc-chien-cho-meo-2_509/xem-phim/"},"nameOrigin":"Cats & Dogs: The Revenge of Kitty Galore","year":"2010","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcuoc-chien-cho-meo-2-cats-dogs-the-revenge-of-kitty-galore.jpg%3Fsize%3D300"},"directors":["James Marsden","Nick Nolte","Christina Applegate","Katt Williams","Bette Midler","Neil Patrick Harris","Sean Hayes","Wallace Shawn","Roger Moore","Joe Pantoliano"],"actors":["Phim Hài Hước","Phim Hoạt Hình"],"genres":[""],"countries":["Mỹ"],"duration":82,"desc":"","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/9b7d3fcf16774059aec1e59d68b37599/9b7d3fcf16774059aec1e59d68b37599.playlist.m3u8","default":true}]},{"name":"Mất Tích Ở Berlin","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/mat-tich-o-berlin_10003/xem-phim/"},"nameOrigin":"Berlin Syndrome","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fmat-tich-o-berlin-berlin-syndrome-2017.jpg%3Fsize%3D300"},"directors":["Cate Shortland"],"actors":["Teresa Palmer","Max Riemelt","Cem Tuncay","Lucie Aron","Matthias Habich"],"genres":["Phim Tâm Lý"],"countries":["Mỹ"],"duration":120,"desc":"Phim Mất Tích Ở Berlin (Berlin Syndrome) 2017 Khi Clare lần đầu tiên đến Berlin, ngay lập tức cô đã rơi vào tình yêu với Andi, một tình yêu nồng nàng và rạo rực đến nổi họ không thể tách rời nhau. Nhưng đằng sau tình yêu ngọt ngào đó là một chiếc bẫy đã được giăng từ trước. Mọi chuyện sẽ xảy ra như thế nào với Clare?","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednls.googlevideo.com/videoplayback?id=b60d3e738dfdad18&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednls&ms=nxu&mv=u&pl=25&sc=yes&ei=2onZXPOuHYqk8gPW1pCgCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6957.255&lmt=1552016910359358&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767674&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=8486BBFA16D4BEE57E59A0D8C69AC725676B134D2C87A12E8332576C0F3FC895.8F28FCE4B90CDC747DA6AEE4BC885149FE72D6739AF622CE1F28E91A4A824100&key=us0","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5ednsr.googlevideo.com/videoplayback?id=d048ae073ea167a1&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsr&ms=nxu&mv=u&pl=25&sc=yes&ei=2onZXLazHdPI8gOtnJDoCg&susc=ph&app=fife&mime=video/mp4&dur=6957.255&lmt=1552014874791557&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767674&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=A4208DABA6059BEB29BB6B75DDEB2AE735E0A12B21BB84BC9CA12B25AE8898ED.3BB0229FEFFA300C173570A339F7688D0ADBEBC3F452317362720EE58850AF3F&key=us0","default":false}]},{"name":"Cao Thủ Thái Cực Quyền","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cao-thu-thai-cuc-quyen_10060/xem-phim/"},"nameOrigin":"Tai Chi Pioneer","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcao-thu-thai-cuc-quyen-tai-chi-pioneer-2016.jpg%3Fsize%3D300"},"directors":["Sha Xuezhou"],"actors":["Sha Xuezhou","Zheng Shuang"],"genres":["Phim Võ Thuật","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":98,"desc":"Phim Cao Thủ Thái Cực Quyền Tai Chi Pioneer kể về Liễu Mục Phàm – một cao thủ thái cực quyền mở võ quán truyền dạy võ công với mong muốn giúp đỡ những người yếu đuối đòi lại công bằng, nêu cao tinh thần thượng võ. Thế nhưng các thế lực xấu xa liên tục tìm đến võ quán của anh gây sự khiến Mục Phàm và các đệ tử bị cuốn vào rắc rối. Liệu chính nghĩa có chiến thắng?","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednsk.googlevideo.com/videoplayback?id=934e6b88a6181926&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsk&ms=nxu&mv=u&pl=25&sc=yes&ei=SZfZXIDzHcby1gKk_62QCg&susc=ph&app=fife&mime=video/mp4&dur=5871.908&lmt=1551300380788351&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771113&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=B705C2764878E7706E019B130E3E60B22339948DC76D0D8542070DE3D524173A.CA7D49905B7FA4667DAB0FA691F43F56E2AA582F56ACD9F0439E550530605B83&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5ednsk.googlevideo.com/videoplayback?id=934e6b88a6181926&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsk&ms=nxu&mv=u&pl=25&sc=yes&ei=SZfZXPrAIMvJ1wL45ongCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5871.908&lmt=1551305773672885&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771113&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=8144D143DD3BB62FADE064D04E666878A44255FB264F2CF6445BD8A630B74D8A.E5FB281A5F391DBA13EBC47E0CB5D5B1AD60D4D69F8447473DBF41F539BCC14C&key=us0#f720p","default":true}]},{"name":"Quá Nhanh Quá Nguy Hiểm 8","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/qua-nhanh-qua-nguy-hiem-8_9958/xem-phim/"},"nameOrigin":"Qua Nhanh Qua Nguy Hiem phan 8","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fqua-nhanh-qua-nguy-hiem-8-qua-nhanh-qua-nguy-hiem-phan-8-2017.jpg%3Fsize%3D300"},"directors":["F. Gary Gray"],"actors":["Vin Diesel","Dwayne Johnson","Jason Statham","Kurt Russell","Scott Eastwood","Lucas Black","Charlize Theron","Jordana Brewster","Elsa Pataky","Nathalie Emmanuel"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":120,"desc":"Tiếp nối phần phim Fast & Furious 7 năm 2015 với thành công là một trong những bộ phim đạt doanh thu phòng vé một tỷ đô la nhanh nhất và là tít phim lớn thứ sáu mọi thời đại, phần mới nhất của một trong các loạt phim nổi tiếng và có sức sống bền bỉ nhất thế giới đã ra đời với tên gọi Fast & Furious 8.Dom và Letty hiện đang đi hưởng tuần trăng mật. Brian cùng Mia đã quyết định từ giã sự nghiệp. Các thành viên còn lại của nhóm cũng đã được minh oan và dần trở về với cuộc sống bình thường. Nhưng một người phụ nữ bí ẩn (do nữ diễn viên đoạt giải Oscar Charlize Theron thủ vai) đã dẫn dụ Dom vào thế giới tội phạm mà anh dường như không thể thoát ra được và thậm chí phản bội lại cả những người thân thiết nhất, họ sẽ phải trải qua những thử thách cam go mà họ chưa từng đối mặt.Từ bờ biển Cuba tới những con phố của New York cho đến đồng bằng băng giá của vùng cực biển Barents, đội ngũ ưu tú này sẽ tung hoành ngang dọc khắp địa cầu để ngăn chận âm mưu làm thế giới hỗn loạn của một kẻ vô chính phủ và mang người đàn ông đã gắn kết họ thành một gia đình trở về.Trong Fast & Furious 8, Vin Diesel sẽ trở lại cùng dàn sao từ các phần trước gồm Dwayne Johnson, Jason Statham, Michelle Rodriguez, Tyrese Gibson, Chris “Ludacris” Bridges, Nathalie Emmanuel, Elsa Pataky và Kurt Russell. Bên cạnh Theron, bộ phim còn chào đón thêm các diễn viên mới khác là Scott Eastwood và diễn viên đoạt giải Oscar Helen Mirren. Bộ phim được chỉ đạo bởi đạo diễn F. Gary Gray (Straight Outta Compton), thực hiện sản xuất là ê kíp cũ với các nhà sản xuất Neal H. Moritz, Michael Fottrell và Diesel.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5edns6.googlevideo.com/videoplayback?id=ad2cd0159dfce1ce&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns6&ms=nxu&mv=u&pl=25&sc=yes&ei=H6DZXPzQPNCJ1wLo47_YAw&susc=ph&app=fife&mime=video/mp4&dur=7686.524&lmt=1552837514046590&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773376&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=0112B1A3CA46AF6CD5CB3F9D94C7F4F55709331604E9865DDAD0CFC0E545F88E.D358CF0045B376D8D9250C510DEC5C0911BE5695F0CB97005DE2E60A0D00D5A6&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5e6ne6.googlevideo.com/videoplayback?id=ad2cd0159dfce1ce&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ne6&ms=nxu&mv=u&pl=25&sc=yes&ei=IKDZXOTDBsby1gKk_62QCg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7686.524&lmt=1553035438029493&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773376&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=D30D7353E889C9FBEEF02B3981B32821734688C75C14BB02D1CB345E04BBC8C2.8406683E30972E2A598DE5288543D211C8480C3412CC95D649916E8358F0489A&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r3---sn-4g5e6ne6.googlevideo.com/videoplayback?id=ad2cd0159dfce1ce&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ne6&ms=nxu&mv=u&pl=25&sc=yes&ei=IKDZXOOMCYmu1wLbmqqYDA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7686.524&lmt=1553035435218875&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773376&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=B49874D5A34981F54FB5AAC1156E837857E25F29A59612B5ED806D7D73C285EA.7FCF7C81C1222D0441BFD73A413C3EEA014B23D2804FBF1436D47CA8B9B88917&key=us0#f1080p","default":true}]},{"name":"Quái nhân Deadpool 2","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/quai-nhan-deadpool-2_9953/xem-phim/"},"nameOrigin":"Deadpool 2","year":"2018","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fquai-nhan-deadpool-2-deadpool-22-2018.jpg%3Fsize%3D300"},"directors":["David Leitch"],"actors":["Ryan Reynolds","David Harbour"],"genres":["Phim Hành Động","Phim Hài Hước","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":null,"desc":" Nam diễn viên Ryan Reynolds đã tung ra đoạn video nhá hàng phim Deadpool 2 cực kỳ vui nhộn mang tên \"No Good Deed\". Anh khả ái đã trở lại và ăn hại hơn gấp bội phần, làm màu với chém gió thì nhiều mà hành động chẳng được bao nhiêu... Deadpool là nhân vật phản anh hùng (anti-hero) cực kỳ được yêu thích trong vũ trụ Marvel. Bộ phim solo của \"anh khả ái dọn dẹp ngang trái\" vào năm 2016 đã thành công rực rỡ với doanh thu lên đến 783 triệu USD. Deadpool 2 dự kiến sẽ công chiếu vào ngày 2/3/2018.","embeds":[{"resolution":360,"embedUrl":"https://r6---sn-4g5edn7s.googlevideo.com/videoplayback?id=df14eb763f72d088&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7s&ms=nxu&mv=u&pl=25&sc=yes&ei=H6DZXN-WIpfP1wKPqJ6YAQ&susc=ph&app=fife&mime=video/mp4&dur=7169.323&lmt=1552703593483679&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773375&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=D393C121A19D48CF96B6517B8FDAC0412E623C6655274B5BBCD6F37A4CEEF430.0185BE9D4269EC08E8525654DF8A8BD883BC3F7367B02FBA0F805E8B504065EB&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5edn7s.googlevideo.com/videoplayback?id=df14eb763f72d088&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7s&ms=nxu&mv=u&pl=25&sc=yes&ei=H6DZXM-yK4KC8gOPhZOwDQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7169.323&lmt=1552711622146534&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773375&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=34762F9A1DF043069F2183BDD1A735BC4404164CF17DDCA3A3FAFC81E24FAD1B.B48BFBE22D7B7309BE06D9E8F02DA5EA69476354EC9B9DA96D9F939E22D08ADE&key=us0#f720p","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/deadpool-2-2018/1"},{"name":"Cảnh Sát Siêu Nhiên","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/canh-sat-sieu-nhien_9844/xem-phim/"},"nameOrigin":"Paranormal Cop","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcanh-sat-sieu-nhien-paranormal-cop-2017.jpg%3Fsize%3D300"},"directors":["Từ Gia Huy"],"actors":["Lưu Vũ Kỳ","Lý Xán Sâm","Trần Dĩ Mạn"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Viễn Tưởng"],"countries":["Trung Quốc"],"duration":72,"desc":"Sau khi bị tai nạn trong lúc hạnh động, mắt phải của cảnh sát Lý Chí Minh có khả năng nhìn thấy những thứ mắt thường không thể nhìn thấy. Cùng lúc đó, vợ anh cũng mất tích một cách bí ẩn. Nhận thấy chuyện này liên quan đến vụ án phụ nữ mất tích hàng loạt gần đây. Càng bắt tay vào điều tra anh càng khám phá ra nhiều điều không ngờ tới","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5e6nsz.googlevideo.com/videoplayback?id=d296e71361be78cd&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsz&ms=nxu&mv=u&pl=25&sc=yes&ei=JqDZXJatG8nF1gL-mYdw&susc=ph&app=fife&mime=video/mp4&dur=4340.320&lmt=1552801877132527&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773382&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=3C3521B53268BB78CDD9E3057A8D2A46470B7910AE59FD7D9569A4047AC7B533.15F7692804B4DD3FE1D03366FA2AC3F632EF969E9D7E4B6C56462BEB8E53D092&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5ednsl.googlevideo.com/videoplayback?id=d296e71361be78cd&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsl&ms=nxu&mv=u&pl=25&sc=yes&ei=JqDZXM-AIaSK8gOIx6ngAg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4340.320&lmt=1552814854772606&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773382&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=3C3A4251A01A9A7E85274850C6ADEE9BB2A14F94079FFC068E0E1F5D39ECFC45.DF7164B322E7CD09664853D4ADAD005AC1CE274F840E81C3770B6024FA4F579D&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r3---sn-4g5ednsl.googlevideo.com/videoplayback?id=d296e71361be78cd&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsl&ms=nxu&mv=u&pl=25&sc=yes&ei=JqDZXLu9I5rj1wLHyrjYAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4340.320&lmt=1552814961671952&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773382&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=B7759B6A049C166E238823DB9BDB5D4B87169448C54825A2CC16F7F5B54F581C.026C24E571CA9BE4E445E00A6B05314FE7A2EFCB6D6A06648342236B4C65C682&key=us0#f1080p","default":true}]},{"name":"Phi Vụ Kim Cương","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/phi-vu-kim-cuong_9827/xem-phim/"},"nameOrigin":"Diamond Cartel","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fphi-vu-kim-cuong-diamond-cartel-2017.jpg%3Fsize%3D300"},"directors":["Salamat Mukhammed-Ali"],"actors":["Peter O'toole","Armand Assante","Olivier Gruner"],"genres":["Phim Hành Động","Phim Phiêu Lưu"],"countries":["Mỹ"],"duration":100,"desc":"Phi vụ mua bán kim cương giữa hai ông trùm tội phạm bổng đổ bể khi số đá quý đó bị nữ sát thủ Aliya cướp đi. Trên đường trốn chạy bọn xã hội đen cùng tình nhân là Ruslan, quá khứ của Aliya từ từ được hé lộ, và kéo theo đó là những tranh chấp đổ máu để giành lấy kim cương lẫn tình yêu.","embeds":[{"resolution":360,"embedUrl":"https://r6---sn-4g5edned.googlevideo.com/videoplayback?id=e806e4a0f0c73e34&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edned&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=LKDZXJrKOsyX8gOqvqXIDw&susc=ph&app=fife&mime=video/mp4&dur=5979.347&lmt=1551839557156382&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773388&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=4CC572B3A73C79CF086BC35DC988EAE1EB42CEC8BEF5C4FA9D71FC05A351E2E4.CF8ECA1F02FFE7F187BB3C41E6EEC4465B1C318977B13B14E5E878695BA51934&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5edned.googlevideo.com/videoplayback?id=e806e4a0f0c73e34&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edned&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=LKDZXJeEPYqk8gPW1pCgCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5979.347&lmt=1551841561118078&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773389&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=62D24FE08832268365B68D45D5F1D9BC2D1161BBE0C8170A570757C06DBA6796.09DE838B4D96B88750CA1B66B4B1CC6E41A7654DD7378CF4B4945501B73227F1&key=us0#f720p","default":true}]},{"name":"Giấc Mộng Tây Du 2: Thiết Phiến Công Chúa","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/giac-mong-tay-du-2-thiet-phien-cong-chua_9809/xem-phim/"},"nameOrigin":"The Dream Journey 2","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fgiac-mong-tay-du-2-thiet-phien-cong-chua-the-dream-journey-2-2017.jpg%3Fsize%3D300"},"directors":["Đàm Tiếu"],"actors":["Cửu Khổng","Tạ Miêu","Hoàng Nhất Lâm"],"genres":["Phim Cổ Trang","Phim Thần Thoại","Phim Võ Thuật","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":91,"desc":"Phim Giấc Mộng Tây Du 2: Thiết Phiến Công Chúa: Tại ải Hỏa Diệm Sơn, nhằm phát huy hết pháp lực quạt ba tiêu, Tôn Ngộ Không phụng mệnh Bồ Tát xuyên không quay về 500 trước để lấy bằng được giọt nước mắt của Thiết Phiến công chúa. Từ đây, hành trình thử thách Ngộ Không vô cùng gian nan khi vừa phải thuyết phục công chúa, vừa đối đầu với bọn yêu quái xảo quyệt","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5e6nzl.googlevideo.com/videoplayback?id=707c704b86bb9461&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzl&ms=nxu&mv=u&pl=25&sc=yes&ei=iJfZXImZLJaw1wKDxYKgDw&susc=ph&app=fife&mime=video/mp4&dur=5460.172&lmt=1552662197511980&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771176&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=2C190EE253D3AA11205979B747EB4D4829778981E761809315DE17C622560C72.773CDDE2CB6E1EC0E6F27F46A1651BF73E9A9A617F633245F84D6DC1C6A4476F&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5e6nzl.googlevideo.com/videoplayback?id=707c704b86bb9461&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzl&ms=nxu&mv=u&pl=25&sc=yes&ei=iJfZXNbmNYKC8gOPhZOwDQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5460.172&lmt=1552684750207817&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771176&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=D081E72B7E39D565726EF9906B2C67B1BCD6CAEB301A70530BF8BCBB951A1C3B.BA7C19033F8FD516C34311479B32B4979B2AAE74048DA1E4A812E7DCC2F64CBB&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r6---sn-4g5edn7y.googlevideo.com/videoplayback?id=707c704b86bb9461&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7y&ms=nxu&mv=u&pl=25&sc=yes&ei=iJfZXNTvOJmR1wLfn5GgBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5460.172&lmt=1552684824171998&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771176&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=513D3F0375C049F31477B907217202C5488C75D227FB94EA2490300B67B347D4.1FE087876FC8B238D01EAC1C0CB460BAA2A9244061D894A1E6F69B8FAEA8C9FF&key=us0#f1080p","default":true}]},{"name":"Tin tặc mũ đen","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tin-tac-mu-den_9802/xem-phim/"},"nameOrigin":"Blackhat / Hacker Mũ Đen","year":"2015","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftin-tac-mu-den-blackhat-hacker-mu-den-2015.jpg%3Fsize%3D300"},"directors":["Michael Mann"],"actors":["Chris Hemsworth","Viola Davis"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":133,"desc":"Phim Hacker Mũ Đen kể về chàng tin tặc thiên tài Nicholas Hathaway (Chris Hemsworth thủ vai) được cơ quan chính phủ từ Mỹ và Trung Quốc thuê để truy tìm tổ chức tội phạm bí ẩn được cầm đầu bởi một tin tặc, đang gây ra hàng loạt sự kiện kinh hoàng. Chạy đua với thời gian, trước khi có thêm nhiều tội ác được gây ra, “tin tặc mũ đen” Chris Hemsworth phải dấn thân vào cuộc săn lùng nguy hiểm này với sự đồng hành của cộng sự xinh đẹp do Thang Duy thủ vai.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5e6nzs.googlevideo.com/videoplayback?id=b2806267c79d82dd&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzs&ms=nxu&mv=m&pl=25&sc=yes&ei=_qDZXInjIIzn1wLMsZmIAg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6456.122&lmt=1549969278389749&mt=1557766294&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557773598&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=82A4EB323B6FCC283D8C75A45AB1FCA4EBF5A9F0679F3C82F281AE18229D53B5.47CF996FE541DA0C04ED0FF4D490ECF0D906B7FE1A8C1FD42F7965E358013477&key=us0","default":false},{"resolution":720,"embedUrl":"https://r3---sn-4g5e6nzs.googlevideo.com/videoplayback?id=b2806267c79d82dd&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nzs&ms=nxu&mv=m&pl=25&sc=yes&ei=_qDZXPD3IIuv1wLzkojIBQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6456.122&lmt=1549969498584810&mt=1557766354&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557773598&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=496FB45885E6189D25FA002EECA3F3EB294F2A6EE1C8F57C3DE9E7CD98314A27.2037B8DBC48350C3C54A10C0E20ACC8E9F8E243C4A9F10A0F279BDC67DC8E4F8&key=us0","default":true},{"resolution":1080,"embedUrl":"https://r4---sn-4g5e6nss.googlevideo.com/videoplayback?id=0760d6a250bc354a&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nss&ms=nxu&mv=m&pl=25&sc=yes&ei=_qDZXO_tIMWK8gPLzbGYCw&susc=ph&app=fife&mime=video/mp4&dur=6456.122&lmt=1549961334036384&mt=1557766294&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557773598&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=9C86F2123DB2A8C817AA631E3015FE73320A0B119CB6F271C51D7D64887ECAFA.735F51793203B65A43ECDB1D5CAC13DF75DC0F4DF418C936EF1B005B55819AAA&key=us0","default":false}]},{"name":"Moontrap Nền Văn Minh Đã Mất Từ Lâu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/moontrap-nen-van-minh-da-mat-tu-lau_9807/xem-phim/"},"nameOrigin":"Moontrap: Target Earth/Mục Tiêu Trái Đất Là Moontrap","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fmoontrap-nen-van-minh-da-mat-tu-lau-moontrap-target-earthmuc-tieu-trai-dat-la-moontrap-2017.jpg%3Fsize%3D300"},"directors":["Robert Dyke"],"actors":["Sarah Butler","Charles Shaughnessy","Damon Dayoub"],"genres":["Phim Hành Động","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":85,"desc":"Một tàu vũ trụ cổ đại lãng quên từ lâu đã phát hiện trên Trái Đất. Điều tra được thực hiện bởi Scout chở cô đến mặt trăng và rồi cô gặp các máy ấn tượng giữ gìn sự khôn ngoan của nền văn minh đã mất từ lâu.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednz7.googlevideo.com/videoplayback?id=2db8de98b03353d1&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednz7&ms=nxu&mv=u&pl=25&sc=yes&ei=PKDZXNS2L8qc8gOd5ai4Bw&susc=ph&app=fife&mime=video/mp4&dur=5126.780&lmt=1552497560581023&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773404&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=59B4C6BD859F99D0340C541CC1CEEF0CD0E44BB5C4EB8944F17975F3B1284455.88AEB0E07C72674762E8592B77A500F24C4E4C922E3FAB0A4C72CE458FB52076&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5e6nls.googlevideo.com/videoplayback?id=2db8de98b03353d1&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nls&ms=nxu&mv=u&pl=25&sc=yes&ei=PKDZXLj_NJvJ8gP8mKfYBw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5126.780&lmt=1552500211682653&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773404&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=93BF1011DC45C329ACC16444740A9E80DE066AE3D279C3F075ED8B3D4D4BD951.3AEE5F3EE26ECEAC3413FEE08B85D74F733D7A3BB3772DA55629AAFA007DC5CE&key=us0#f720p","default":true}]},{"name":"Mùa Săn Bắn: Hành Trình Ngớ Ngẫn","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/mua-san-ban-hanh-trinh-ngo-ngan_9772/xem-phim/"},"nameOrigin":"Open Season: Scared Silly","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fmua-san-ban-hanh-trinh-ngo-ngan-open-season-scared-silly-2017.jpg%3Fsize%3D300"},"directors":["David Feiss"],"actors":["Will Townsend","Melissa Sturm","Trevor Devall"],"genres":["Phim Hài Hước","Phim Hoạt Hình","Phim Thuyết Minh","Phim Thiếu nhi"],"countries":["Mỹ"],"duration":84,"desc":"Elliot, Boog là hai người bạn thân tuy to xác nhưng rất yêu thương đồng loại, họ biết mùa săn bắn thú rừng đã đến cho nên Elliot, Boog đã quyết sẽ đi tránh nạn mà cũng như tạo cho mình một chuyến phiêu lưu đầy hài hước.Hai người đi đến đâu cũng làm náo động tới đó và kết bạn với rất nhiều sinh vật khác đặc biệt là những con thú nhỏ nhắn, sau đó họ trãi qua một cuộc phiêu lưu bay lượn trên trời bằng chiếc máy bay nhưng rồi lại xảy ra những tình huống dở khóc dở cười khiến họ cùng những người bạn gặp nạn phải gặp rắc rối.","embeds":[{"resolution":360,"embedUrl":"https://lh3.googleusercontent.com/zHMKTWm6pfbesj8rVkHWPp64DLAhTOYRUBYOMQy3DArzoRif-rrx0nsPrlwJK_8WgJ4BAF2mvrVIz0lSvTyRufiX4M_p61JG9IYEZroiGahr7rPUk5bwMzMmn2qzFq8Nw6EtAg=m18","default":false},{"resolution":720,"embedUrl":"https://lh3.googleusercontent.com/zHMKTWm6pfbesj8rVkHWPp64DLAhTOYRUBYOMQy3DArzoRif-rrx0nsPrlwJK_8WgJ4BAF2mvrVIz0lSvTyRufiX4M_p61JG9IYEZroiGahr7rPUk5bwMzMmn2qzFq8Nw6EtAg=m22","default":true},{"resolution":1080,"embedUrl":"https://lh3.googleusercontent.com/zHMKTWm6pfbesj8rVkHWPp64DLAhTOYRUBYOMQy3DArzoRif-rrx0nsPrlwJK_8WgJ4BAF2mvrVIz0lSvTyRufiX4M_p61JG9IYEZroiGahr7rPUk5bwMzMmn2qzFq8Nw6EtAg=m37","default":false}]},{"name":"Nữ Hoàng Tuyết 3: Lửa và Băng","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/nu-hoang-tuyet-3-lua-va-bang_9700/xem-phim/"},"nameOrigin":"The Snow Queen 3: Fire and Ice","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fnu-hoang-tuyet-3-lua-va-bang-the-snow-queen-3-fire-and-ice-2017.jpg%3Fsize%3D300"},"directors":["Aleksey Tsitsilin"],"actors":["Garik Kharlamov","Ivan Okhlobystin"],"genres":["Phim Hành Động","Phim Hài Hước","Phim Hoạt Hình"],"countries":["Mỹ"],"duration":80,"desc":"Phim Nữ Hoàng Tuyết 3: Lửa và Băng, The Snow Queen 3: Fire and Ice 2016Vướng phải đủ loại rắc rối là món quà hiếm có của gia đình Kai và Gerda. Lần này, họ phải trưởng thành và đối mặt với những vấn đề mang tầm toàn cầu.","embeds":[{"resolution":360,"embedUrl":"https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=13&ct=1557767185&rver=7.1.6819.0&wp=MBI_SSL_SHARED&wreply=https:%2F%2Fonedrive.live.com%2Fdownload%3Fcid%3D375CDB1B890B3A36%26resid%3D375CDB1B890B3A36%252152399%26authkey%3DAHGL8emhSKiWSU0&lc=1033&id=250206&cbcxt=sky&cbcxt=sky","default":true}]},{"name":"Liên Minh Công Lý Bóng Đêm","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/lien-minh-cong-ly-bong-dem_9654/xem-phim/"},"nameOrigin":"Justice League Dark","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Flien-minh-cong-ly-bong-dem-justice-league-dark-2017.jpg%3Fsize%3D300"},"directors":["Jay Oliva"],"actors":["Enrico Colantoni","Jason O'Mara","Matt Ryan","Camilla Luddington","Ray Chase","Roger Cross"],"genres":["Phim Hành Động","Phim Hoạt Hình","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":66,"desc":"Phim Liên Minh Công Lý Bóng Tối, Justice League Dark 2017 là những gì nó giống như cái tên. Đó là mặt trái của công lý.Một nhóm người hùng siêu nhiên người liên kết với nhau một cách lỏng lẻo để đưa vào nhằm chống lại các mối đe dọa huyền bí, các mối đe dọa siêu nhiên - mối đe dọa mà các Justice League thực tế có thể bất lực chống lại.","embeds":[{"resolution":360,"embedUrl":"https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=13&ct=1557767185&rver=7.1.6819.0&wp=MBI_SSL_SHARED&wreply=https:%2F%2Fonedrive.live.com%2Fdownload%3Fcid%3D375CDB1B890B3A36%26resid%3D375CDB1B890B3A36%252152379%26authkey%3DAEnqfX-gT2HQvWk&lc=1033&id=250206&cbcxt=sky&cbcxt=sky","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/justice-league-dark-2017/1"},{"name":"Cuộc Chiến Thập Tự","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cuoc-chien-thap-tu_9696/xem-phim/"},"nameOrigin":"Cross Wars","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcuoc-chien-thap-tu-cross-wars-2017.jpg%3Fsize%3D300"},"directors":["Patrick Durham"],"actors":["Danny Trejo","Vinnie Jones","Brian Austin Green"],"genres":["Phim Hành Động","Phim Hình Sự"],"countries":["Mỹ"],"duration":98,"desc":"Là một bộ phim Hành Động, Hình Sự Cross Wars - Cuộc Chiến Thập Tự 2017với sự tham gia của Calln (Brian Austin Green thủ vai) tái xuất cùng đồng đội của mình để chống lại kẻ thủ ác Gunnar (Vinnie Jones thủ vai) với sự giúp đỡ của Frank Nitti (Tom Sizemore) thám tử ở thành phố Los Angeles.","embeds":[{"resolution":360,"embedUrl":"https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=13&ct=1557767185&rver=7.1.6819.0&wp=MBI_SSL_SHARED&wreply=https:%2F%2Fonedrive.live.com%2Fdownload%3Fcid%3D375CDB1B890B3A36%26resid%3D375CDB1B890B3A36%252152394%26authkey%3DALNJ4s4ZGYQhHjw&lc=1033&id=250206&cbcxt=sky&cbcxt=sky","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/cross-wars-2017/1"},{"name":"Thần Kiếm","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/than-kiem_9626/xem-phim/"},"nameOrigin":"Sword Master","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fthan-kiem-sword-master-2016.jpg%3Fsize%3D300"},"directors":["Nhĩ Đông Thăng"],"actors":["Đang cập nhật"],"genres":["Phim Cổ Trang","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":90,"desc":"Phim Thần Kiếm, Sword Master kể về câu chuyện của Tam Thiếu Gia - một bậc thầy kiếm đạo với những tuyệt kỹ võ công không ai sánh bằng.Sau khi đã từ bỏ chốn trần gian vì mệt mỏi với thế sự, ông phải tái xuất giang hồ để đối đầu với những thế lực yêu binh quỷ tướng và giải cứu cố nhân.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednz7.googlevideo.com/videoplayback?id=f77b30bbef2cb792&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednz7&ms=nxu&mv=m&pl=25&sc=yes&ei=sKPZXMDDBcvJ1wL45ongCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6460.000&lmt=1554772214504228&mt=1557767014&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557774288&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=6F12866A8C373A575208A1775D33F83A2C972C69EE2A35381A850AD40F4ED725.211E3ED049609584D24183269EEA631CD28DBA0E79BB2DB9B2B50517632F1566&key=us0","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5ednz7.googlevideo.com/videoplayback?id=f77b30bbef2cb792&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednz7&ms=nxu&mv=m&pl=25&sc=yes&ei=sKPZXKumBseA1wL10ruYCw&susc=ph&app=fife&mime=video/mp4&dur=6460.000&lmt=1554769944629325&mt=1557767014&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557774288&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=204374BA861C368305A70B62472443E803A31C27AE015C31E43CA44400E8F48A.9CC80A9F97FCAFD885CA6D22E6DAFBE21B311D3538EAB8E4DFE0B8486632C282&key=us0","default":false}]},{"name":"Phi Vụ Tống Tiền","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/phi-vu-tong-tien_9613/xem-phim/"},"nameOrigin":"Arsenal","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fphi-vu-tong-tien-arsenal-2017.jpg%3Fsize%3D300"},"directors":["Steven C. Miller"],"actors":["Nicolas Cage","John Cusack","Adrian Grenier","Johnathon Schaech","Lydia Hull"],"genres":["Phim Hành Động","Phim Phiêu Lưu"],"countries":["Mỹ"],"duration":93,"desc":"Phi Vụ Tống Tiền, Arsenal (2017) ​là một bộ phim hành động vừa được ra mắt năm 2017 do Mỹ sản xuất xoay quanh câu chuyện về tình anh em của Jp và Mikey cũng như những khó khăn thử thách mà họ phải vượt qua.Trong phim tuy sau khi lớn lên cả ha đều có địa vị xã hội khác nhau nhưng tình cảm anh em giữa họ vẫn thân thiết như ngày nào, bằng chứng là khi biết tinh anh trai của mình bị bắt cóc Jp đã bất chấp nguy hiểm đánh đổi tất cả để đương đầu với tên trùm Eddie King cứu anh trai.","embeds":[{"resolution":360,"embedUrl":"link_video_chua_duoc_xu_ly","default":false}]},{"name":"Thám Tử Lừng Danh Conan: Cơn Ác Mộng Đen Tối","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tham-tu-lung-danh-conan-con-ac-mong-den-toi_9530/xem-phim/"},"nameOrigin":"Detective Conan: The Darkest Nightmare","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftham-tu-lung-danh-conan-con-ac-mong-den-toi-detective-conan-the-darkest-nightmare-2016.jpg%3Fsize%3D300"},"directors":["Kobun Shizuno"],"actors":["Nhiều diễn viên"],"genres":["Phim Hành Động","Phim Hoạt Hình","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Nhật Bản"],"duration":90,"desc":" Vào một đêm tối, cảnh sát Nhật Bản bị đột kích bởi một gián điệp. Những tài liệu mật của những cơ quan tình báo hàng đầu như : MI6 (Anh), BDN (Đức), CIA (Mỹ) và cơ quan FBI – Cục Điều Tra Liên Bang Mỹ có nguy cơ bị đánh cắp. Tuy nhiên những nhân viên an ninh phụ trách An Ninh Quốc Gia do Amuro chỉ huy đã xuất hiện kịp thời. Tên gián điệp đã đánh cắp một chiếc xe và tìm đường tẩu thoát. Trong lúc truy đuổi Amuro cùng các nhân viên an ninh và tên gián điệp đã bị mắc kẹt trên đường cao tốc dưới cái nóng gay gắt và trước khi xảy ra một vụ tai nạn liên hoàn, chiếc xe của tên gian điệp đã bị bắn rơi khỏi đường cao tốc bởi viên đạn từ khẩu súng trường của điệp viên FBI – Akai Shuuichi.Ngày hôm sau, Conan cùng các bạn đến thăm quan một thủy cung mới được tu sửa của Tokyo. Dưới đu quay khổng lồ, nơi thu hút khách du lịch của thủy cung, Conan bắt gặp một người phụ nữ xinh đẹp, quyến rũ bị thương và đang ở một mình. Đôi mắt của cô mang hai màu khác nhau. Nhưng cô gái đang trong tình trạng bị mất trí nhớ, cô thậm chí không thể nhớ tên của bản thân mình và chiếc điện thoại di động cô mang theo người cũng đã bị hỏng. Conan và các bạn của mình hứa sẽ giúp cô lấy lại trí nhớ, vì vậy họ đã ở lại cùng cô gái. Vermouth đã đứng sau quan sát mọi chuyện. Cô rút ra một khẩu súng giảm thanh, đồng thời nói với thiết bị liên lạc bí mật: “Đã diễn ra theo đúng kế hoạch, Gin.” Bộ phim  được công chiếu vào ngày 16 tháng 4 năm 2016 tại Nhật Bản. Phim sẽ có sự xuất hiện của các thành viên Tổ chức Áo đen đã từng xuất hiện trong series: Gin, Vodka, Vermouth, Chianti, Korn, Kir, và Bourbon. Đồng thời trang web cũng đưa ra những gợi ý nhắc đến sự xuất hiện của nhân vật Rum, người chưa từng xuất hiện trước đó.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednld.googlevideo.com/videoplayback?id=86561544e37e41b2&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednld&ms=nxu&mv=m&pl=25&sc=yes&ei=SKDZXIO-NKyj8gODuIrIBQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6692.223&lmt=1550334245288824&mt=1557766110&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557773416&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=6BA3FE1125CE1380283DF88BF44495609AE068945FE1428483B440F113189A27.1AD40DA13D828021A28494EDFDC904C71C1993BD79B30E9E5C0B0D5E238853CA&key=us0","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5ednld.googlevideo.com/videoplayback?id=86561544e37e41b2&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednld&ms=nxu&mv=m&pl=25&sc=yes&ei=SKDZXNq8NM2H8gPs36TADg&susc=ph&app=fife&mime=video/mp4&dur=6692.223&lmt=1550327960276046&mt=1557766110&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557773416&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=22170B72C78E731A16DBF4D285AF4E997F0DD823F96D8A7941B3860CEFA7EC3C.1A1183137E1026D1D9FCE8477723990D44062E8B2A4C3855242DF9FD449E6EDF&key=us0","default":false}]},{"name":"Nhóc Trùm","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/nhoc-trum_9556/xem-phim/"},"nameOrigin":"The Boss Baby","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fnhoc-trum-the-boss-baby-2017.jpg%3Fsize%3D300"},"directors":["Tom Mcgrath"],"actors":["Steve Buscemi","Tobey Maguire","Lisa Kudrow"],"genres":["Phim Hài Hước","Phim Hoạt Hình","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":100,"desc":"Phim The Boss Baby - Nhóc Trùm kể về câu chuyện cậu bé Tim 7 tuổi vốn dĩ đang có một cuộc sống rất ấm êm và đầy màu hồng thì bỗng dưng phải đối mặt với “biến cố” lớn trong đời: có một đứa em trai và phải học cách làm anh. Mọi khi cậu luôn là tâm điểm trong mắt bố mẹ, nhưng giờ đây Tim phải chấp nhận san sẻ tình yêu thương. Chưa hết, đứa em trai quái chiêu của cậu còn “thống trị” toàn bộ căn nhà, bắt nạt Tim và luôn khóc thét trước mặt bố mẹ để dành quyền được dỗ dành. Thế nhưng, em bé không còn “bé” như họ tưởng, “Nhóc trùm” nói giọng người lớn và cư xử như một dân anh chị, nhân vật bí ẩn bên trong lốt em bé này đến từ đâu và với mục đích gì?","embeds":[{"resolution":360,"embedUrl":"https://r6---sn-4g5e6n76.googlevideo.com/videoplayback?id=84b70dab4815a53d&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6n76&ms=nxu&mv=m&pl=25&sc=yes&ei=uKPZXKdQla3yA9_ptcgG&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5873.278&lmt=1552001095661441&mt=1557767014&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557774296&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=31C5997FB7712EB21B9569750A7A05C58D965CC448565C8B834E50640252966F.4045482A2761E9027D73CC878371DB913862D3FDF7FDEB78BBEE39025DC302E3&key=us0","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5edns6.googlevideo.com/videoplayback?id=84b70dab4815a53d&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns6&ms=nxu&mv=m&pl=25&sc=yes&ei=uKPZXNWPAdPI8gOtnJDoCg&susc=ph&app=fife&mime=video/mp4&dur=5873.278&lmt=1551998222807793&mt=1557767014&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557774296&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=B9A4D37BC1CF36E4DA7DD52FBF7E6780DBEE9D7A02C0FAB9596C6BD66EE22245.8F38B254E6A7F60AEB82BA8A92166498FA66920C066EE35AB4F8C97CFE8F071B&key=us0","default":false}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/the-boss-baby-2017/1"},{"name":"Sát Thủ Tái Xuất","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/sat-thu-tai-xuat_9245/xem-phim/"},"nameOrigin":"Mechanic: Resurrection","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fsat-thu-tai-xuat-mechanic-resurrection-2016.jpg%3Fsize%3D300"},"directors":["Dennis Gansel"],"actors":["Jason Statham","Jessica Alba","Tommy Lee Jones"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":120,"desc":"Phim Mechanic: Resurrection -  Jason Statham dường như đã trở thành một thương hiệu uy tín cho những bom tấn hành động đỉnh cao của Holywood, điển hình như những siêu phẩm Furious 7, The Transporter, The Expendables… Vào tháng 8 tới đây, anh sẽ trở lại màn ảnh lớn với một nhân vật rất đậm chất Statham: chàng sát thủ Arthur Bishop khét tiếng trong MECHANIC: RESURRECTION.Arthur Bishop từng là một “thợ máy” – từ lóng mà giới Mafia dành cho những kẻ giết thuê máu lạnh. Sở trường của anh là tạo dựng những vụ thủ tiêu giết người như những tai nạn xấu số hoặc tự tử. MECHANIC: RESURRECTION, đã 5 năm kể từ khi anh lui về ở ẩn và tìm được tình yêu của đời mình: Gina (Jessica Alba thủ vai). Vậy nhưng quá khứ sát thủ có vẻ vẫn chưa từ bỏ anh khi Gina bị một băng đảng tội phạm bí ẩn bắt cóc và yêu cầu anh phải thực hiện 3 vụ ám sát. Tất nhiên, Bishop, gã sát thủ cứng đầu và kiêu hãnh, từ chối yêu cầu đó, bắt tay cùng một trong 3 nạn nhân trong danh sách đen, và bắt đầu cuộc săn giết bọn bắt cóc để cứu lấy mỹ nhân.Trong MECHANIC: RESURRECTION, người xem đã được tận mắt chứng kiến cảnh Bishop thể hiện kĩ năng ám sát một tên tài phiệt tại một hồ bơi nguy hiểm nhất nhì thế giới. Nhịp phim dồn dập pha chút hài hước, kết hợp với yếu tố hành động được nâng lên một tầm cao mới khiến người xem không thể chờ đợi để được ra rạp xem gã “thợ máy” này làm việc.MECHANIC: RESURRECTION được quay tại Bangkok, Thái Lan với sự chỉ đạo điện ảnh của Dennis Gansel (We Are The Night). Bộ phim có sự góp mặt của những tên tuổi gạo cội của Holywood như Jason Statham, Jessica Alba, Tommy Lee Jones, và sự xuất hiện đặc biệt của Dương Tử Quỳnh. Nối tiếp thành công 62 triệu USD doanh thu của phần một năm 2011","embeds":[{"resolution":360,"embedUrl":"https://r6---sn-4g5e6nez.googlevideo.com/videoplayback?id=b0f8adc5d6b7f05a&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nez&ms=nxu&mv=m&pl=25&sc=yes&ei=DprZXOC1Nsby1gKk_62QCg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5919.114&lmt=1548791516258151&mt=1557764512&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557771822&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=0BFFAFE9D75FBECE65827605FDB1EE20FD4D426565EFB0F7DBED3A37631A46B0.01A116E6465A4FAB975F22BCE4ED4EA1BBFDF1E347FAF44EFB02D73A706C0D36&key=us0","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5e6nez.googlevideo.com/videoplayback?id=b0f8adc5d6b7f05a&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nez&ms=nxu&mv=m&pl=25&sc=yes&ei=DprZXO60NtKZ8gOw9qWABg&susc=ph&app=fife&mime=video/mp4&dur=5919.114&lmt=1548783669393727&mt=1557764512&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557771822&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=B6ACE03D5EA7298ADF7D706A64A6166E8AE8C4836E05DAACE4188364D0CF2415.578FA6A715EDA7061913A4B39F7EE2A56301EA6AC2D708D9541EF819FA5F8920&key=us0","default":false},{"resolution":1080,"embedUrl":"https://r1---sn-4g5e6nl6.googlevideo.com/videoplayback?id=addc50c1d4be5018&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nl6&ms=nxu&mv=m&pl=25&sc=yes&ei=DprZXPixNq2S8gOI07awBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5919.114&lmt=1548788654330694&mt=1557764512&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557771822&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=D7A5C764A94356DA30F520691F2ADB2D722316A616360E4D48C685D58CC7B3BD.14DE55715C1C4F04D41040FE21DB2B948579451B06775041B51AC7FF7E252FDF&key=us0","default":false}]},{"name":"Jack Reacher: Không Quay Đầu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/jack-reacher-khong-quay-dau_9449/xem-phim/"},"nameOrigin":"Jack Reacher: Never Go Back","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fjack-reacher-khong-quay-dau-jack-reacher-never-go-back-2016.jpg%3Fsize%3D300"},"directors":["Edward Zwick"],"actors":["Tom Cruise","Cobie Smulders","Robert Knepper"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Phiêu Lưu"],"countries":["Mỹ"],"duration":118,"desc":"Jack Reacher (Tom Cruise) trở lại với thương hiệu riêng trong phần tiếp theo rất được mong đợi, Jack Reacher: Never Go Back. Câu chuyện chính lần này bắt đầu từ Susan Turner (Cobie Smulders) là thiếu tá quân đội, người đứng đầu đơn vị điều tra cũ của Reacher, bị bắt vì tội phản quốc. Biết rằng cô ấy vô tội, Reacher đã giải cứu cô ra khỏi nhà tù và phát hiện ra sự thật đằng sau một âm mưu chính phủ lớn để xóa tên của họ. Trên đường chạy trốn như kẻ đào tẩu khỏi luật pháp, Reacher phát hiện ra một bí mật tiềm ẩn từ quá khứ của mình mà có thể thay đổi cuộc sống của mình mãi mãi. Dựa trên \"Jack Reacher: Never Go Back,\" cuốn tiểu thuyết thứ 18 của tác giả Lee Child, đây là một trong những cuốn bán chạy nhất của Jack Reacher, phần truyện này đã có 100 triệu cuốn được bán trên toàn thế giới.Jack Reacher: Never Go Back có sự tham gia của các sao như: Aldis Hodge, Danika Yarosh, Patrick Heusinger, Holt McCallany và Robert Knepper. Bộ phim được đạo diễn bởi Edward Zwick (The Last Samurai, Blood Diamond), kịch bản do Richard Wenk (The Expendables 2, The Equalizer) và Marshall Herskovitz (Love & Other Drugs, The Last Samurai) cùng Zwick đảm nhận.Phim được sản xuất bởi Don Granger (Mission: Impossible - Rogue Nation, Jack Reacher), David Ellison Skydance Media và Dana Goldberg (Mission: Impossible - Rogue Nation, Geostorm), và Christopher McQuarrie (Mission: Impossible - Rogue Nation, Valkyrie ). Điều hành sản xuất sẽ do Paula Wagner (War of the Worlds, The Other) và Herb Gains (Thẩm phán, Non-Stop).","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5edned.googlevideo.com/videoplayback?id=c4cbf619fa1780ae&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edned&ms=nxu&mv=m&pl=25&sc=yes&ei=XIrZXIH-Gouv1wLzkojIBQ&susc=ph&app=fife&mime=video/mp4&dur=7089.098&lmt=1550657988586285&mt=1557760489&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767804&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=DAFF743A2B2D902ACCA26F3D3E25B0906EA011120FA82486803246DBAAC08FAA.7D20778FFBF029FF56FB824A9C1E773A653CBE0DB4AE201417C4FE61D7325AFD&key=us0","default":false},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6ney.googlevideo.com/videoplayback?id=c4cbf619fa1780ae&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ney&ms=nxu&mv=m&pl=25&sc=yes&ei=XIrZXKWrG8qc8gOd5ai4Bw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7089.098&lmt=1550667401410267&mt=1557760489&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767804&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=9297F8A603152B621251BBEDA68D19D36DD55B2A475BE7314952742C328E0C4E.0F7441399889D688BA02DC72CB683662AB82DA19ADF2D82816AC9C5E15476FC2&key=us0","default":true}]},{"name":"Asura: Thành Phố Điên Rồ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/asura-thanh-pho-dien-ro_9458/xem-phim/"},"nameOrigin":"Asura: The City of Madness","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fasura-thanh-pho-dien-ro-asura-the-city-of-madness-2016.jpg%3Fsize%3D300"},"directors":["Sung-su Kim"],"actors":["Man sik Jeong","Jung min Hwang","Ji hun Ju","Jung Woo Sung"],"genres":["Phim Hành Động","Phim Hình Sự","Phim Tâm Lý"],"countries":["Hàn Quốc"],"duration":136,"desc":" Sau sự kiện Toronto International Film Festival 2016 vừa qua đã có rất nhiều dự án phim của Hàn Quốc tung trailer cũng như hình ảnh, trong đó Asura: The City of Madness đã khiến những khán giả hâm mộ điện ảnh của xứ Hàn đứng ngồi không yên với 1 đoạn trailer ngắn của mình. Bộ phim quy tụ dàn diễn viên hạng A gồm Jung Woo Sung, Hwang Jung Min, Joo Ji Hoon, Kwak Do Won và Jung Man Sik xứng đáng là tác phẩm đáng được chờ đợi nhất vào nửa cuối năm ở Hàn Quốc. Ngoài dàn diễn viên đỉnh thì qua trailer chúng ta có thể thấy phim sẽ có một cốt truyện rất lôi cuốn, những cảnh quay chân thực, sắc nét cùng những pha hành động bạo lực cực chất. Chắc chắn các Fan của phim Hàn nói riêng và những người hâm mộ dòng phim hành động, đấu trí đỉnh cao nói chung sẽ phải háo hức và hào hứng chờ đón khi bộ phim được chính thức ra mắt. Asura: The City of Madness đã có buổi công chiếu sớm vào ngày 23.09 dành cho khách VIP cũng như nhiều ngôi sao nổi tiếng. Phim sẽ chính thức được ra mắt vào hôm nay 28.09 tại xứ Hàn và 14.10.2016 tại Mỹ.","embeds":[{"resolution":360,"embedUrl":"https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=13&ct=1557767213&rver=7.1.6819.0&wp=MBI_SSL_SHARED&wreply=https:%2F%2Fonedrive.live.com%2Fdownload%3Fcid%3D375CDB1B890B3A36%26resid%3D375CDB1B890B3A36%252152387%26authkey%3DAIsdychPrWGxs-g&lc=1033&id=250206&cbcxt=sky&cbcxt=sky","default":true}]},{"name":"Trân Đánh Inchon","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tran-danh-inchon_9417/xem-phim/"},"nameOrigin":"Operation Chromite","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftran-danh-inchon-operation-chromite-2016.jpg%3Fsize%3D300"},"directors":["John H. Lee"],"actors":["Jin Se Yun","Lee Beom Soo","Lee Jung Jae"],"genres":["Phim Hành Động","Phim Chiến Tranh","Phim Thuyết Minh"],"countries":["Hàn Quốc"],"duration":110,"desc":"Phim Trận Đánh Inchon – là một trong những bộ phim điện ảnh đình đám nhất Hàn Quốc ra mắt vào cuối năm 2016, đây tác phẩm điện ảnh do Lee Jung Jae cùng hợp tác với ngôi sao hành động hàng đầu hollywood – Liam Neeson cùng thực hiện.Trận Đánh Incheon là bộ phim bom tấn về chiến tranh dựa trên những sự kiện có thật xảy ra trong trận đánh Inchon giữa quân đội hai miền Triều Tiên vào năm 1950. Tại đó, đại úy hải quân Jang Hak Soo cùng tướng Douglas MacArthur người Mỹ và 8 người lính Nam Hàn phải thực hiện một nhiệm vụ bí mật để có thể giúp cho các đồng đội hạ cánh an toàn.Đảm nhiệm vai chính trong Operation Chromite là tài tử Lee Jung Jae và ngôi sao Hollywood Liam Neeson. Nhân vật ông sẽ đảm nhiệm là viên tướng lừng danh Douglas MacArthur.","embeds":[{"resolution":360,"embedUrl":"https://r6---sn-4g5edne6.googlevideo.com/videoplayback?id=84a2cc25b409779b&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edne6&ms=nxu&mv=u&pl=25&sc=yes&ei=WqDZXNzWKZfP1wKPqJ6YAQ&susc=ph&app=fife&mime=video/mp4&dur=6634.800&lmt=1552708896004807&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773434&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=2DC231C40A92A2632A6FB5F63B44182CEDF184843F124B7D5355F8CA48E675CC.2E955F971E5DF8CCE9B07FACA861CA8061FF709986CAA1E6ED203CCBDE2E82BE&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5edne6.googlevideo.com/videoplayback?id=84a2cc25b409779b&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edne6&ms=nxu&mv=u&pl=25&sc=yes&ei=WqDZXMSoLpfP1wKPqJ6YAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6634.800&lmt=1552711242447878&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773434&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=547BE1537125B7367E421514429EA30CF7C53549EF02C1180FA827C780EED82A.68CC183C5723870CDA04F3D8AE073A491F763CA6C135FD09AEA17F23F2ED306E&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r6---sn-4g5edne6.googlevideo.com/videoplayback?id=84a2cc25b409779b&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edne6&ms=nxu&mv=u&pl=25&sc=yes&ei=WqDZXPTpMPmY8gP-1IS4Cg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6634.800&lmt=1552711355051257&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773434&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=24AC9D4636A05AF4C9DE8151FDF34A73F586922D6E5C8C4A34A9A1B61DDBC952.DD1CFFDD1365C55E61CC7F8370C5326721EBB864F63C4B7E9B8DD240978AD456&key=us0#f1080p","default":true}]},{"name":"Kho Tàng Đẫm Máu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/kho-tang-dam-mau_9416/xem-phim/"},"nameOrigin":"Warrant the Reborn","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fkho-tang-dam-mau-warrant-the-reborn-2017.jpg%3Fsize%3D300"},"directors":["Zhou Xiaopeng"],"actors":["Enjie Lu","Qiang Zheng","Wei Dong Chen"],"genres":["Phim Phiêu Lưu","Phim Kinh Dị","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":90,"desc":"Kho Tàng Đẫm Máu – Warrant The Rebo là một bộ phim kinh dị do Trung Quốc sản xuất xoay quanh câu chuyện về một nhóm người đang muốn khám phá kho tàng của vua Càng Long.Trong phim nhóm người này đã tìm được một tấm bảng đò và lần theo dấu vết của tấm bảng đò họ đã bước chân đến một vùng quê hẻo lánh với vô vàng những điều kỳ lạ huyền bí xảy ra. Những chuyện kỳ lạ mà nhóm bạn này gặp phải là gì và liệu thật sự có kho báu như họ nghỉ hay không mời các bạn đón xem bộ phim Kho Tàng Đẫm Máu – Warrant The Rebo để biết được những diễn biến tiếp theo của câu chuyện nhé.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5ednss.googlevideo.com/videoplayback?id=6679751d2935842c&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednss&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=NYrZXICwC8-R8gPliLj4DQ&susc=ph&app=fife&mime=video/mp4&dur=5363.159&lmt=1551261089247775&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557767765&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=3A29338A6D8938BD4443AD9D1AC1D3A92E90E88B41BD0A070D35666662FA0D2A.D9AB65CF5C48140D5EE19B7199C6BE1A0B86AFF3628E30B0CDC9D7C0CA9696AC&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r5---sn-4g5e6nss.googlevideo.com/videoplayback?id=6679751d2935842c&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nss&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=NYrZXIPoDdKZ8gOw9qWABg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5363.159&lmt=1551267371164708&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557767765&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=70A9BDE26DF4E42943D1D870B58426240F4005B6FB265C7CDEDC5AAFE970138D.D5571A104D2B230AD1F97A4365E459E4816EF1F740DF2656E1B6C6DEC4279CE2&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r5---sn-4g5ednss.googlevideo.com/videoplayback?id=6679751d2935842c&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednss&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=NYrZXOOvEIe11gLou7m4CQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5363.159&lmt=1551267605464132&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557767765&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=A946F43D996BFDF41089F2A43B672C63199F693CC5BBD04FC53C8A94206E1569.349D7427A3C8917B96C875135F715295B5AFB58449499F281B8A41D90FA7F9A6&key=us0#f1080p","default":true}]},{"name":"Năm Mươi Sắc Thái Đen Tối","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/nam-muoi-sac-thai-den-toi_9395/xem-phim/"},"nameOrigin":"Fifty Shades Darker","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fnam-muoi-sac-thai-den-toi-fifty-shades-darker-2017.jpg%3Fsize%3D300"},"directors":["James Foley"],"actors":["Dakota Johnson","Jamie Dornan","Tyler Hoechlin"],"genres":["Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":120,"desc":"","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5ednz7.googlevideo.com/videoplayback?id=c2a8e4cc7095c0c5&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednz7&ms=nxu&mv=u&pl=25&sc=yes&ei=rpfZXPv-Kof31gKYyp-YDg&susc=ph&app=fife&mime=video/mp4&dur=7068.641&lmt=1552333589203973&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771214&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=48511415074E801C5B7D8EF7A6246AA47C0F7DCE77CFF23B6ED3DEF66EC584F1.B32D8DF5096F23CD7D7057E46DBC49C862D4A495FC04DDF2E1BDE62A9BB509&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5ednz7.googlevideo.com/videoplayback?id=c2a8e4cc7095c0c5&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednz7&ms=nxu&mv=u&pl=25&sc=yes&ei=rpfZXKGfLcqc8gOd5ai4Bw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7068.641&lmt=1552339659643747&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771214&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=0BC5F2D28078E787010562EED76D25C00448913486CA96C129BCC54DDC245C7B.49F5CCC0300B0E86BF6F8508F7EE74A223FC16AA8F5ECA6792DBF750D69D8FC2&key=us0#f720p","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/fifty-shades-darker-2017/1"},{"name":"Cơ Trưởng Sully","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/co-truong-sully_9407/xem-phim/"},"nameOrigin":"Sully","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fco-truong-sully-sully-2016.jpg%3Fsize%3D300"},"directors":["Clint Eastwood"],"actors":["Tom Hanks"],"genres":["Phim Chiến Tranh","Phim Phiêu Lưu","Phim Khoa học Tài liệu","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":100,"desc":"Phim Cơ Trưởng Sully - Sully xoang quanh câu truyện cơ trưởng \"Sully\" Sullenberger đáp chiếc máy bay trong tình trạng động cơ tê liệt hoàn toàn xuống con sông Hudson mà hơn 150 hành khách không một ai bị thiệt mạng . Tuy nhiên, trong khi Sully được công chúng và truyền thông tung hô như một anh hùng bởi tài nghệ chưa từng thấy từ trước đến nay, thì một cuộc điều tra được tiến hành có khả năng hủy hoại hoàn toàn danh tiếng cũng như sự nghiệp của ông.","embeds":[{"resolution":360,"embedUrl":"https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=13&ct=1557767242&rver=7.1.6819.0&wp=MBI_SSL_SHARED&wreply=https:%2F%2Fonedrive.live.com%2Fdownload%3Fcid%3D375CDB1B890B3A36%26resid%3D375CDB1B890B3A36%252152385%26authkey%3DANWZfSEQu1YS76Q&lc=1033&id=250206&cbcxt=sky&cbcxt=sky","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/sully-2016/1"},{"name":"Tuyên Ngôn Độc Thân","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/tuyen-ngon-doc-than_9420/xem-phim/"},"nameOrigin":"How To Be Single","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftuyen-ngon-doc-than-how-to-be-single-2016.jpg%3Fsize%3D300"},"directors":["Christian Ditter"],"actors":["Dakota Johnson","Rebel Wilson","Leslie Mann"],"genres":["Phim Hài Hước","Phim Tâm Lý"],"countries":["Mỹ"],"duration":110,"desc":"","embeds":[{"resolution":360,"embedUrl":"https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=13&ct=1557767262&rver=7.1.6819.0&wp=MBI_SSL_SHARED&wreply=https:%2F%2Fonedrive.live.com%2Fdownload%3Fcid%3D375CDB1B890B3A36%26resid%3D375CDB1B890B3A36%252152388%26authkey%3DAKA2gpg9RD3YV4g&lc=1033&id=250206&cbcxt=sky&cbcxt=sky","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/how-to-be-single-2016/1"},{"name":"Vệ Sĩ Siêu Cấp","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ve-si-sieu-cap_9386/xem-phim/"},"nameOrigin":"The Super Bodyguard","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fve-si-sieu-cap-the-super-bodyguard-2017.jpg%3Fsize%3D300"},"directors":["Yue Song"],"actors":["Lý Du Phi","Trần Tuệ Lâm","Trâu Triệu Long"],"genres":["Phim Hành Động","Phim Tâm Lý","Phim Võ Thuật","Phim Thuyết Minh"],"countries":["Trung Quốc"],"duration":93,"desc":" Phim Vệ Sĩ Siêu Cấp - Phim xoay quanh câu chuyện báo thù của chàng trai giỏi võ (Nhạc Tùng) đang trên đường tìm kiếm vị sư huynh của mình Lý Giang (Thích Hành Vũ) vô tình trở thành vệ sĩ cho một thiên kim tiểu thư Lý Phỉ Phỉ (Lý Vũ Phỉ), làm những chuyện hết sức điên rồ. Phim với sự tham gia của các diễn viên chính: Nhạc Tùng, Thích Hành Vũ, Lý Vũ Phỉ, Trâu Triệu Long, Trần Huệ Mẫn…Chúc các bạn xem phim Vệ Sĩ Siêu Cấp vui vẻ!.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5ednsl.googlevideo.com/videoplayback?id=2e149a60341e16ce&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsl&ms=nxu&mv=m&pl=25&sc=yes&ei=PYrZXMjYFYuv1wLzkojIBQ&susc=ph&app=fife&mime=video/mp4&dur=5343.120&lmt=1550293402126404&mt=1557760489&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767773&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=ABF77D3037A3305DB4ED946FFEF7052823484DC3102595B7D09BFD2979A145D0.1DCFF34E2D46FFF1B1AFCDBF660FD6DC63F1F450352D98B8209E3CE9F207AC53&key=us0","default":false},{"resolution":720,"embedUrl":"https://r4---sn-4g5e6nle.googlevideo.com/videoplayback?id=efce4616b66d70a4&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nle&ms=nxu&mv=m&pl=25&sc=yes&ei=PYrZXKW_FY-T8gP_uZzIAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5343.120&lmt=1550302137053623&mt=1557760489&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767773&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=3EBBC0C9D13B64641CC78A53BF0B8CF3D2016D28C5FEA0C911EDDCE90543FD3F.C799AC50393304931250CFBC86BA5844136245132E25E44C2E371B8448C7E717&key=us0","default":true},{"resolution":1080,"embedUrl":"https://r4---sn-4g5e6nle.googlevideo.com/videoplayback?id=efce4616b66d70a4&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nle&ms=nxu&mv=m&pl=25&sc=yes&ei=PYrZXOaRFqyj8gODuIrIBQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5343.120&lmt=1550302322512725&mt=1557760489&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557767773&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=6F98D62542589E1C7E72F7A8D7E72D842D815D700DE2536F74924BA35862FAE5.172EE89CF64327A0EEB6679D862B48584EA3CD4DE7699D9CFC7BA6638B7F6020&key=us0","default":false}]},{"name":"Người hầu gái","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/nguoi-hau-gai_9315/xem-phim/"},"nameOrigin":"The Handmaid","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fnguoi-hau-gai-the-handmaid-2016.jpg%3Fsize%3D300"},"directors":["Park Chan-Wook"],"actors":["Kim Min Hee","Kim Tae Ri","Ha Jung Woo","Cho Jin Woong"],"genres":["Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Hàn Quốc"],"duration":144,"desc":"Được ví như “50 sắc thái” của Hàn Quốc, bộ phim Người Hầu Gái - The Handmaiden đang làm mưa làm gió  ở hạng mục tranh giải chính - Cành Cọ Vàng - tại Liên hoan phim Cannes hồi tháng 5.Được dán nhãn 19+ với hàng loạt cảnh nóng “bỏng mắt” với chủ đề bạo dâm và đồng tính nữ không kém Kim Bình Mai hay 50 sắc thái, ngay khi vừa công chiếu, Người Hầu Gái đã gây sốt tại Hàn Quốc và lan rộng cả khu vực châu Á. Nội dung phim kể về cuộc sống Hàn Quốc những năm đầu thế kỷ 20 với ở vùng đất loạn ly, khi những lão quý tộc Triều Tiên cấu kết với giới quan lại người Nhật, còn những thân phận nhỏ bé rơi vào cảnh bế tắc. Một cô gái xuất thân thấp hèn, chuyên làm nghề móc túi tên Sook-hee được gã lừa đảo xưng là Bá tước Fujiwara thuê làm người hầu gái cho quý cô giàu có Hideko. Fujiwara cần Sook-hee làm cầu nối để độc chiếm tiểu thư Hideko trước thời điểm nàng nhận lời cầu hôn từ người chú dượng độc đoán Kouzuki. Khi cô hầu gái bé nhỏ đem lòng yêu cô chủ, bộ mặt thật của cả bốn người trong mối quan hệ phức tạp dần được phơi bày với nhiều bất ngờ gây rùng mình. Trong cuộc sống đầy mưu mô và nam trị, con người luôn phải lừa lọc nhau để sinh tồn và sự ngây thơ là tội lỗi. Bốn nhân vật chính trong phim - hầu gái Sook-hee, quý cô Hideko, đạo chích Fujiwara và người dượng độc đoán Kouzuki - tượng trưng cho các nhân vật trong thế giới này. Họ tạo thành bốn góc của một sơ đồ hình thang giả tưởng mà trong đó hai góc dưới yếm thế thuộc về Hideko và Sook-hee.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5ednsy.googlevideo.com/videoplayback?id=ee95725e0256833d&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsy&ms=nxu&mv=u&pl=25&sc=yes&ei=uJfZXMSqH5qJ1gKvwrPIDw&susc=ph&app=fife&mime=video/mp4&dur=8345.112&lmt=1551218210051403&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771224&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=4EB60BEB94CE66BD31848D0B95E41F52338F6AFBAE5F6F6B027E98B9F0E72E2A.6B9DDD3A3198ADED76B7DC613E2082EFC63117331DF7E99B11D044815C73825C&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5e6nld.googlevideo.com/videoplayback?id=ee95725e0256833d&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nld&ms=nxu&mv=u&pl=25&sc=yes&ei=uJfZXPHbIZiJ1wL0yIXQDA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=8345.112&lmt=1551561267516896&mt=1557763685&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557771224&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=404670C2E711C0AF3ADCC0E8684A4AA111304ADADA2281B5A83722DBAFA3938B.C6E2722A4F1C3E14F322AE7FB89A750E1E1DC27B79B3756253967AE7B6AA1738&key=us0#f720p","default":true}]},{"name":"Star Trek: Kẻ Phản Bội","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/star-trek-ke-phan-boi_9305/xem-phim/"},"nameOrigin":"Star Trek: Renegades","year":"2015","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fstar-trek-ke-phan-boi-star-trek-renegades-2015.jpg%3Fsize%3D300"},"directors":["Tim Russ"],"actors":["Adrienne Wilkinson","Walter Koenig"],"genres":["Phim Hành Động","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":88,"desc":"Star Trek: Kẻ Phản Bội - Star Trek: Renegades :Đã gần mười năm sau khi Voyager trở về từ vùng đồng bằng Quadrant, và Liên Đoàn đang trong một cuộc khủng hoảng. Nhà cung cấp chính của Liên đoàn chất tinh thể Dilithium bỗng dưng biến mất. Không gian và thời gian đã cách ly vài hành tinh tiếp xúc với bên ngoài, và hiện tượng này không bình thường chút nào: Có kẻ nào hoặc vật gì đó đã khiến nó xảy ra. Cần phải có những biện mạnh mẽ và quyết liệt cũng như bí mật để tìm cho được nguyên nhân và lũ phản bội. Nội dung Star Trek: Kẻ Phản Bội - Star Trek: Renegades :Đã gần mười năm sau khi Voyager trở về từ vùng đồng bằng Quadrant, và Liên Đoàn đang trong một cuộc khủng hoảng. Nhà cung cấp chính của Liên đoàn chất tinh thể Dilithium bỗng dưng biến mất. Không gian và thời gian đã cách ly vài hành tinh tiếp xúc với bên ngoài, và hiện tượng này không bình thường chút nào: Có kẻ nào hoặc vật gì đó đã khiến nó xảy ra. Cần phải có những biện mạnh mẽ và quyết liệt cũng như bí mật để tìm cho được nguyên nhân và lũ phản bội.","embeds":[{"resolution":360,"embedUrl":"https://lh3.googleusercontent.com/I327gWKzLUHtV7_SsncJn4rObUkrj4oaQznmzy56NXm9dL3W2zL3KKPbvRv7yBF1zMHtFCgU2SayMsiwIjlG0f4MYTj_A7_uYl4Uer2yJhibx9cXQlLaYtN57zBHkMhlcITTwg=m18","default":false},{"resolution":720,"embedUrl":"https://lh3.googleusercontent.com/I327gWKzLUHtV7_SsncJn4rObUkrj4oaQznmzy56NXm9dL3W2zL3KKPbvRv7yBF1zMHtFCgU2SayMsiwIjlG0f4MYTj_A7_uYl4Uer2yJhibx9cXQlLaYtN57zBHkMhlcITTwg=m22","default":true}]},{"name":"Phù Thủy Tối Thượng","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/phu-thuy-toi-thuong_9303/xem-phim/"},"nameOrigin":"Doctor Strange","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fphu-thuy-toi-thuong-doctor-strange-2016.jpg%3Fsize%3D300"},"directors":["Scott Derrickson"],"actors":["Benedict Cumberbatch","Rachel McAdams","Benedict Wong"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":110,"desc":"Phim Phù Thủy Tối Thượng - Doctor Strange kể về  Bác sĩ Stephen Strange là một trong những bác sĩ phẫu thuật tài năng nhất trên thế giới này. Tuy nhiên, thảm họa xảy ra khi đôi tay của Strange vỡ nát và trở nên vô dụng sau một tai nạn xe hơi thảm khốc. Dồn hết tài năng và kinh nghiệm của mình để hàn gắn cơ thể nhưng không thành công, vị bác sĩ tài ba trở nên thất vọng và chán nản. Ông nghĩ ông mất tất cả cho đến khi một ông lão bí ẩn truyền niềm tin cho ông, chữa lành vết thương cho ông ở Tibet. Nhưng trước khi lành vết thương, Strange phải trao quà cho người khác và học cách chấp nhận những điều tưởng chừng không thể chấp nhận được. Đó là món quà phép thuật.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5e6nsk.googlevideo.com/videoplayback?id=0e0bbb18ae46e689&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsk&ms=nxu&mv=u&pl=25&sc=yes&ei=OJDZXJaoD4eA1gK60JEo&susc=ph&app=fife&mime=video/mp4&dur=6898.718&lmt=1557051508587575&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557769304&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=E7CB6EDB2E9F66BF096940F6022522FBE78B03228BA0804B09586DC4F029E40C.DE9FDB8D9EA63CC4DB329C8BAC33C15D277069A24BBA9699CE793F60B2069E80&key=us0","default":false},{"resolution":720,"embedUrl":"https://r5---sn-4g5e6nsk.googlevideo.com/videoplayback?id=0e0bbb18ae46e689&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsk&ms=nxu&mv=u&pl=25&sc=yes&ei=OJDZXNO_D62S8gOI07awBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6898.718&lmt=1557054189498086&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557769304&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=06E777D308128CE0B9A279A32C2840F378B65B5B268A1A54C655F4F1A82BE9A0.6D7E023C44AA6179906D8B5089571CDBD077580E03E80F9D55FBBBB70F8EF9BB&key=us0","default":false},{"resolution":1080,"embedUrl":"https://r3---sn-4g5edne7.googlevideo.com/videoplayback?id=83c36274a7896582&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edne7&ms=nxu&mv=u&pl=25&sc=yes&ei=OJDZXPK_D4uv1wLzkojIBQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6898.718&lmt=1557053502276152&mt=1557761886&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557769304&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=3939EE06F8833381C598CF5EEFB15FA99E2E676ED63F909FAF5024C1F9E62FE3.9D37E610A3A4A90A9C6352EA2CBAB58DB542B0A7E48F983B8CF578BAD90FFF85&key=us0","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/doctor-strange-2016/1"},{"name":"Ben Hur","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ben-hur_9314/xem-phim/"},"nameOrigin":"Ben Hur","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fben-hur-ben-hur-2017.jpg%3Fsize%3D300"},"directors":["Timur Bekmambetov"],"actors":["Jack Huston","Nazanin Boniadi","Ayelet Zurer"],"genres":["Phim Hành Động","Phim Chiến Tranh","Phim Phiêu Lưu","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":123,"desc":" Nhà quý tộc Judah Ben-Hur (Jack Huston) bị người bạn thời thơ ấu và cũng là người em trai nuôi Messala (Toby Kebbell) cáo buộc tội ám sát không thành. Sau nhiều năm lênh đênh trên biển làm nô lệ cho người La Mã, Ben-Hur sống sót và quay trở lại quê nhà để trả thù. Ben-Hur đã thách thức người em trai nuôi của mình trong một cuộc đua xe ngựa. Với những thay đổi mãi mãi sau cuộc gặp gỡ với Chúa Giêsu thành Nazareth, liệu Ben-Hur có thể trả thù thành công?","embeds":[{"resolution":360,"embedUrl":"https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=13&ct=1557767274&rver=7.1.6819.0&wp=MBI_SSL_SHARED&wreply=https:%2F%2Fonedrive.live.com%2Fdownload%3Fcid%3D375CDB1B890B3A36%26resid%3D375CDB1B890B3A36%252152405%26authkey%3DAO89UBDOcOf3y30&lc=1033&id=250206&cbcxt=sky&cbcxt=sky","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/ben-hur-2016/1"},{"name":"Mưu Sát Tuổi Xuân","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/muu-sat-tuoi-xuan_9273/xem-phim/"},"nameOrigin":"Kill Time","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fmuu-sat-tuoi-xuan-kill-time-2016.jpg%3Fsize%3D300"},"directors":["Trần Quả"],"actors":["Angelababy","Trương Siêu","Trần Kinh Thiên"],"genres":["Phim Hình Sự","Phim Kinh Dị","Phim Tâm Lý"],"countries":["Trung Quốc"],"duration":127,"desc":" Phim Mưu Sát Tuổi Xuân - Kill Time 2016: Chuyển thể từ tiểu thuyết cùng tên, kể về cô gái Điền Tiểu Mạch (Angelababy) sắp cưới vị hôn phu Thịnh Tán (Trương Siêu), nhưng cái chết của cảnh sát Điền (Doãn Chú Thắng) – cha của Tiểu Mạch đã làm vỡ tan niềm hạnh phúc yên bình kia. Khi đang soạn lại các di vật của cha, Điền Tiểu Mạch tình cờ phát hiện ra cuốn sổ tay ghi chép các vụ án của cảnh sát Điền, rồi cứ thế rơi vào vòng xoáy của một vụ án bí ẩn chưa có lời giải từ mười năm trước. Chính vụ án đó cũng đưa cô trở về với những kí ức của mối tình đầu sâu sắc mà cũng đầy đau khổ. Cùng lúc đó, Tiểu Mạch được cô bạn thân Tiền Linh (Nhiệt Y Trát) tiết lộ về một cửa hàng online tên “miền ma nữ”, nơi bạn có thể mua được mọi thứ, thậm chí là cả những kí ức về tình yêu. Nhưng khi cô mua về một chiếc khăn lụa màu tím thần bí, thì hàng loạt các sự việc kì lạ đã xảy ra, mọi thứ dường như đều có liên quan đến vụ án bí ẩn kia và cậu bạn trai thời niên thiếu – Thu Thu (Nguyễn Kinh Thiên).","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednll.googlevideo.com/videoplayback?id=2d830c5b686ea808&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednll&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=8KDZXKHBINLM1wLQyZz4Bg&susc=ph&app=fife&mime=video/mp4&dur=7679.628&lmt=1551376483836390&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773584&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=A5A01031D94D4AA0ED7EDBCC675B4E367FB0E7EA664C810009B9817CEC975742.CD24D3EB64B067C53DB801E0D1BEB62CC57762DF2621D7E1096EA21ED03AADD6&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5e6nle.googlevideo.com/videoplayback?id=2d830c5b686ea808&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nle&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=8KDZXODzIoHA8gOosrGwCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7679.628&lmt=1551565960870819&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773584&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=63C3A5246BB43244F134AEDBFF0BA2A51681D036D42566A28E5B3CB21497FC4F.20D5291DC2CD56A5C0F9CA8F87505759A64AC65C7D746B8B1B0C663723805E95&key=us0#f720p","default":true},{"resolution":1080,"embedUrl":"https://r4---sn-4g5ednll.googlevideo.com/videoplayback?id=2d830c5b686ea808&itag=37&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednll&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=8KDZXO6zJZqJ1gKvwrPIDw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7679.628&lmt=1551566120549244&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773584&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=5D9EBB62653466D3DE7B4B6BB7912B7BA384DB79CFFB4D75D5D71741160EC85E.B35E6CDD7F77248E3300BB35DD889152125851A0EECDE3836CF4A1FAC46259C2&key=us0#f1080p","default":true}]},{"name":"Cánh Đồng Nhỏ: Đông/Xuân","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/canh-dong-nho-dong-xuan_9159/xem-phim/"},"nameOrigin":"Little Forest 2: Winter/Spring","year":"2015","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fdownload-canh-dong-nho-dongxuan-little-forest-2-winterspring-2015.jpg%3Fsize%3D300"},"directors":["Jun'ichi Mori"],"actors":["Ai Hashimoto","Mayu Matsuoka","Yôichi Nukumizu"],"genres":["Phim Tâm Lý"],"countries":["Nhật Bản"],"duration":120,"desc":"Manga thể loại slice-of-life tựa Little Forest của tác giả Daisuke Igarashi vừa nhận được lời mời chuyển thể thành live-action. Ai Hashimoto (diễn viên live-action I’ll Give It My All… Tomorrow, Another) sẽ nhận vai chính Ichiko.Cốt truyện nói về Ichiko sau khi rời khỏi thành phố để sống độc lập trong cộng đồng Komori ở Tohoku (Little Forest). Câu chuyện nói về bản chất và thực phẩm thay đổi theo mùa trong khi Ichiko thì nấu ăn mỗi ngày để duy trì cuộc sống độc lập của mình. Igarashi (tác giả Children of the Sea, Hanashippanashi) đã từng sống cuộc sống độc lập như Ichiko. Kinh nghiệm từ cuộc sống trong túp lều trên núi ở tỉnh Iwate Tohoku đã truyền cảm hứng cho câu chuyện.","embeds":[{"resolution":360,"embedUrl":"https://ia801906.us.archive.org/6/items/5459OtherYAMATO/13032--Other--Little.Forest.Winter.Spring.mp4","default":true}]},{"name":"X men: Ngày Cũ Của Tương Lai","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/x-men-ngay-cu-cua-tuong-lai_7583/xem-phim/"},"nameOrigin":"X Men: The Day Of Future Past","year":"2014","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fx-men-ngay-cu-cua-tuong-lai-x-men-the-day-of-future-past-2014.jpg%3Fsize%3D300"},"directors":["Bryan Singer"],"actors":["Phạm Băng Băng","Ian McKellen","Halle Berry","Hugh Jackman","Ellen Page","Jennifer Lawrence","Peter Dinklage"],"genres":["Phim Hành Động","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":null,"desc":"Ngày Cũ Của Tương Lai - X-men: Days of Future Past: Chuyến hành trình trở về quá khứ của những dị nhân đã cận kề. Những nhân vật quen thuộc của chúng ta một lần nữa sẽ quay trở lại màn ảnh rộng, sát cánh cùng chính con người trẻ tuổi của họ để tạo nên một lực lượng hùng mạnh nhằm thay đổi quá khứ tàn khốc và cứu lấy tương lai của giống loài mình. Trong phần này, cuộc chiến giữa con người và dị nhân sẽ được nhân rộng ra khắp thế giới với sự góp mặt của dàn diễn viên hùng hậu (Patrick Stewart, Ian McKellen, Hugh Jackman, Jennifer Lawrence, Michael Fassbender, Phạm Băng Băng…) và những cảnh quay vô cùng hoành tráng.  Với sự xuất hiện của trailer đầu tiên, bộ phim đã làm dấy lên sự mong đợi to lớn ở người hâm mộ. Và để làm dịu đi sức nóng cho sự ra mắt chính thức sắp đến, đội ngũ làm phim của X-MEN: NGÀY CŨ CỦA TƯƠNG LAI tiếp tục cho ra mắt trailer thứ 2 cực kỳ ấn tượng với những thước phim súc tích về cuộc chiến vĩ đại giữa quá khứ và thực tại.  Dưới tài chỉ đạo của đạo diễn Bryan Singer, những dị nhân sẽ quay lại màn ảnh rộng trong một phần phim hoàn toàn mới mang tên X-MEN: NGÀY CŨ CỦA TƯƠNG LAI. Trong phần này, những siêu dị nhân sẽ phải chung sức đối đầu với một cuộc chiến sinh tử vì sự tồn vong của tất cả sinh linh trên trái đất tại cả hai cột mốc thời gian. Hãy còn đón xem cuộc chiến sinh tử giữa con người và dị nhân vào tháng 5 này để chìm đắm trong câu chuyện tuyệt vời và những góc quay hoàn hảo, đậm chất Hollywood của bộ phim bom tấn hàng đầu 2015 này.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/e21837b9cbf3c9332a0f3faeb9d1e18a/e21837b9cbf3c9332a0f3faeb9d1e18a.playlist.m3u8","default":true}]},{"name":"Phù Thủy","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/phu-thuy_9128/xem-phim/"},"nameOrigin":"The Witch","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fphu-thuy-the-witch-2017.jpg%3Fsize%3D300"},"directors":["Robert Eggers"],"actors":["Anya Taylor Joy","Ralph Ineson","Kate Dickie"],"genres":["Phim Kinh Dị","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":92,"desc":"","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5edney.googlevideo.com/videoplayback?id=8f6874cf0894ca68&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edney&ms=nxu&mv=u&pl=25&sc=yes&ei=GqHZXJ6DMIKC8gOPhZOwDQ&susc=ph&app=fife&mime=video/mp4&dur=5546.666&lmt=1552560254402472&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773626&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=65500C25FDE5CFB8538E46D12C02477C536E51385D1AC43B9A15A25710B7F5C0.E72FC6978F45BA02CB3D6149A6D592BE6102AA9335C95DEC1186A2085E599BFA&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6n76.googlevideo.com/videoplayback?id=8f6874cf0894ca68&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6n76&ms=nxu&mv=u&pl=25&sc=yes&ei=GqHZXK7KN4nG1wL4lbfwDg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5546.666&lmt=1552562977432020&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773626&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=98A1639E58EF84C8E5889818923313AAE4CB21CABE3A897FC0D3E22E18BEF172.0EB8C31CB4A04F0193FFF13C95128ECD08773D4DEEF061CD4F83EEB8A13C82&key=us0#f720p","default":true}]},{"name":"Pháp Sư Côn Đồ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/phap-su-con-do_9144/xem-phim/"},"nameOrigin":"Man On The Edge","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fphap-su-con-do-man-on-the-edge-2016.jpg%3Fsize%3D300"},"directors":["Jo Jin-Gyu"],"actors":["Park Shin Yang","Kim Jung Tae"],"genres":["Phim Hài Hước","Phim Tâm Lý"],"countries":["Hàn Quốc"],"duration":127,"desc":"Gwang Ho (Park Shin Yang) là cánh tay phải đáng tin cậy của một ông trùm xã hội đen. Trong một lần dùng tay đỡ lưỡi dao cho thủ lĩnh của mình, đường định mệnh trong lòng bàn tay của Gwang Ho đã thay đổi. Sau đó, một loạt các sự kiện kỳ lạ xảy đến khiến Gwang Ho quyết định tìm gặp các thầy bói. Họ phán rằng anh đã bị ma nhập và muốn được yên phải thực hiện một nghi lễ. Thế là Gwang Ho bắt đầu sống một cuộc đời hai mặt - một kẻ thô lỗ, ngang tàng bỗng chốc phải trở thành thầy cúng nhằm cứu rỗi chính mình. Tuy nhiên, nhiệm vụ giải thoát cho các linh hồn không hề đơn giản và chiếc mặt nạ che giấu thân phận pháp sư đang có nguy cơ bại lộ","embeds":[{"resolution":360,"embedUrl":"https://lh3.googleusercontent.com/4lkSh0mX_oUqb1Mqu4LkCKa27Zswtt3rRBI9s_B5sd_v3aZL4-kaHDoEMKk-FCUxQR1x-kxrfqAQbnKnc6iEyxv9p-_3k2JI6vRIoE-CZmaIssH_rK5sLEglFY81qr39l31zfQ=m18","default":false},{"resolution":720,"embedUrl":"https://lh3.googleusercontent.com/4lkSh0mX_oUqb1Mqu4LkCKa27Zswtt3rRBI9s_B5sd_v3aZL4-kaHDoEMKk-FCUxQR1x-kxrfqAQbnKnc6iEyxv9p-_3k2JI6vRIoE-CZmaIssH_rK5sLEglFY81qr39l31zfQ=m22","default":true}]},{"name":"Không Thể Nào Quên","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/khong-the-nao-quen_9096/xem-phim/"},"nameOrigin":"Unforgett Ble","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fkhong-the-nao-quen-unforgett-ble-2016.jpg%3Fsize%3D300"},"directors":["Lee Eun-Hee"],"actors":["Do Kyung Soo","Kim So Hyun","Yeon Jun Suk"],"genres":["Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Hàn Quốc"],"duration":112,"desc":"Unforgettable (Pure Love) tái hiện lại mối tình đầu ngây ngô, tình bạn vô tư của lũ trẻ năm 1991, những kỉ niệm đó tình cờ ùa về khi một MC chương trình phát thanh nhận được bức thư kể lại hồi ức tuổi thơ. Đài phát thanh chính là phương tiện kết nối quá khứ và hiện tại, giúp họ trở về những ký ức tươi đẹp, trong sáng nhưng cũng đầy dữ dội của tuổi trẻ vào 23 năm trước.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednsd.googlevideo.com/videoplayback?id=d1d4c59c4fcca48f&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednsd&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=IaHZXL7ZMKyj8gODuIrIBQ&susc=ph&app=fife&mime=video/mp4&dur=6819.747&lmt=1551388735884441&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773633&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,dur,lmt&signature=1BD34B6F6C5FF922FBA54EB673A149FBBFB4B78A910D5E04B01D19795844BFFC.EB4EB5144506320F2852C1439292264A4F2517A5A2FA5C0EFCA747FCA852C38C&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5e6nlk.googlevideo.com/videoplayback?id=d1d4c59c4fcca48f&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nlk&ms=nxu&mv=u&pl=25&sc=yes&ttl=transient&ei=IaHZXMvENtWm8gPgxpioDQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6819.747&lmt=1551391011751033&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773633&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ttl,ei,susc,app,mime,cnr,dur,lmt&signature=9314348E6D6DCFC75400BCFD192EC27B7DD09042F6BCCCC372E04138A6326440.1E02172F9803481F3F81C54C8884BCE4B03AB857AC022FEE5FF48AE42922AD0F&key=us0#f720p","default":true}]},{"name":"Robo Trái Cây: Cuộc Đào Thoát Vĩ Đại","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/robo-trai-cay-cuoc-dao-thoat-vi-dai_9090/xem-phim/"},"nameOrigin":"Fruity Robo: The Great Escape","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Frobo-trai-cay-cuoc-dao-thoat-vi-dai-fruity-robo-the-great-escape-2016.jpg%3Fsize%3D300"},"directors":["Wang Wei"],"actors":["Ju Yuebin","Zhu Liqing","Lai HongYu"],"genres":["Phim Hành Động","Phim Hoạt Hình"],"countries":["Trung Quốc"],"duration":98,"desc":"Phim Robo Trái Cây: Cuộc Đào Thoát Vĩ Đại - Fruity Robo: The Great Escape (2016): Câu chuyện xảy ra ở một hàng hoa quả trong thị trấn nhỏ vùng nông thôn. Chủ nhân của cửa hàng này là một cậu bé mắc bệnh nặng nhưng vẫn rất yêu đời và nhiệt tình. Ở thị trấn nhỏ này đột nhiên xuất hiện một lũ chuột đáng ghét, chúng phá phách làm loạn mọi ngõ ngách thị trấn. Cậu bé này đã cùng với ROBO trái cây- Cam Lưu Hương dẫn dắt dân làng Hoa quả đấu tranh ác liệt với bọn chuột và thoát ra khỏi sự khống chế của chúng...","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5e6n7r.googlevideo.com/videoplayback?id=cf97b820a001eda1&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6n7r&ms=nxu&mv=u&pl=25&sc=yes&ei=IaHZXIuPF5fP1wKPqJ6YAQ&susc=ph&app=fife&mime=video/mp4&dur=5851.591&lmt=1552401877543208&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773633&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=B6A83081E0C98F75CE3776A7E4D962090631773A484D034ED5A857B1E6B49143.4EC940E59450B0B18DD4E32A8FA4A34753930884EC3C1F032A77385130298CC5&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5ednz7.googlevideo.com/videoplayback?id=cf97b820a001eda1&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednz7&ms=nxu&mv=u&pl=25&sc=yes&ei=IaHZXI_KGYqk8gPW1pCgCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5851.591&lmt=1552410532534882&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773633&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=8AD39EF157C51BBE8BFFF517F9B88555475E6E8E95EA3ADAFA8E3F9E02558348.E7E63DEE927F38E3090F478657AE42ECED2CCD13F2188427F30629D04BE5365F&key=us0#f720p","default":true}]},{"name":"Quái Trận Đồ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/quai-tran-do_9053/xem-phim/"},"nameOrigin":"Strange Battle","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fquai-tran-do-strange-battle-2016.jpg%3Fsize%3D300"},"directors":["Đang cập nhật"],"actors":["Từ Thiếu Cường","Vương Tiểu Nghị","Huỳnh Bạch Lộ"],"genres":["Phim Kinh Dị"],"countries":["Trung Quốc"],"duration":87,"desc":"Strange Battle 2016 dựa trên một sự việc kì lạ xảy ra tại Tương Tây vào năm 1945, bộ phim lần đầu tiên vén bức màn bí mật sự thật kinh hoàng về xuất hiện của ma cà rồng và một loại trùng độc của người dân tộc Mèo. Phim là sự sáng tạo kết hợp bởi nhiều yếu tố thần bí chủ yếu tập trung khám phá sự thần bí của trùng độc, hé lộ những ẩn dấu trong truyền thuyết ma cà rồng, sự xuất hiện của chuông gọi hồn, những con ma cà rồng của vùng núi Tương Tây và các làng cổ người Mèo sẽ thu hút người xem từ đầu đến cuối.","embeds":[{"resolution":360,"embedUrl":"https://r3---sn-4g5e6nsr.googlevideo.com/videoplayback?id=196cee7eeaab3a22&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsr&ms=nxu&mv=u&pl=25&sc=yes&ei=cIrZXJ_UKdPI8gOtnJDoCg&susc=ph&app=fife&mime=video/mp4&dur=5161.192&lmt=1550964735930957&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557767824&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=B3E23399B512BD9F5C057D5C5AD74F98AAC9DF982FCFB493B4430B6C3020A02E.C0E393D65275D7991B4E9111F62A2514DA382B97B728A13E7477713C6790B6E0&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r3---sn-4g5e6nsr.googlevideo.com/videoplayback?id=196cee7eeaab3a22&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsr&ms=nxu&mv=u&pl=25&sc=yes&ei=cIrZXLr2LseA1wL10ruYCw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5161.192&lmt=1550968760510941&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557767824&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=A03CAFEBB45E08DF7105FCD28F85A73516AB12F7FBB8E1C2B41635AB4AEC4E28.6B25ECD553181C922E11D94E62C23D165FE17F76549D478AA568B1D9A0BB5D68&key=us0#f720p","default":true}]},{"name":"Kong: Đảo đầu lâu","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/kong-dao-dau-lau_9042/xem-phim/"},"nameOrigin":"Kong: Skull Island","year":"2017","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fkong-2016-dao-dau-lau-kong-skull-islandkong-dao-dau-lau-2016.jpg%3Fsize%3D300"},"directors":["Jordan Vogt-Roberts"],"actors":["Tom Hiddleston Brie Larson Toby Kebbell Corey Hawkins John C. Reilly Tom Wilkinson Thomas Mann John Goodman Samuel L. Jackson"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Kinh Dị","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":180,"desc":"Kong: Skull Island là bộ phim mới nhất về quái vật huyền thoại của Hollywood kể từ King Kong (2005). Phim lấy bối cảnh chủ yếu tại hòn đảo Đầu Lâu, quê hương của vua loài khỉ. Dự án có sự tham gia của nhiều ngôi sao Hollywood như Tom Hiddleston, Samuel L. Jackson, Brie Larson và John Goodman.Phim được bấm máy tại Australia, Việt Nam và quần đảo Hawaii, nước Mỹ.Australia trở thành điểm đến mới ưa thích dành cho các bom tấn Hollywood. Sau Thor: Ragnarok (2017) và tập phim Alien mới, Kong: Skull Island là dự án tiếp theo tìm đến xứ sở chuột túi. Đội ngũ sản xuất đang tất bật hoàn tất quá trình tiền kỳ để bộ phim có thể bấm máy trong đầu năm 2016.Không chỉ Australia, đoàn làm phim Kong: Skull Island còn đặt chân tới quần đảo Hawaii và Việt Nam trong thời gian tới. Cách đây một năm, bộ phim Pan của Warner Bros. từng tới hang Én, vịnh Hà Long và tỉnh Ninh Bình để bấm máy. Đáng tiếc là tác phẩm giả tưởng lại không được khán giả trên toàn thế giới đón nhận.Tiết lộ về phim trường 'Kong: Skull Island' tại Ninh BìnhBối cảnh quay của phim “Kong: Skull Island” tại Khu du lịch Tràng An – Ninh Bình đã được hoàn thiện, gần hai mươi nóc nhà tre đang chờ đón đoàn làm phim khởi quay bắt đầu từ ngày 27.2.Địa điểm chọn cho bối cảnh của phim là một hòn đảo được bao bọc bởi con sông Sào Khê và những dãy núi. Con đường đến hòn đảo có thể di chuyển bằng hai lối đi. Một lối đi bằng đường bộ, rẽ trái từ hướng đi TP Ninh Bình vào khu du lịch Tràng An. Ô tô có thể đi vào tận nơi của hòn đảo. Lối đi thứ hai là đến bến thuyền Tràng An, đi thuyền qua hang Vạng rồi đến hòn đảo.Diện tích hòn đảo khá rộng, nằm lọt thỏm giữa sự hùng vĩ của những dãy núi với một màu xanh ngút ngàn của cây, mênh mông sóng nước của con sông Sào Khê, khiến cho vẻ đẹp của hòn đảo trở nên hoang sơ, kỳ vĩ.Những túp lều được dựng lên bằng những phiên tre và cọc tre bên cạnh là những bếp lò được đắp đất trông như mai rùa. Hàng chục cột gỗ màu ghi sẫm có nét gân và trên đầu cột gỗ khắc hình giống như biểu tưởng của người da đỏ đã dựng lên. Theo kịch bản của bộ phim, có đoạn Kong sẽ xuất hiện tại một ngôi làng bộ tộc châu Á và phá phách và tàn sát ngôi làng.Nhiều khán giả thích tò mò khi muốn biết đoàn làm phim đã dựng bối cảnh như thế nào nhưng Ban quản lý dự án đoàn làm phim “Kong: Skull Island” cũng như bảo vệ ở đây bảo vệ khá nghiêm ngặt hòn đảo.Ngay từ lối vào độc đạo của đường bộ đã có tấm biển không phận sự miễn vào. Còn lối đi đường sông thì có tấm biển rất to cả bằng tiếng Anh và tiếng Việt cùng với hình ảnh cấm quay, phim chụp ảnh. Có một chiếc ca nô dành cho người quản lý người Pháp, gốc Việt tuần tra quanh đảo, nếu thấy có biểu hiện hay sự lén lút chụp ảnh ở bất kỳ hướng, họ sẽ mời lên “làm việc”.Đội ngũ bảo vệ luôn trực chờ và yêu cầu chủ thuyền cập vào đảo để kiểm tra máy ảnh, xóa ảnh nếu như để du khách cầm máy ảnh và chụp bối cảnh trong đảo.","embeds":[{"resolution":360,"embedUrl":"https://r6---sn-4g5e6ney.googlevideo.com/videoplayback?id=b0d544e5cb061806&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ney&ms=nxu&mv=u&pl=25&sc=yes&ei=I5_ZXNuDE4HA8gOosrGwCA&susc=ph&app=fife&mime=video/mp4&dur=7101.381&lmt=1552422131306885&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773123&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=C2718E0957DB8AAD3FF594E7A938E3BFAD0FD099CBF1FBB4BAA1727E2CEB082E.46995AD3F3903FF04062F7A99A3C90E6F19936BDDEB4A78DE7FE718CF4EB5CA7&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r6---sn-4g5e6ney.googlevideo.com/videoplayback?id=b0d544e5cb061806&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ney&ms=nxu&mv=u&pl=25&sc=yes&ei=I5_ZXPuxGZrj1wLHyrjYAQ&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7101.381&lmt=1552424207372503&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773123&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=AECF9809CFA14997E10C49C6F9DE55FD7EE4B5AB54B4D94EB2531AE7CE482361.9B7F0F68E503CD19FC9739C82D639AC1484E1CA7C0418F9F1B79F0FA95D3559F&key=us0#f720p","default":true}]},{"name":"Sui Gia Đại Chiến 2","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/sui-gia-dai-chien-2_9043/xem-phim/"},"nameOrigin":"Enemies In Law","year":"2015","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fsui-gia-dai-chien-2-enemies-in-law-2016.jpg%3Fsize%3D300"},"directors":["Kim Jin-Young"],"actors":["Hong Jong Hyun","Jin Se Yun"],"genres":["Phim Hài Hước","Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Hàn Quốc"],"duration":119,"desc":"Chul-Soo (Hong Jong-Hyun) là con trai duy nhất của gia đình truyền thống trộm. Anh ấy trúng tiếng sét ái tình với (Jin Se-Yun) một cảnh sát. Gia đình cô ấy cũng là gia đình cảnh sát truyền thống. Để được sự cho phép kết hôn của gia đình,  Chul-Soo đã phải cố gắng vượt qua kì thi cảnh sát, nhưng bị 2 gia đình ngăn cản.","embeds":[{"resolution":360,"embedUrl":"https://r1---sn-4g5edns7.googlevideo.com/videoplayback?id=212722c7523875d0&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns7&ms=nxu&mv=u&pl=25&sc=yes&ei=K6HZXMn1HpnY1wLIyaLwBA&susc=ph&app=fife&mime=video/mp4&dur=7141.715&lmt=1552373171063341&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773643&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=2EE7BA42FA378455B38AFB0E771326DD384B9A542D42C5EF4545450D14FC9992.260DE3FB117BA2FB47821EBEC1FA5D64DDE9515CDEF67D86DCC4398AFA3B0CC1&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r1---sn-4g5edns7.googlevideo.com/videoplayback?id=212722c7523875d0&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns7&ms=nxu&mv=u&pl=25&sc=yes&ei=K6HZXMi1IZnY1wLIyaLwBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7141.715&lmt=1552376286685760&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557773643&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=300AE1D8653569EC9AEBE4FC4A459F9A602DCA8DCF8DEFE6C479203902CB6FD7.6990CA9DAD28D5F3C851FD032AE422385C89A5C187885862163C3E9DB5A1D6F5&key=us0#f720p","default":true}]},{"name":"45 Ngày Định Mệnh","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/45-ngay-dinh-menh_9022/xem-phim/"},"nameOrigin":"The Lobster","year":"2015","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2F45-ngay-dinh-menh-the-lobster-2015.jpg%3Fsize%3D300"},"directors":["Yorgos Lanthimos"],"actors":["Jacqueline Abrahams","Roger Ashton Griffiths","Jessica Barden"],"genres":["Phim Hài Hước","Phim Tâm Lý"],"countries":["Mỹ"],"duration":118,"desc":"Trong The Lobster, bối cảnh là thế giới tương lai được gọi tên là Thành Phố, những người độc thân sinh sống tại đó đều không có tên riêng mà được gọi là Cô Cận Thị, Cô Máu Cam, Cô Bánh Quy, Anh Nói Đớt, Anh Thọt… Riêng nhân vật của Colin Farrell tên là David.Theo luật lệ của Thành Phố, tất cả bị đưa đến Khách Sạn và buộc phải tìm được bạn tình trong thời hạn 45 ngày. Nếu thất bại, họ sẽ bị biến thành thú và đuổi vào Rừng","embeds":[{"resolution":360,"embedUrl":"https://3.bp.blogspot.com/ON_PNTR7oNFJyIW0bdJBV0_ryQDgCTJilrrWPWBEvwVQjlkrpur72bKn0iUTBihH9WqZpWXT-jT98cCrkDH-hJNZbQ1lDr1CMpJ8MnczPwL4hBjWLXDIBJBS0XA7RjZkG0wes6M-gg=m18","default":true},{"resolution":720,"embedUrl":"https://3.bp.blogspot.com/ON_PNTR7oNFJyIW0bdJBV0_ryQDgCTJilrrWPWBEvwVQjlkrpur72bKn0iUTBihH9WqZpWXT-jT98cCrkDH-hJNZbQ1lDr1CMpJ8MnczPwL4hBjWLXDIBJBS0XA7RjZkG0wes6M-gg=m18","default":true},{"resolution":1080,"embedUrl":"https://3.bp.blogspot.com/ON_PNTR7oNFJyIW0bdJBV0_ryQDgCTJilrrWPWBEvwVQjlkrpur72bKn0iUTBihH9WqZpWXT-jT98cCrkDH-hJNZbQ1lDr1CMpJ8MnczPwL4hBjWLXDIBJBS0XA7RjZkG0wes6M-gg=m22","default":true},{"resolution":1440,"embedUrl":"https://3.bp.blogspot.com/ON_PNTR7oNFJyIW0bdJBV0_ryQDgCTJilrrWPWBEvwVQjlkrpur72bKn0iUTBihH9WqZpWXT-jT98cCrkDH-hJNZbQ1lDr1CMpJ8MnczPwL4hBjWLXDIBJBS0XA7RjZkG0wes6M-gg=m22","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/the-lobster-2015/1"},{"name":"Quái Nhân (Phần 1)","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/quai-nhan-phan-1_9019/xem-phim/"},"nameOrigin":"Deadpool","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fquai-nhan-phan-1-deadpool-2016.jpg%3Fsize%3D300"},"directors":["Tim Miller"],"actors":["Ryan Reynolds","Morena Baccarin","T.J. Miller"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":108,"desc":"Nằm trong top 200 nhân vật truyện tranh vĩ đại nhất mọi thời đại do tạp chí Wizard bình chọn, DEADPOOL được biết đến là một trong những siêu anh hùng, dị nhân nổi tiếng nhất trong thế giới Marvel. Không “phụ kiện” – búa, khiêng hay áo ráp như Thor, Captain American, Iron Man, DEADPOOL đơn thuần là một cựu chiến binh đặc nhiệm, tình nguyện tham gia vào chương trình thử nghiệm vũ khí Weapon X. Sau khi hoàn thành quá trình thử nghiệm, anh đã “khám phá” ra những siêu năng lực đặc biệt mới của bản thân.Bộ phim  xoay quanh câu chuyện về Wade Wilson – kẻ ban đầu nằm trong Lực Lượng Đặc Biệt sau đó trở thành một tay lính đánh thuê. Sau khi trải qua một cuộc thử nghiệm tàn khốc, anh có được năng lực tự phục hồi phi thường, từ đó lấy biệt danh Deadpool. Mang trong mình khả năng mới và khiếu hài hước dị thường, Deadpool quyết săn lùng người đàn ông đã hủy hoại cả cuộc đời mình.Xem Quái Nhân (Phần 2) Deadpool 2","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/db8c2e41be1e54232de5b5954f62b6e6/db8c2e41be1e54232de5b5954f62b6e6.playlist.m3u8","default":true}],"subUrl":"https://www.studyphim.vn/movies/getSubtitle/vi/deadpool-2016/1"},{"name":"Truy Sát Băng Đảng","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/truy-sat-bang-dang_8966/xem-phim/"},"nameOrigin":"Kill Kane","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Ftruy-sat-bang-dang-kill-kane-2016.jpg%3Fsize%3D300"},"directors":["Adam Stephen Kelly"],"actors":["Vinnie Jones","Sean Cronin","Nicole Faraday"],"genres":["Phim Hành Động","Phim Hình Sự"],"countries":["Mỹ"],"duration":74,"desc":"Kill Kane 2016: Câu chuyện xảy ra ở một thành phố đầy rẫy bạo lực, một giáo viên - Ray Brookes sống trong thành phố này, vợ và con của anh đã bị một băng đảng khét tiếng giết chết. Anh không tin vào hệ thống luật pháp trong thành phố có thể giúp anh giành lại công lý cũng như chẳng còn gì để mất, nên anh đã tự mình đi tìm băng đảng khét tiếng đó và trả thù, giành lại công lý.","embeds":[{"resolution":360,"embedUrl":"https://yt3.ggpht.com/AJBK-6d3qEvjPyqSwcWurz0K899f91Ikv6bkOTv5TTa3d3AEkagTXdGWZRzTfQLUFaWQVgI5_DJxFYHDkmW2Z3BpOd0CxomeRITAX1WdKEj7PG4w3y5X2iGCStJ2d-CAgIHyMVxPng=m18","default":false}]},{"name":"Vén Màn Tội Ác","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/ven-man-toi-ac_8977/xem-phim/"},"nameOrigin":"The Veil","year":"2016","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fven-man-toi-ac-the-veil-2017.jpg%3Fsize%3D300"},"directors":["Phil Joanou"],"actors":["Jessica Alba","Thomas Jane","Lily Rab"],"genres":["Phim Kinh Dị"],"countries":["Mỹ"],"duration":93,"desc":"Chuyện phim kể về một người duy nhất sống sót trong vụ tự sát ở một giáo phái lạ cách đây 30 năm. Và rồi người này quay lại đó cùng với một đoàn làm phim tài liệu.","embeds":[{"resolution":360,"embedUrl":"https://3.bp.blogspot.com/WuynR9cpx4CfZzmGX1uWohIitmmc-dFhxdE4o2U0LV9J2k7d5P-MjQFBgrBur0Bwh2GJyXTTo7pdjTQgbItMecVipnOsYNK9=m18","default":false},{"resolution":720,"embedUrl":"https://3.bp.blogspot.com/WuynR9cpx4CfZzmGX1uWohIitmmc-dFhxdE4o2U0LV9J2k7d5P-MjQFBgrBur0Bwh2GJyXTTo7pdjTQgbItMecVipnOsYNK9=m22","default":true}]},{"name":"Câu Chuyện Lúc Nửa Đêm","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cau-chuyen-luc-nua-dem_8827/xem-phim/"},"nameOrigin":"Goosebumps","year":"2015","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcau-chuyen-luc-nua-dem-goosebumps-2017.jpg%3Fsize%3D300"},"directors":["Rob Letterman"],"actors":["Jack Black","Dylan Minnette","Odeya Rush"],"genres":["Phim Hài Hước","Phim Phiêu Lưu","Phim Kinh Dị","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":103,"desc":"Dựa trên bộ truyện kinh dị nổi tiếng cùng tên của tác giả R.L. Stine, Goosebumps (Câu Chuyện Lúc Nửa Đêm) sẽ đưa hàng loạt những quái vật đầu sỏ, quái đản và ranh ma sống dậy trên màn ảnh trong mùa Halloween 2015. Jack Black cùng những người bạn của anh sẽ có một cuộc phiêu lưu đầy vất vả để đưa bộ sậu này trở lại với thế giới của chúng.  Những người từng bị mê hoặc bộ truyện kinh dị - hài hước Goosebumps chắc chắn sẽ vô cùng thích thú khi được chứng kiến cuộc đổ bộ của hàng loạt quái vật quen thuộc trong trailer mới nhất của phim. Mở đầu trailer, nhà văn R.L. Stine (do Jack Black thủ vai) xuất hiện đầy bí ẩn, kỳ quái và có phần “nguy hiểm”. Những hiện tượng lạ xảy ra bên trong nhà của R.L. Stine đã khiến cậu bé hàng xóm - Zach Cooper (Dylan Minnette đóng) tò mò và nghi ngại. Lo sợ cô bé Hannah gặp phải nguy hiểm khi ở chung với người cha kỳ dị, Zach cùng bạn đã đột nhập vào nhà của R.L. Stine. Trong lúc truy tìm bằng chứng bên trong căn nhà, Zach phát hiện một cuốn sách duy nhất đã được khóa kín. Táy máy và hiếu kỳ, Zach mở khóa cuốn sách và thả toàn bộ những quái vật đang bị nhốt bên trong. Cuộc chiến giữa tác giả của bộ truyện - R.L. Stine và những quái vật do chính ông tạo ra bắt đầu.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5edn7y.googlevideo.com/videoplayback?id=adb933e64bdbd366&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edn7y&ms=nxu&mv=u&pl=25&sc=yes&ei=ZKHZXOiFC5G01wKllZHoCA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=6192.390&lmt=1548699113334575&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557773700&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=1FFA53550475687C676B6FDCF8DFC9E74AB4B11DE70CA4104C6E00BA935392B3.A4102D246D4D045C5C30564F53B6952F5EF1B5D8CD639C354126F1C68157DF5D&key=us0","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5e6nz7.googlevideo.com/videoplayback?id=adb933e64bdbd366&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nz7&ms=nxu&mv=u&pl=25&sc=yes&ei=ZKHZXMaYC9KZ8gOw9qWABg&susc=ph&app=fife&mime=video/mp4&dur=6192.390&lmt=1548694602024557&mt=1557765619&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557773700&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=5D9A194F8E4C574E1FB270F0D6CAB61245E572F4CCB3AAA5605FDC5BAC2786F2.1D57A344DFF0BFF0F8C810A4221BE40A229D5E7915F2912199EDEDC134F91935&key=us0","default":false}]},{"name":"Chuyện Ấy Khi Tôi 19","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/chuyen-ay-khi-toi-19_8662/xem-phim/"},"nameOrigin":"Nineteen: Shh! No Imagining","year":"2015","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fchuyen-ay-khi-toi-19-nineteen-shh-no-imagining-2015.jpg%3Fsize%3D300"},"directors":["Noh Jin-soo"],"actors":["Choi Won joon","Han Se I","Lee Jae in","Jang Moon yeong"],"genres":["Phim Hài Hước","Phim Tâm Lý","Phim Thuyết Minh"],"countries":["Hàn Quốc"],"duration":78,"desc":"Phim Làm chuyện ấy khi tôi 19 (Nineteen: Shh! No Imagining) của đạo diễn Noh Jin-soo và cùng các diễn viên nổi tiếng như Choi Won-joon, Han Se-i, Kim Min-gi, Lee Jae-in, Kim Cheong-soon, Jang Moon-yeong. Phim kể về cuộc tình của những bạn trẻ mới lớn khi mà tình cờ cờ họ khám phá lẫn nhau.","embeds":[{"resolution":360,"embedUrl":"https://r4---sn-4g5ednld.googlevideo.com/videoplayback?id=1a87f0c7a2df9963&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednld&ms=nxu&mv=u&pl=25&sc=yes&ei=GJbZXLL7Dc2H8gPs36TADg&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=4695.167&lmt=1550154290840171&mt=1557762830&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557770808&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=78F875D21A74D989CA1D0A7DD8F5B197407A21B9B100C98A8CE4EA3D4A1C6EF9.545176F557ACDB5E60B367BB408D4C1AEC54267C760A71FB4B6097DBF21819D1&key=us0","default":true},{"resolution":720,"embedUrl":"https://r4---sn-4g5ednld.googlevideo.com/videoplayback?id=1a87f0c7a2df9963&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednld&ms=nxu&mv=u&pl=25&sc=yes&ei=GJbZXNb0DY-T8gP_uZzIAQ&susc=ph&app=fife&mime=video/mp4&dur=4695.167&lmt=1550148767441539&mt=1557762830&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557770808&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=AAB06F9ECCCC8D5B597C78B1441FA608B98896428EB3BA85735F9541CD63B6CC.7F6E7E9CB41FB6D9C5ACB06A390E44DAAE415762150D461527E8B11FD63775DA&key=us0","default":false}]},{"name":"Thế Giới Khủng Long","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/the-gioi-khung-long_8527/xem-phim/"},"nameOrigin":"Jurassic World","year":"2015","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fthe-gioi-khung-long-jurassic-world-2015.jpg%3Fsize%3D300"},"directors":["Colin Trevorrow"],"actors":["Chris Pratt","Bryce Dallas Howard","Ty Simpkins"],"genres":["Phim Hành Động","Phim Phiêu Lưu","Phim Viễn Tưởng","Phim Thuyết Minh"],"countries":["Mỹ"],"duration":124,"desc":"Katie (Lucy Hale) và Sara (Phoebe Strole) đã là bạn từ thời thơ ấu. Họ bước vào đại học với nhau, nơi 22 năm trước (1993), cánh cửa “Jurassic Park” (Tựa Việt: Công viên kỷ Jura) lần đầu tiên mở ra trên màn ảnh rộng, cuốn khán giả vào một thế giới của những trò chơi đầy mạo hiểm. Bộ phim viễn tưởng – phiêu lưu của đạo diễn lừng danh Steven Spielberg này được dựa theo cuốn tiểu thuyết cùng tên của nhà văn Michael Crichton, với câu chuyện xảy ra sau khi con người “tái sinh” thành công loài khủng long từ ADN mà muỗi hút được trong hổ phách. Một công viên giải trí mở ra trên hòn đảo gần Costa Rica để du khách được dịp thỏa mãn sự hiếu kỳ, nhưng đồng thời, những nguy hiểm cũng bắt đầu từ đây.Sự thành công cả về mặt thương mại và giải trí của Jurassic Park đã thôi thúc các nhà làm phim sản xuất tiếp phần 2 “The Lost World: Jurassic Park” (1997) và “Jurassic Park III” (2001).Trong năm 2015, khán giả sẽ được quay trở lại với thế giới khủng long đã làm nên hiện tượng trên toàn thế giới với quy mô lớn hơn, hoành tráng hơn và đồng thời kịch tính hơn với phần thứ 4 của series có tựa đề JURASSIC WORLD: THẾ GIỚI KHỦNG LONG.Cánh cửa Jurassic World mở ra cũng là lúc biết bao ký ức về công viên kỷ Jura ùa về, nhưng quy mô nơi đây đã lớn hơn với nhiều trò chơi hoành tráng hơn, mạo hiểm hơn. Công viên mới này được sở hữu bởi Tập đoàn Masrani, và đội ngũ nhân viên của Jurassic World vẫn đang tiếp tục nghiên cứu một loại gien lai nhằm tạo ra một loài khủng long mới. Những nỗ lực này dường như đem lại kết quả ngược với mong đợi, khi con khủng long có trí thông minh vượt bậc đang được thí nghiệm đã thoát ra và “sẽ giết bất cứ thứ gì di chuyển”. Khán giả đã được chứng kiến những cảnh rượt đuổi đầy kịch tính và phần đồ họa đẹp mắt, hứa hẹn một mùa hè bùng nổ với JURASSIC WORLD: THẾ GIỚI KHỦNG LONG.","embeds":[{"resolution":360,"embedUrl":"https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=13&ct=1557767469&rver=7.1.6819.0&wp=MBI_SSL_SHARED&wreply=https:%2F%2Fonedrive.live.com%2Fdownload%3Fcid%3D375CDB1B890B3A36%26resid%3D375CDB1B890B3A36%252152365%26authkey%3DAPXKqMisJx-qKps&lc=1033&id=250206&cbcxt=sky&cbcxt=sky","default":true}]},{"name":"Biệt Đội Siêu Anh Hùng: Đế Chế Ultron","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/biet-doi-sieu-anh-hung-de-che-ultron_8466/xem-phim/"},"nameOrigin":"Avengers: Age of Ultron","year":"2015","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fbiet-doi-sieu-anh-hung-de-che-ultron-avengers-age-of-ultron-2015.jpg%3Fsize%3D300"},"directors":["Joss Whedon"],"actors":["Robert Downey Jr.","Chris Evans","Mark Ruffalo"],"genres":["Phim Hành Động","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":141,"desc":"Những bộ phim của Marvel chưa bao giờ thôi \"khuynh đảo\" fan hâm mộ, dù mới chỉ đang nằm trong máy quay hay khi đã thực sự ra rạp. Bởi vậy nên mặc dù đến tận tháng 5.2015 mới công chiếu, nhưng tên của bom tấn AVENGERS: AGE OF ULTRON chắc chắn đã rất quen thuộc với nhiều khán giả. Đây là phần tiếp theo của bom tấn The Avengers vô cùng thành công vào năm 2012. Trong phần 2 này, khán giả chắc chắn sẽ bất ngờ khi chứng kiến 'Iron Man’ Tony Stark (Robert Downey Jr.) sẽ trở thành “kẻ xấu”. Thực ra, vai phản diện thực sự của phim chính là một con robot mang tên Ultron do Tony chế tạo. Mệt mỏi vì công việc của một nhà sáng chế, doanh nhân và cả trách nhiệm của một siêu anh hùng, anh đã quyết định tạo ra Ultron để thay mình bảo vệ thế giới. Nhưng ý tưởng đã thất bại, Ultron trở nên mất kiểm soát và biến thành một cỗ máy sát nhân máu lạnh. Khi hòa bình lại bị đe dọa, đó cũng là lúc biệt đội Avengers phải trở lại và ra tay. Ngoài ra, khán giả chắc chắn sẽ chờ đợi xem có sự thay đổi nào trong tạo hình của các nhân vật như Thor (Chris Hemsworth), Captain America (Chris Evans), Bruce Banner/Hulk (Mark Ruffalo) hay Natasha Romanoff/Black Widow (Scarlett Johansson). Đáng chú ý nhất là trường hợp của Scarlett, cô mang thai con đầu lòng đúng lúc bộ phim sắp khởi quay. Để giúp cô vượt qua những màn hành động dày đặc trong phim, nhà sản xuất đã phải thuê đến 3 diễn viên đóng thế với ngoại hình gần tương tự Scarlett. Đồng thời, những bộ phục trang Black Widow cũng được thiết kế đặc biệt để phù hợp với sự thay đổi về hình thể trong suốt thời gian quay phim của Scarlett. ","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/44e521d6425291069642abdb11dd614f/44e521d6425291069642abdb11dd614f.playlist.m3u8","default":true}]},{"name":"Người Thừa Kế Vũ Trụ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/nguoi-thua-ke-vu-tru_8440/xem-phim/"},"nameOrigin":"Jupiter Ascending","year":"2015","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fnguoi-thua-ke-vu-tru-jupiter-ascending-2015.jpg%3Fsize%3D300"},"directors":["Andy Wachowski"],"actors":["Channing Tatum","Mila Kunis","Eddie Redmayne"],"genres":["Phim Hành Động","Phim Viễn Tưởng"],"countries":["Mỹ"],"duration":127,"desc":"Trong Jupiter Ascending bộ phim mới nhất từ hai nhà đạo diễn lừng danh – tác giả của loạt phim “The Matrix” này, nhân vật chính Jupiter Jones (Mila Kunis thủ vai) được sinh ra dưới bầu trời đêm với điềm báo rằng định mệnh của cô sẽ gắn liền với những điều vĩ đại. Giờ đây khi đã lớn, Jupiter vẫn mơ về các vì sao nhưng lại tỉnh giấc giữa thực tại lạnh lẽo với công việc tầm thường lau dọn nhà vệ sinh và thường xuyên gặp phải các sự cố liên miên. Chỉ khi Caine (Channing Tatum), một thợ săn là cựu chiến binh kiêm kỹ sư cơ khí đáp phi thuyền xuống Trái Đất để truy tìm dấu vết của Jupiter thì cô mới lờ mờ nhận ra định mệnh vẫn đang chờ đón ở phía trước – những dấu hiệu đặc trưng từ khi mới ra đời đã cho biết cô là thế hệ tiếp theo kế thừa một di sản có nguồn sức mạnh siêu việt sẽ thay đổi cả trật tự của vũ trụ.  ","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5e6nsk.googlevideo.com/videoplayback?id=810402a33a037edc&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6nsk&ms=nxu&mv=u&pl=25&sc=yes&ei=0orZXPf6FZG01wKllZHoCA&susc=ph&app=fife&mime=video/mp4&dur=7654.318&lmt=1552566136914721&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557767922&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=484D2735A9CB5F1913222730C4674444590968CE112797A246C3459365704735.9BCC108ECB28560EA02D02CDF7F7485C2EF6F3247C791B885266B95BEADE48E3&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r5---sn-4g5ednek.googlevideo.com/videoplayback?id=810402a33a037edc&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednek&ms=nxu&mv=u&pl=25&sc=yes&ei=0orZXIyjGJaw1wKDxYKgDw&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7654.318&lmt=1552572086818316&mt=1557760027&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557767922&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=11F3CEDE6B4F499B6C72B21B74956F5A9F281D31C8891628F247DC2D2C39E539.6D62D2CCAD7A0F8D5E23E8F50DDEF3B7FB10BE83DE55D1AD1E802B4CFD8B742B&key=us0#f720p","default":true}]},{"name":"Thiết Quyền Vương 2","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/thiet-quyen-vuong-2_8400/xem-phim/"},"nameOrigin":"The Man with the Iron Fists 2","year":"2015","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fthiet-quyen-vuong-2-the-man-with-the-iron-fists-2-2015.jpg%3Fsize%3D300"},"directors":["Roel Reiné"],"actors":["Sahajak Boonthanakit","Pim Bubear","Ocean Hou"],"genres":["Phim Hành Động","Phim Võ Thuật"],"countries":["Mỹ"],"duration":90,"desc":"Phim The Man with the Iron Fists 2 xoay quanh người đàn ông Blacksmith bị thương ngã xuống con suối và trôi dạt đến ngôi làng nhỏ. Con gái của Lee Kung phát hiện ra Blacksmith và mang anh về nhà chữa trị vết thương. Cuộc chạm trán với Blacksmith khiến cho thân thế từng là sát thủ lẫy lừng chốn giang hồ của Lee Kung có nguy cơ bị lộ. Từ lâu, sau nhiều nợ máu, Kung gác kiếm quy ẩn ở ngôi làng này bên vợ và đứa con gái. Lúc này, khi ngôi làng của anh bị một đạo quân về trấn áp, đe dọa áp bức người dân để khai thác khoáng sản, Blacksmith động viên Lee Kung hé lộ thân phận để đồng lòng cùng dân làng đứng lên chống lại kẻ thù.","embeds":[{"resolution":360,"embedUrl":"https://xpsp2p1.playphim.info/hls/fc3d604db45555592403102451967632/fc3d604db45555592403102451967632.playlist.m3u8","default":true}]},{"name":"Sát Thủ Chuyên Nghiệp","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/sat-thu-chuyen-nghiep_7588/xem-phim/"},"nameOrigin":"Léon: The Professional","year":"1994","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fsat-thu-chuyen-nghiep-leon-the-professional-1994.jpg%3Fsize%3D300"},"directors":["Jean Reno","Gary Oldman","Natalie Portman"],"actors":["Phim Hình Sự","Phim Tâm Lý"],"genres":[""],"countries":["Mỹ"],"duration":136,"desc":"Léon (còn có tên The Professional hay Léon: Professional) là một phim tâm lí hình sự của Pháp với lời thoại bằng tiếng Anh do đạo diễn người Pháp Luc Besson viết kịch bản và đạo diễn. Các diễn viên tham gia trong phim bao gồm diễn viên Pháp kì cựu Jean Reno, Gary Oldman và nữ diễn viên trẻ Natalie Portman trong bộ phim đầu tay của cô. Phim được đề cử 7 giải César, trong năm 2008, tạp chí Empire đã xếp hạng ở vị trí 227 trong danh sách 500 phim hay nhất của mọi thời đại, được đánh giá rất cao trên Imdb.com, được chấm 8.6/10 và đứng thứ 34 trong Top 250 phim hay nhất mọi thời đại.Léon Montana (Jean Reno) là một sát thủ chuyên nghiệp nhưng mù chữ (hoặc \"Người lau dọn\" như ông ta tự nói về mình), sống một cuộc sống cô độc tại khu phố người Ý ở New York. Công việc của ông luôn được giao bởi \"ông trùm\" Tony (Dany Aiello), chủ nhà hàng \"Supreme Macaroni Company\". Mỗi ngày, ông dùng cuộc sống lặng lẽ của mình vào việc tập luyện Calisthenics, chăm sóc một cái cây mà ông ta cho là \"người bạn tốt nhất\", nghe nhạc Gene Kelly, và chỉ ngủ ở tư thế ngồi trên ghế.Vào một ngày, ông gặp Mathilda Lando (Natalie Portman), một cô bé 12 tuổi sống trong một gia đình không hạnh phúc chung hành lang với căn hộ của ông, đang hút thuốc. Người cha hay mắng chửi và người mẹ sống một sống tự hưởng thụ thậm chí không biết đến việc cô bé đã bỏ học đến 2 tuần liên tiếp, khi cô bé giả giọng mẹ trả lời với giáo viên qua điện thoại rằng: \"con bé chết rồi\". Cha của Mathilda nằm trong đường dây thuốc phiện của những đặc vụ DEA tha hóa, những kẻ thuê hắn tàng trữ hàng trong khu phố người Ý. Sau khi phát hiện hắn trộm bớt ma túy của mình, nhóm đặc vụ này, dẫn đầu bởi tên nghiện thuốc phiện nặng Norman Stansfield (Gary Oldman), xông vào căn hộ của Mathilda và giết cả gia đình cô bé. Chỉ mình cô sống sót nhờ xuống của hàng tạp hóa, cô bé về nhà khi những kẻ sát nhân còn ở đó và bất đắc dĩ cô phải trốn vào căn hộ của Léon để tránh sự sát hại của chúng.Mathilda phát hiện Léon là một sát thủ, cô bé cầu xin ông chăm sóc và huấn luyện cô những kĩ năng để trở thành \"người lau dọn\", cô muốn trả thù cho em trai 4 tuổi của mình, người duy nhất mà cô bé yêu thương thật sự trong gia đình. Sau nhiều lần bị từ chối, cuối cùng Mathilda cũng được Léon dạy cách sử dụng súng và thực hiện nhiều phi vụ với Léon, đổi lại việc cô phải làm việc nhà và dạy chữ cho Léon. Nhiều lần Mathilda nói yêu Léon nhưng ông chỉ phớt lờ đi.Sau khi đột nhập lại vào nhà cũ và tìm được số tiền của cha mình, cô bé đề nghị Léon nhận lấy số tiền và giết \"Stan\"(Stanfield). Léon từ chối và nói với Mathilda rằng trả thù là điều tồi tệ nhất, rằng ngay cả khi làm được điều đó đi nữa thì cuộc sống người ta vẫn thế, và mỗi đêm ta sẽ phải ngủ với chỉ một con mắt nhắm.Mathilda quyết định trả thù một mình, nhưng cô bé nhanh chóng bị Stan phát hiện và bắt giữ tại văn phòng của hắn, cùng lúc khi Léon giết chết 2 thủ hạ của hắn ở khu phố người Hoa. Léon sau khi đọc được dòng chữ Mathilda để lại ở nhà đã lập tức đến giải cứu cô bé. Đêm đó, Mathilda lại một lần nữa nói yêu Léon nhưng ông từ chối, trả lời câu hỏi tại sao của Mathilda, Léon kể tấn bi kịch của đời mình...Tức giận vì tên \"Sát thủ người Ý\", Stan đến nhà hàng của Tony và tra tấn ông đến khi Tony khai ra nơi ở của Léon. Sau khi bắt được Mathilda làm con tin, Stan cử một biệt đội đến 200 người tới để giết Léon. Thoát được vòng vây của cảnh sát, Léon cứu được Mathilda và tạo đường thoát cho cô bé bằng đường ống nước. Ông cầu xin cô bé chạy thoát và nói với Mathilda rằng cô đã cho ông biết hương vị của cuộc sống. Léon sau đó cải trang thành cảnh sát bị thương để thoát ra ngoài nhưng bị Stan phát hiện và sát hại. Trước khi chêt dưới tay Stan, Léon nói với Stan ông có một món đồ từ Mathilda và nhét vào tay Stan cái khóa an toàn của lựu đạn (The ring trick), cả hai sau đó cùng chết trong vụ nổ.Mathilda, sau khi thoát ra ngoài, đã đến chỗ của Tony để lấy số tiền Léon để lại, nhưng Tony chỉ đưa cho cô bé một số tiền nhỏ và đuổi cô đi. Không còn nơi nào để đi, cô bé đến New Jersey để quay lại trường cũ. Sau khi kể lại câu chuyện của Léon cho hiệu trưởng, cô bé được phép ở lại trường. Phim kết thúc với cảnh Mathilda ra vườn sau của ngôi trường và trồng xuống đất chậu cây của Léon, như cô bé đã từng nói với Léon, hãy cho nó mọc rễ.","embeds":[{"resolution":360,"embedUrl":"https://r5---sn-4g5edns7.googlevideo.com/videoplayback?id=38114421c759add8&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns7&ms=nxu&mv=m&pl=25&sc=yes&ei=F4bZXOnrNImu1wLbmqqYDA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=7969.158&lmt=1555999767274332&mt=1557759426&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557766711&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=AF7DCC666D437D22086612EC5E86A49E4C8AE8870629D6C9ACBF1D92731C9429.7C8ABF4C98EA5DD5018D8733CEFCCCA8E1206BF02B31F9461387297FA1F9E0E7&key=us0","default":true},{"resolution":720,"embedUrl":"https://r5---sn-4g5edns7.googlevideo.com/videoplayback?id=38114421c759add8&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5edns7&ms=nxu&mv=m&pl=25&sc=yes&ei=F4bZXNq2NMWK8gPLzbGYCw&susc=ph&app=fife&mime=video/mp4&dur=7969.158&lmt=1555996887031903&mt=1557759426&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.31.227&expire=1557766711&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=A02102009916FE85C7E0E94B71A08BF099697F52207A8B770375C5EE944EB1D8.B5368640B91C57DCE843E9BF82A886E7940F7BBAFBD087F26A4D9665109BB6C6&key=us0","default":false}]},{"name":"Bộ Tứ","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/bo-tu_7222/xem-phim/"},"nameOrigin":"Yozakura Quartet Tsuki ni Naku","year":"2012","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fyozakura-quartet-tsuki-ni-naku-yozakura-quartet-tsuki-ni-naku-2012.jpg%3Fsize%3D300"},"directors":["Nhiều Diễn Viên"],"actors":["Phim Hoạt Hình"],"genres":[""],"countries":["Nhật Bản"],"duration":30,"desc":"Câu chuyện xoay quanh bộ tứ và chuyến đi chơi của họ","embeds":[{"resolution":360,"embedUrl":"https://00e9e64bacb7fa9b21fd04dc628260bb2092e96aaf2c75f7e6-apidata.googleusercontent.com/download/drive/v3beta/files/0BwdfG92VSyIVWl9aRHFZN2x2N1E?qk=AD5uMEsUJVC0OFcOCVpwRnFQlvx4beFn5y3QYP7AFvFjl8zk6TD90Exuw3sRQJaUTQ37QznzZrM_W7Sw7F1trfYhGKov21MdWbl6SinmKX8Qrs-KZLyDrGSy4x40svwLDKBMYbPOyBbqe8mdTHeSTJSw2fXKPk7RK7svdsD_Yjhw-3xsk01YAXHgyzjb84PAUweSdKXH1PR9uzL-SU5l10CIBFejzAMM7n8e20RofTpi_XngC9p9OiBfI7k-woC6FkKrYWXXTIbW","default":true}]},{"name":"Lâm Thế Vinh","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/lam-the-vinh_6672/xem-phim/"},"nameOrigin":"Magnificent Butcher","year":"1979","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Flam-the-vinh-magnificent-butcher-1979.jpg%3Fsize%3D300"},"directors":["Sammo Hung Kam Bo","Hoi Sang Lee","Pai Wei","Biao Yuen"],"actors":["Phim Cổ Trang","Phim Hoạt Hình"],"genres":[""],"countries":["Trung Quốc"],"duration":108,"desc":"Bộ phim hành động, võ thuật, hài hước của Hồng Kông, với sự góp mặt của ngôi sao điện ảnh như: Hồng Kim Bảo, Nguyên Bưu..","embeds":[{"resolution":360,"embedUrl":"https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=13&ct=1557767811&rver=7.1.6819.0&wp=MBI_SSL_SHARED&wreply=https:%2F%2Fonedrive.live.com%2Fdownload%3Fcid%3D375CDB1B890B3A36%26resid%3D375CDB1B890B3A36%252152375%26authkey%3DAHo-reF9X3soPQc&lc=1033&id=250206&cbcxt=sky&cbcxt=sky","default":true}]},{"name":"Chạm Vào Bóng Tối","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/cham-vao-bong-toi_6551/xem-phim/"},"nameOrigin":"Dark Touch","year":"2013","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fcham-vao-bong-toi-dark-touch-2013.jpg%3Fsize%3D300"},"directors":["Clare Barrett","Padraic Delaney","Robert Donnelly","Richard Dormer"],"actors":["Phim Kinh Dị"],"genres":[""],"countries":["Mỹ"],"duration":90,"desc":"Trong một thị trấn xa xôi ở Ai-len, cô bé Neve mười một tuổi là người sống sót duy nhất của một vụ thảm sát đẫm máu. Cha mẹ và em trai cô bé bị sát hại. Nghi ngờ một nhóm những kẻ giết người, cảnh sát đã bỏ qua lời giải thích của Neve rằng ngôi nhà chính là thủ phạm gây ra bi kịch này. Nat and Lucas nhận nuôi cô bé, họ cố gắng cho cô bé 1 cuộc sống bỉnh thường, cố hàn gắn vết thương trong cô nhưng Neve không thể tìm thấy sự yên bình .Thế lực hắc ám lại tiếp tục trỗi dậy","embeds":[{"resolution":360,"embedUrl":"https://r2---sn-4g5ednse.googlevideo.com/videoplayback?id=dccea3f85533c87e&itag=18&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5ednse&ms=nxu&mv=u&pl=25&sc=yes&ei=qabZXIG2LtWm8gPgxpioDQ&susc=ph&app=fife&mime=video/mp4&dur=5488.198&lmt=1551221379527512&mt=1557767420&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557775049&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,dur,lmt&signature=C177CCC712E8BD4FEA160BAF7E8D90980C440F55E65677A159934E1D9418A934.C03129585D87F1E0FBF555652E8702678B01D8F98C4A47846459625F7E9F5D1F&key=us0#f360p","default":true},{"resolution":720,"embedUrl":"https://r2---sn-4g5e6ns6.googlevideo.com/videoplayback?id=dccea3f85533c87e&itag=22&source=picasa&begin=0&requiressl=yes&mm=30&mn=sn-4g5e6ns6&ms=nxu&mv=u&pl=25&sc=yes&ei=qabZXI7tMLGL8gPr66LYBA&susc=ph&app=fife&mime=video/mp4&cnr=14&dur=5488.198&lmt=1551223746762139&mt=1557767420&ipbits=0&cms_redirect=yes&keepalive=yes&ratebypass=yes&ip=116.203.58.181&expire=1557775049&sparams=ip,ipbits,expire,id,itag,source,requiressl,mm,mn,ms,mv,pl,sc,ei,susc,app,mime,cnr,dur,lmt&signature=3E29AA6B34BF53E8FC18866928DE2AC44A9FB5D7F6EB8739548D43318425BAB0.38DC3EC8D355011180C98997BAC8EA0634CB66B15A7F7F16D23EFCAE559E24EC&key=us0#f720p","default":true}]},{"name":"Cô Gái Flower","provider":{"name":"phim3s","viewUrl":"https://phim3s.pw/phim-le/co-gai-flower_6456/xem-phim/"},"nameOrigin":"Kowarekake no Orgel","year":"2009","thumbails":{"medium":"https://images2-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&gadget=a&no_expand=1&refresh=604800&url=http%3A%2F%2Fphim3s.pw%2Fdata%2Fimages%2Ffilms%2Fthumb%2Fkowarekake-no-orgel-kowarekake-no-orgel-2009.jpg%3Fsize%3D300"},"directors":["Nhiều Diễn Viên"],"actors":["Phim Hoạt Hình"],"genres":[""],"countries":["Nhật Bản"],"duration":28,"desc":"Câu chuyện xoay quanh Keiichiro, một chàng thanh niên trẻ sống độc thân. Anh đã phải trả qua rất nhiều nỗi đau trong cuộc đời mình kể từ khi gia đình anh chết bởi tai nạn giao thông mà anh là người duy nhất sống sót. Một ngày mưa khi anh đang tìm nơi trú ẩn trong một ngôi đền cũ. Anh đã phát hiện ra một cô gái nhỏ đang ngồi trên ghế và bị bao quanh bởi rác thải. Bản thân cô bé cũng là \"rác\" - một con robot đã bị người khác bỏ rơi ở đây. Anh đã đưa cô robot đến tiệm sửa chữa nhưng câu trả lời anh nhận được là không thể sửa được. Khi về đến nhà, anh đã để cô robot vào căn phòng tắm dơ bẩn. Đến sang hôm sau Keiichiro nhìn thấy cô bé robot trong nhà bếp và đang chuẩn bị bữa sáng. Cô bé quên mất tên của mình nên Keiichiro đã dựa theo bông hoa hướng dương trong phòng và đặt tên cô bé là Flower. Và cuộc sống của hai người bắt đầu diễn ra...","embeds":[{"resolution":360,"embedUrl":"https://00e9e64bac1a7e292dab77f4561ec1eb613a579af477885c83-apidata.googleusercontent.com/download/drive/v3beta/files/0B5JHaInEzQOIUXdaUFlweXZxeEk?qk=AD5uMEuWdTeyMdWmqOuFyYKXK-h29EO5WnWu6zIQtaguuRjgmb9cmNqkgpe-h3S25onVw7-HZDBqSE3tlXBk-4J1KUPeNx36jblIJh0wSSVbfPyuJ0KC5BlPK0FaW2_tkI4TpTClu6OyL5JXhweSyhzg15M7jxS6cmzFUU3mmSEmZjIq6wdB8_HcFkk1oFJSXmDmG1JJ9dC0O-Uq7LuVt9s_8SmWt7ejIijcRXHOSDYKj8E2UFsWCjG3B0hlZjZkXBojtH1l_4ko","default":true}]}]

/***/ }),
/* 118 */
/***/ (function(module, exports) {

module.exports = require("bcrypt-nodejs");

/***/ }),
/* 119 */
/***/ (function(module, exports) {

module.exports = require("body-parser");

/***/ }),
/* 120 */
/***/ (function(module, exports) {

module.exports = require("compression");

/***/ }),
/* 121 */
/***/ (function(module, exports) {

module.exports = require("cookie-parser");

/***/ }),
/* 122 */
/***/ (function(module, exports) {

module.exports = require("cors");

/***/ }),
/* 123 */
/***/ (function(module, exports) {

module.exports = require("fb");

/***/ }),
/* 124 */
/***/ (function(module, exports) {

module.exports = require("helmet");

/***/ }),
/* 125 */
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),
/* 126 */
/***/ (function(module, exports) {

module.exports = require("log-to-file");

/***/ }),
/* 127 */
/***/ (function(module, exports) {

module.exports = require("mongoose-float");

/***/ }),
/* 128 */
/***/ (function(module, exports) {

module.exports = require("morgan");

/***/ }),
/* 129 */
/***/ (function(module, exports) {

module.exports = require("passport-facebook");

/***/ }),
/* 130 */
/***/ (function(module, exports) {

module.exports = require("passport-jwt");

/***/ }),
/* 131 */
/***/ (function(module, exports) {

module.exports = require("passport-local");

/***/ }),
/* 132 */
/***/ (function(module, exports) {

module.exports = require("role-acl");

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getSubsSuggest = getSubsSuggest;
exports.getSubs = getSubs;
exports.getSubById = getSubById;
exports.createSub = createSub;
exports.updateSub = updateSub;
exports.deleteSub = deleteSub;

var _subModel = __webpack_require__(134);

var _subModel2 = _interopRequireDefault(_subModel);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _subUtil = __webpack_require__(136);

var util = _interopRequireWildcard(_subUtil);

var _helper = __webpack_require__(1);

var _slugify = __webpack_require__(14);

var _slugify2 = _interopRequireDefault(_slugify);

var _axios = __webpack_require__(38);

var _axios2 = _interopRequireDefault(_axios);

var _fileService = __webpack_require__(36);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
// eslint-disable-next-line no-unused-vars


async function getSubsSuggest(req, res, next) {
	try {
		const { nameOrigin, year } = req.query;
		if (year && nameOrigin) {
			const url = `https://www.studyphim.vn/movies/getSubtitle/vi/${(0, _slugify2.default)(nameOrigin, {
				lower: true
			})}-${year}/1`;

			await _axios2.default.get(url).then(response => {
				(0, _fileService.uploadFileByUrl)('/subtitles', 'true', url, function (subUrl) {
					res.subUrl = subUrl;
					next();
				});
			}).catch(e => {
				(0, _helper.log)(JSON.stringify(e), 'error-response.log');
				res.subUrl = '';
				next();
			});
			// subUrl = `https://www.studyphim.vn/movies/getSubtitle/vi/${slugify(
			// 	nameOrigin,
			// 	{ lower: true }
			// )}-${year}/1`
		}
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getSubs(req, res, next) {
	try {
		let _ref = await _subModel2.default.paginate({}, req.parsedParams),
		    { docs } = _ref,
		    pagination = _objectWithoutProperties(_ref, ['docs']);

		res.subs = docs;
		res.pagination = pagination;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function getSubById(req, res, next) {
	try {
		res.sub = await _subModel2.default.findById(req.params.id);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function createSub(req, res, next) {
	try {
		res.sub = await _subModel2.default.create(req.body);

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function updateSub(req, res, next) {
	try {
		let sub = await _subModel2.default.findById(req.params.id);

		Object.keys(req.body).forEach(key => {
			sub[key] = req.body[key];
		});
		await sub.save();
		res.sub = sub;

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

async function deleteSub(req, res, next) {
	try {
		const sub = await _subModel2.default.findById(req.params.id);

		await sub.remove();

		next();
	} catch (e) {
		(0, _helper.log)(JSON.stringify(e), 'error-response.log');
		return res.status(_httpStatus2.default.BAD_REQUEST).json(e);
	}
}

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _validator = __webpack_require__(10);

var _validator2 = _interopRequireDefault(_validator);

var _mongoose = __webpack_require__(3);

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongoosePaginate = __webpack_require__(7);

var _mongoosePaginate2 = _interopRequireDefault(_mongoosePaginate);

var _mongooseAutopopulate = __webpack_require__(6);

var _mongooseAutopopulate2 = _interopRequireDefault(_mongooseAutopopulate);

var _mongooseUniqueValidator = __webpack_require__(8);

var _mongooseUniqueValidator2 = _interopRequireDefault(_mongooseUniqueValidator);

var _slugify = __webpack_require__(14);

var _slugify2 = _interopRequireDefault(_slugify);

var _pluginService = __webpack_require__(9);

var pluginService = _interopRequireWildcard(_pluginService);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-unused-vars */
const ObjectId = _mongoose2.default.Schema.Types.ObjectId;


let subSchema = new _mongoose.Schema({
	subName: {
		type: String,
		required: [true, 'subName is required!'],
		trim: true,
		unique: true
	}
}, {
	timestamps: true
});

subSchema.statics = {};

subSchema.pre('save', function (next) {
	// this.slug = slugify(this.name, {
	// 	lower: true
	// })

	return next();
});

subSchema.plugin(_mongooseUniqueValidator2.default, {
	message: '{VALUE} already taken!'
});
subSchema.plugin(_mongoosePaginate2.default);
subSchema.plugin(_mongooseAutopopulate2.default);
subSchema.plugin(pluginService.logPost, { schemaName: 'Sub' });
subSchema.plugin(pluginService.setSlugUrl, { schemaName: 'Sub' });

exports.default = _mongoose2.default.model('Sub', subSchema);

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _express = __webpack_require__(2);

var _expressValidation = __webpack_require__(4);

var _expressValidation2 = _interopRequireDefault(_expressValidation);

var _httpStatus = __webpack_require__(0);

var _httpStatus2 = _interopRequireDefault(_httpStatus);

var _subController = __webpack_require__(133);

var subController = _interopRequireWildcard(_subController);

var _subValidation = __webpack_require__(137);

var _subValidation2 = _interopRequireDefault(_subValidation);

var _paramService = __webpack_require__(16);

var paramService = _interopRequireWildcard(_paramService);

var _roleMiddleware = __webpack_require__(12);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const router = new _express.Router();

/**
 * GET /items/stats => getSubsStats
 * GET /items => getSubs
 * GET /items/:id => getSubById
 * POST /items/ => createSub
 * PATCH/PUT /items/:id => updateSub
 * DELETE /items/:id => deleteSub
 */

// More router

// Default Rest router
/* eslint-disable no-unused-vars */
router.get('/suggest', subController.getSubsSuggest, function (req, res, next) {
  return res.status(_httpStatus2.default.OK).json({
    data: res.subUrl
  });
});
// .get(
// 	'/',
// 	accessControl('readAny', 'movie'),
// 	paramService.parseParam,
// 	validate(subValidation.index),
// 	subController.getSubs,
// 	function(req, res, next) {
// 		return res.status(HTTPStatus.OK).json({
// 			data: res.subs,
// 			pagination: res.pagination
// 		})
// 	}
// )
// .get('/:id', validate(subValidation.show), subController.getSubById, function(
// 	req,
// 	res,
// 	next
// ) {
// 	return res.status(HTTPStatus.OK).json({
// 		data: res.sub
// 	})
// })
// .post(
// 	'/',
// 	accessControl('createOwn', 'movie'),
// 	validate(subValidation.create),
// 	subController.createSub,
// 	function(req, res, next) {
// 		return res.status(HTTPStatus.OK).json({
// 			data: res.sub
// 		})
// 	}
// )
// .put(
// 	'/:id',
// 	accessControl('updateOwn', 'movie'),
// 	validate(subValidation.update),
// 	subController.updateSub,
// 	function(req, res, next) {
// 		return res.status(HTTPStatus.OK).json({
// 			data: res.sub
// 		})
// 	}
// )
// .delete(
// 	'/:id',
// 	accessControl('deleteOwn', 'movie'),
// 	validate(subValidation.delete),
// 	subController.deleteSub,
// 	function(req, res, next) {
// 		return res.sendStatus(HTTPStatus.OK)
// 	}
// )

exports.default = router;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.debug = debug;
/* eslint-disable no-console */
function debug(obj) {
	console.log(obj);
}

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _joi = __webpack_require__(5);

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
	stats: {},
	index: {},
	show: {},
	create: {},
	update: {},
	delete: {}
}; /* eslint-disable no-unused-vars */

/***/ })
/******/ ]);